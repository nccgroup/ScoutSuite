# -*- coding: utf-8 -*-

from ..resources import AzureCompositeResources

from .database_blob_auditing_policies import DatabaseBlobAuditingPolicies
from .database_threat_detection_policies import DatabaseThreatDetectionPolicies
from .replication_links import ReplicationLinks
from .transparent_data_encryptions import TransparentDataEncryptions


class Databases(AzureCompositeResources):
    _children = [
        DatabaseBlobAuditingPolicies,
        DatabaseThreatDetectionPolicies,
        ReplicationLinks,
        TransparentDataEncryptions,
    ]

    def __init__(self, resource_group_name, server_name, facade):
        self.resource_group_name = resource_group_name
        self.server_name = server_name
        self.facade = facade

    # TODO: make it really async.
    async def fetch_all(self):
        self['databases'] = {}

        for db in self.facade.databases.list_by_server(self.resource_group_name, self.server_name):
            # We do not want to scan 'master' database which is auto-generated by Azure and read-only:
            if db.name == 'master':
                continue

            self['databases'][db.name] = {
                'id': db.name,
            }
            await self._fetch_children(
                parent=self['databases'][db.name],
                resource_group_name=self.resource_group_name,
                server_name=self.server_name,
                database_name=db.name,
                facade=self.facade
            )
