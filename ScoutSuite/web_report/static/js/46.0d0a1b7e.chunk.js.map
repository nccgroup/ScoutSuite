{"version":3,"sources":["partials/azure/network.subscriptions.id.network_interfaces.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderAppSGLinks","ids","renderList","id","service","resource","renderAppSGLink","NetworkInterfaces","props","data","item","virtual_network_id","get","virtual_network","useAPI","getResourceEndpoint","label","valuePath","renderValue","valueOrNone","value","services","tags","title","errorPath","subnet","subnetName","subnets","name","renderSubnet","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"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","file":"static/js/46.0d0a1b7e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport { useAPI } from '../../../api/useAPI';\nimport { getResourceEndpoint } from '../../../api/paths';\n\nconst renderNetworkSG = id => {\n  return <ResourceLink\n    services=\"network\" resource=\"security_groups\"\n    id={id} />;\n};\n\nconst renderSubnet = (subnet, virtual_network) => {\n  if (!virtual_network) return <span>None</span>;\n  const subnetName = virtual_network.subnets[subnet.id].name;\n\n  return (\n    <ResourceLink\n      service=\"network\"\n      resource=\"virtual_networks\"\n      id={subnet.virtual_network_id}\n      name={subnetName}\n    />\n  );\n};\n\nconst renderAppSGLinks = ids => {\n  const renderAppSGLink = id => (\n    <ResourceLink\n      service=\"network\"\n      resource=\"application_security_groups\"\n      id={id}\n    />\n  );\n\n  return renderList(ids, '', id => renderAppSGLink(id));\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { data, item } = props;\n  const virtual_network_id = get(item, [\n    'ip_configuration',\n    'subnet',\n    'virtual_network_id',\n  ]);\n  const { data: virtual_network } = useAPI(\n    getResourceEndpoint('network', 'virtual_networks', virtual_network_id),\n  );\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Provisioning State\"\n          valuePath=\"provisioning_state\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Primary\"\n          valuePath=\"primary\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"IP Configurations\"\n          valuePath=\"ip_configurations\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Mac Address\"\n          valuePath=\"mac_address\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Interface Endpoint\"\n          valuePath=\"interface_endpoint\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Network Security Group\"\n          valuePath=\"network_security_group\"\n          renderValue={value =>\n            value ? renderNetworkSG(value) : <span>None</span>\n          }\n        />\n\n        <PartialValue\n          label=\"Enable IP Forwarding\"\n          valuePath=\"enable_ip_forwarding\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Enable Accelerated Networking\"\n          valuePath=\"enable_accelerated_networking\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"IP Configuration\">\n          <PartialValue\n            label=\"Name\"\n            valuePath=\"ip_configuration.name\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Provisioning State\"\n            valuePath=\"ip_configuration.provisioning_state\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Primary\"\n            valuePath=\"ip_configuration.primary\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Public IP Address\"\n            valuePath=\"ip_configuration.public_ip_address.ip_address\"\n            errorPath=\"ip_configuration.public_ip_address\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Address\"\n            valuePath=\"ip_configuration.private_ip_address\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Allocation Method\"\n            valuePath=\"ip_configuration.private_ip_allocation_method\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Address Version\"\n            valuePath=\"ip_configuration.private_ip_address_version\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Subnet\"\n            valuePath=\"ip_configuration.subnet\"\n            renderValue={subnet => renderSubnet(subnet, virtual_network)}\n          />\n\n          <PartialValue\n            label=\"Application Security Groups\"\n            valuePath=\"ip_configuration.application_security_groups\"\n            renderValue={value => renderAppSGLinks(value)}\n          />\n\n          <PartialValue\n            label=\"Application Gateway Backend Address Pools\"\n            valuePath=\"ip_configuration.application_gateway_backend_address_pools\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Load Balancer Backend Address Pools\"\n            valuePath=\"ip_configuration.load_balancer_backend_address_pools\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Load Balancer Inbound NAT Rules\"\n            valuePath=\"ip_configuration.load_balancer_inbound_nat_rules\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Virtual Network Taps\"\n            valuePath=\"ip_configuration.virtual_network_taps\"\n            renderValue={valueOrNone}\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}