{"version":3,"sources":["partials/aws/rds.regions.id.vpcs.id.snapshots.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Snapshots","props","data","attributes","get","isCluster","label","valuePath","renderValue","formatDate","errorPath","convertBoolToEnable","title","disabled","isEmpty","map","attribute","i","AttributeName","value","AttributeValues","values","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/30.a7be7a6b.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  formatDate,\n  convertBoolToEnable, \n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Snapshots = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const attributes = get(data, ['item', 'attributes']);\n  const isCluster = get(data, ['item', 'is_cluster']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        {isCluster ? (\n          <PartialValue\n            label=\"DB Cluster\"\n            valuePath=\"DBClusterIdentifier\"\n          />\n        ) : (\n          <PartialValue\n            label=\"RDS Instance\"\n            valuePath=\"DBInstanceIdentifier\"\n          />\n        )}\n        <PartialValue\n          label=\"Cluster Snapshot\"\n          valuePath=\"is_cluster\"\n        />\n        <PartialValue\n          label=\"Creation Time\"\n          valuePath=\"SnapshotCreateTime\"\n          renderValue={formatDate}\n        />\n        <PartialValue\n          label=\"Encryption\"\n          valuePath=\"Encrypted\"\n          errorPath=\"snapshot-not-encrypted\"\n          renderValue={convertBoolToEnable}\n        />\n        {!isCluster && (\n          <PartialValue\n            label=\"Option Group\"\n            valuePath=\"OptionGroupName\"\n          />\n        )}\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Attributes\"\n          disabled={isEmpty(attributes)}\n        >\n          <ul>\n            {attributes.map((attribute, i) => (\n              <li key={i}>\n                <PartialValue\n                  label={attribute.AttributeName}\n                  value={attribute.AttributeValues}\n                  errorPath={`attributes.${i}`}\n                  renderValue={values => (\n                    <ul>\n                      {!isEmpty(values) ? (\n                        values.map((value, i) => (\n                          <li key={i}>\n                            {value}\n                          </li>\n                        ))\n                      ) : (\n                        <li>No value</li>\n                      )}\n                    </ul>\n                  )}\n                />\n              </li>\n            ))}\n          </ul>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSnapshots.propTypes = propTypes;\n\nexport default Snapshots;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}