{"version":3,"sources":["partials/aws/vpc.regions.id.flow_logs.id/Informations/index.js","partials/aws/vpc.regions.id.flow_logs.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","formatDate","RegionDomain","props","data","tags","get","isEmpty","title","renderAwsTags","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","value","cx"],"mappings":"oJAoEeA,UA9DM,WACnB,OACE,qCACE,cAAC,IAAD,CACEC,MAAM,OACNC,UAAU,OACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,cACNC,UAAU,cACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,gBACNC,UAAU,gBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,kBACNC,UAAU,kBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,sBACNC,UAAU,sBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,8BACNC,UAAU,6BACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,eACNC,UAAU,eACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,uBACNC,UAAU,uBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,kBACNC,UAAU,kBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,aACNC,UAAU,aACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,2BACNC,UAAU,2BACVC,YAAaC,W,uICnBNE,UA1BM,SAAAC,GAAU,IACrBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAOC,IAAIF,EAAM,CAAC,OAAQ,QAAS,IAEzC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,UAAD,MAGF,cAAC,IAAD,WACIG,IAAQF,IACR,cAAC,IAAD,CAASG,MAAM,OAAf,SACGC,YAAcJ,Y,wDCTZK,IAda,SAAAP,GAAU,IAC5BQ,EAAaR,EAAbQ,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACV,GAAW,IAE/BK,EAKEL,EALFK,MACAM,EAIEX,EAJFW,WACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,QACAL,EACER,EADFQ,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGV,EACAa,IAAWH,GAAYI,QAG1Bd,EAGJ,OACE,cAAC,IAAkBe,SAAnB,CAA4BC,MAAOL,EAAnC,SACE,cAAC,IAAD,CACEX,MAAOY,EACPR,UAAWa,IAAG,mBAAoBP,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/33.027964fd.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { valueOrNone, formatDate } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"Name\"\n        valuePath=\"name\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Resource ID\"\n        valuePath=\"resource_id\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Creation Date\"\n        valuePath=\"creation_time\"\n        renderValue={formatDate}\n      />\n      <PartialValue\n        label=\"Flow Log Status\"\n        valuePath=\"flow_log_status\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Deliver Logs Status\"\n        valuePath=\"deliver_logs_status\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Deliver Logs Error Messages\"\n        valuePath=\"deliver_logs_error_message\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Traffic Type\"\n        valuePath=\"traffic_type\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Destination Type\"\n        valuePath=\"log_destination_type\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Destination\"\n        valuePath=\"log_destination\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Format\"\n        valuePath=\"log_format\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Max Aggregation Interval\"\n        valuePath=\"max_aggregation_interval\"\n        renderValue={valueOrNone}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape, renderAwsTags } from '../../../utils/Partials';\nimport { Partial } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const tags = get(data, ['item', 'tags'], []);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        {!isEmpty(tags) && (\n          <TabPane title=\"Tags\">\n            {renderAwsTags(tags)}\n          </TabPane>\n        )}\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}