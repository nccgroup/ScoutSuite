{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Usage/index.js"],"names":["Usage","ctx","useContext","PartialContext","basePath","PartialPathContext","value","get","item","renderUsageList","resources","service","type","isArray","renderList","renderResourceLink","Object","entries","map","i","name","list","makeTitle","className","resource_type","message","icon","fontSize"],"mappings":"4NAmEeA,UAhDD,WACZ,IAAMC,EAAMC,qBAAWC,KACjBC,EAAWF,qBAAWG,KACtBC,EAAQC,IAAIN,EAAIO,KAAMJ,GAGtBK,EAAkB,SAAlBA,EAAmBC,EAAWC,EAASC,GAArB,OACtBC,IAAQH,GACJI,YAAWJ,EAAW,GAAIK,YAAmBJ,EAASC,IAEtDI,OAAOC,QAAQP,GAAWQ,KAAI,WAAeC,GAAf,uBAAEC,EAAF,KAAQC,EAAR,YAC5B,6BACE,+BACGC,YAAUF,GACVX,EAAgBY,EAAMV,EAASC,OAH3BO,OASjB,OACE,sBAAKI,UAAU,uBAAf,UACGjB,GACC,6BACGU,OAAOC,QAAQX,GAAOY,KAAI,mCAAEP,EAAF,KAAaa,EAAb,KAAaA,cAAb,OACzBR,OAAOC,QAAQO,GAAeN,KAAI,WAAoBC,GAApB,uBAAEP,EAAF,KAAQF,EAAR,YAChC,gCACE,6BACE,oBAAIa,UAAU,iBAAd,mBACMD,YAAUX,GADhB,YAC4BW,YAAUV,QAGvCH,EAAgBC,EAAWC,EAASC,KAN7BO,YAYhBb,GACA,cAAC,IAAD,CACEmB,QAAQ,qCACRC,KAAM,cAAC,IAAD,CAAgCC,SAAS,mB","file":"static/js/96.a70efb7c.chunk.js","sourcesContent":["import React, { useContext }  from 'react';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport { \n  PartialContext, \n  PartialPathContext \n} from '../../../../components/Partial/context';\nimport { \n  makeTitle,\n  renderList,\n  renderResourceLink,\n} from '../../../../utils/Partials';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst Usage = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n\n  const renderUsageList = (resources, service, type) => \n    isArray(resources) \n      ? renderList(resources, '', renderResourceLink(service, type))\n      : (\n        Object.entries(resources).map(([name, list], i) => (\n          <ul key={i}>\n            <li>\n              {makeTitle(name)}\n              {renderUsageList(list, service, type)}\n            </li>\n          </ul>\n        ))\n      );\n\n  return (\n    <div className=\"security-group-usage\">\n      {value && (\n        <ul>\n          {Object.entries(value).map(([service, { resource_type }]) => (\n            Object.entries(resource_type).map(([type, resources], i) => (\n              <div key={i}>\n                <li>\n                  <h5 className=\"resource-title\">\n                    {`${makeTitle(service)} ${makeTitle(type)}`}\n                  </h5>\n                </li>\n                {renderUsageList(resources, service, type)}\n              </div>\n            ))\n          ))}\n        </ul>\n      )}\n      {!value && (\n        <WarningMessage\n          message=\"This security group is not in use.\"\n          icon={<CheckCircleOutlineOutlinedIcon fontSize=\"inherit\" />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Usage;\n"],"sourceRoot":""}