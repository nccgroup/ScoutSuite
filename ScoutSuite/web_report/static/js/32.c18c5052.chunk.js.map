{"version":3,"sources":["partials/aws/redshift.regions.id.vpcs.id.security_groups/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["SecurityGroups","props","data","ipRanges","get","groups","label","valuePath","title","disabled","isEmpty","map","range","i","CIDRIP","value","Status","name","EC2SecurityGroupName","UserId","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","renderValue","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/32.c18c5052.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const ipRanges = get(data, ['item', 'IPRanges']);\n  const groups = get(data, ['item', 'EC2SecurityGroups']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Descripition\"\n          valuePath=\"Description\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Rules\"\n          disabled={isEmpty(ipRanges) && isEmpty(groups)}\n        >\n          {!isEmpty(ipRanges) && (\n            <ul>\n              IP Addresses:\n              {ipRanges.map((range, i) => (\n                <li key={i}>\n                  <PartialValue\n                    label={range.CIDRIP}\n                    value={range.Status}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {!isEmpty(groups) && (\n            <ul>\n              EC2 Security Groups:\n              {groups.map((\n                {\n                  CIDRIP,\n                  EC2SecurityGroupName: name,\n                  UserId,\n                  Status,\n                }, i\n              ) => (\n                <li key={i}>\n                  <PartialValue\n                    label={CIDRIP}\n                    value={`${name} (AWS account ID: ${UserId}): ${Status}`}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}