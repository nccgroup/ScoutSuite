{"version":3,"sources":["partials/aws/cloudformation.regions.id.stacks.id/Informations/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js"],"names":["Informations","label","valuePath","renderValue","formatDate","value","className","errorPath","fontSize","isEmpty","map","arn","i","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","title","placement","arrow","Button","disabled","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","props","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","data","console","info"],"mappings":"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","file":"static/js/78.45572e71.chunk.js","sourcesContent":["import React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { formatDate } from '../../../../utils/Partials';\n\nimport './style.scss';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"Created on\"\n        valuePath=\"CreationTime\"\n        renderValue={formatDate}\n      />\n      <PartialValue\n        label=\"Role\"\n        valuePath=\"iam_role.name\"\n        renderValue={\n          // TODO: link to resource\n          value => value ? (\n            <>\n              {value}\n              <PartialValue\n                className=\"role-icon\"\n                errorPath={value}\n                renderValue={() => <ReportProblemOutlinedIcon fontSize=\"inherit\" />}\n              />\n            </>\n          ) : 'None'\n        }\n      />\n      <PartialValue\n        label=\"Termination protection enabled\"\n        valuePath=\"EnableTerminationProtection\"\n        errorPath=\"cloudformation_stack_no_termination_protection\"\n      />\n      <PartialValue\n        label=\"Configuration has drifted\"\n        valuePath=\"drifted\"\n        errorPath=\"cloudformation_stack_drifted\"\n      />\n      <PartialValue\n        label=\"Deletion policy\"\n        valuePath=\"deletion_policy\"\n        errorPath=\"cloudformation_stack_no_deletion_policy\"\n      />\n      <PartialValue\n        label=\"Notification ARNs\"\n        valuePath=\"notificationARNs\"\n        errorPath=\"cloudformation_stack_lacks_notifications\"\n        renderValue={value => !isEmpty(value) ? (\n          <ul>\n            {value.map((arn, i) => (\n              <li key={i}>\n                {arn}\n              </li>\n            ))}\n          </ul>\n        ) : 'None'}\n      />\n      <PartialValue\n        className=\"stack-description\"\n        valuePath=\"Description\"\n        renderValue={value => value && (\n          <>\n            <h4>Description</h4>\n            {value}\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n"],"sourceRoot":""}