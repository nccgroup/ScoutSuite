{"version":3,"sources":["partials/aws/vpc.regions.id.vpcs.id.subnets.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/WarningMessage/index.js"],"names":["RegionDomain","props","data","id","get","instances","flowLogs","label","valuePath","renderValue","name","valueOrNone","convertBoolToEnable","title","disabled","isEmpty","renderList","service","resource","errorPath","message","filter","value","renderFlowlogLink","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/11.5e0c9fe0.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  convertBoolToEnable,\n  valueOrNone,\n  renderList,\n  renderFlowlogLink,\n} from '../../../utils/Partials';\nimport { \n  Partial, \n  PartialValue,\n} from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport ResourceLink from '../../../components/ResourceLink';\nimport WarningMessage from '../../../components/WarningMessage';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const id = get(data, ['item', 'id']);\n  const instances = get(data, ['item', 'instances'], []);\n  const flowLogs = get(data, ['item', 'flow_logs']);\n\n  const renderInstanceLink = id => (\n    <ResourceLink \n      service=\"ec2\"\n      resource=\"instances\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\"\n          valuePath=\"name\"\n          renderValue={\n            name => name === id ? 'None' : name\n          }\n        />\n        <PartialValue\n          label=\"ID\"\n          valuePath=\"id\"\n        />\n        <PartialValue\n          label=\"VPC ID\"\n          valuePath=\"VpcId\"\n        />\n        <PartialValue\n          label=\"Availability Zone\"\n          valuePath=\"AvailabilityZone\"\n        />\n        <PartialValue\n          label=\"CIDR Block\"\n          valuePath=\"CidrBlock\"\n        />\n        <PartialValue\n          label=\"IPv6 CIDR Block\"\n          valuePath=\"CidrBlockv6\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue\n          label=\"Public IP on Launch\"\n          valuePath=\"MapPublicIpOnLaunch\"\n          renderValue={convertBoolToEnable}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Instances\"\n          disabled={isEmpty(instances)}\n        >\n          {renderList(instances, '', renderInstanceLink)}\n        </TabPane>\n        <TabPane title=\"Flow Logs\">\n          {isEmpty(flowLogs) ? (\n            <PartialValue\n              errorPath=\"no_flowlog\"\n              renderValue={() => (\n                <WarningMessage\n                  message=\"This subnet has no flow logs.\"\n                />\n              )}\n            />\n          ) : (\n            renderList(\n              flowLogs.filter(value => typeof value === 'string'), \n              '',\n              renderFlowlogLink,\n            )\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}