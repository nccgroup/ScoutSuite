{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.instances.id/Informations/index.js","partials/aws/ec2.regions.id.vpcs.id.instances.id/NetworkInterfaces/index.js","partials/aws/ec2.regions.id.vpcs.id.instances.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","convertBoolToEnable","formatDate","NetworkInterfaces","props","interfaces","Object","entries","map","i","id","value","Description","Association","PublicIp","PublicDnsName","Attachment","InstanceId","isEmpty","Ipv6Addresses","address","Ipv6Address","PrivateIpAddresses","Primary","PrivateIpAddress","Groups","renderResourcesAsList","Ec2Instance","data","path","get","useAPI","getRawEndpoint","replace","vpc","loading","networkInterfaces","metadata","userdata","secrets","item","name","region","findIndex","x","className","title","disabled","HttpEndpoint","errorPath","HttpTokens","split","key","values","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/17.f601f6ea.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\nimport { \n  valueOrNone,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"ID\"\n        valuePath=\"id\"\n      />\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"Availability Zone\"\n        valuePath=\"availability_zone\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"Reservation ID\"\n        valuePath=\"reservation_id\"\n      />\n      <PartialValue\n        label=\"IAM role\"\n        valuePath=\"iam_role\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Monitoring\"\n        valuePath=\"monitoring_enabled\"\n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue\n        label=\"Access Key Name\"\n        valuePath=\"KeyName\"\n      />\n      <PartialValue\n        label=\"State\"\n        valuePath=\"State.Name\"\n      />\n      <PartialValue\n        label=\"Instance Type\"\n        valuePath=\"InstanceType\"\n      />\n      <PartialValue\n        label=\"Up Since\"\n        valuePath=\"LaunchTime\"\n        renderValue={formatDate}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { renderResourcesAsList } from '../../../../utils/Partials';\nimport DetailedValue from '../../../../components/DetailedValue';\n\n\nconst propTypes = {\n  interfaces: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { interfaces } = props;\n\n  return (\n    Object.entries(interfaces).map(([id, value], i) => (\n      <div key={i}>\n        <h5>{id}</h5>\n        <ul>\n          {value.Description && (\n            <li>\n              <DetailedValue\n                label=\"Description\"\n                value={value.Description}\n              />\n            </li>\n          )}\n          {value.Association && (\n            <>\n              <li>\n                <DetailedValue\n                  label=\"Public IP\"\n                  value={value.Association.PublicIp}\n                />\n              </li>\n              <li>\n                <DetailedValue\n                  label=\"Public DNS\"\n                  value={value.Association.PublicDnsName}\n                />\n              </li>\n            </>\n          )}\n          {value.Attachment && (\n            <li>\n              <DetailedValue\n                label=\"Attached to Instance\"\n                value={value.Attachment.InstanceId}\n              />\n            </li>\n          )}\n          {!isEmpty(value.Ipv6Addresses) && (\n            <>\n              <li>IPv6 Addresses:</li>\n              <ul>\n                {value.Ipv6Addresses.map((address, i) => (\n                  <li key={i}>\n                    {address.Ipv6Address}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          {value.PrivateIpAddresses.map((address, i) => (\n            <li key={i}>\n              <DetailedValue\n                label={address.Primary ? \n                  'Primary Private IP' : 'Private IP'\n                }\n                value={address.PrivateIpAddress}\n              />\n            </li>\n          ))}\n          {!isEmpty(value.Groups) && (\n            <li>\n              <DetailedValue\n                label=\"Security Groups\"\n                value={renderResourcesAsList(value.Groups, 'GroupName')}\n              />\n            </li>\n          )}\n        </ul>\n      </div>\n    ))\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { \n  partialDataShape,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport NetworkInterfaces from './NetworkInterfaces';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Ec2Instance = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const { data: vpc, loading } = useAPI(getRawEndpoint(path.replace(/\\.instances.*/, '')));\n\n  if (!data || loading) return null;\n\n  const networkInterfaces = get(data, ['item', 'network_interfaces']);\n  const metadata = get(data, ['item', 'metadata_options']);\n  const userdata = get(data, ['item', 'user_data']) || '';\n  const secrets = get(data, ['item', 'user_data_secrets']);\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc.name} (${vpc.id})`;\n    data.item.region = vpc.path[vpc.path.findIndex(x => x === 'regions') + 1];\n  }\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <div className=\"ec2-instances\">\n        <TabsMenu>\n          <TabPane\n            title=\"Network Interfaces\"\n            disabled={isEmpty(networkInterfaces)}\n          >\n            <NetworkInterfaces interfaces={networkInterfaces} />\n          </TabPane>\n          <TabPane\n            title=\"Metadata Options\"\n            disabled={isEmpty(metadata)}\n          >\n            <div>\n              <PartialValue\n                label=\"Endpoint\"\n                value={metadata.HttpEndpoint}\n                errorPath=\"metadata_options\"\n              />\n              <PartialValue\n                label=\"HTTP Tokens\"\n                value={metadata.HttpTokens}\n                errorPath=\"metadata_options\"\n              />\n            </div>\n          </TabPane>\n          <TabPane\n            title=\"User Data\"\n            disabled={isEmpty(userdata)}\n          >\n            <div>\n              <h5>Data</h5>\n              {userdata.split('\\n').map((data, i) => (\n                <code key={i}>\n                  {data}\n                </code>\n              ))}\n              {!isEmpty(secrets) && (\n                <div>\n                  <h5 className=\"secrets-header\">\n                    <PartialValue\n                      value=\"Potential Secrets\"\n                      errorPath=\"potential_secrets\"\n                    />\n                  </h5>\n                  <ul>\n                    {Object.entries(secrets).map(([key, values], i) => (\n                      <li key={i}>\n                        {key}\n                        <ul>\n                          {values.map((value, i) => (\n                            <li key={i}>\n                              <code>{value}</code>\n                            </li>\n                          ))}\n                        </ul>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </TabPane>\n        </TabsMenu>\n      </div>\n    </Partial>\n  );\n};\n\nEc2Instance.propTypes = propTypes;\n\nexport default Ec2Instance;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}