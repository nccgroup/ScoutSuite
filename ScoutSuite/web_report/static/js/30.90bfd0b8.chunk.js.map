{"version":3,"sources":["partials/aws/acm.regions.id.certificates.id/Informations/index.js","partials/aws/acm.regions.id.certificates.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","formatDate","value","isEmpty","map","name","i","errorPath","LambdaFunctions","props","data","title","DomainName","ValidationDomain","ValidationMethod","ValidationStatus","usage","Name","OID","usedBy","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"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","file":"static/js/30.90bfd0b8.chunk.js","sourcesContent":["import React from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { valueOrNone, formatDate } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Domain Name\"\n        valuePath=\"DomainName\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Subject\"\n        valuePath=\"Subject\"\n        renderValue={formatDate}\n      />\n      <PartialValue\n        label=\"Subject Alternative Names\"\n        valuePath=\"SubjectAlternativeNames\"\n        renderValue={value => !isEmpty(value) && (\n          <ul>\n            {value.map((name, i) => (\n              <li key={i}>\n                {name}\n              </li>\n            ))}\n          </ul>\n        )}\n      />\n      <PartialValue\n        label=\"Status\"\n        valuePath=\"Status\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Issuer\"\n        valuePath=\"Issuer\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Type\"\n        valuePath=\"Type\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Created\"\n        valuePath=\"CreatedAt\"\n        renderValue={formatDate}\n      />\n      <PartialValue\n        label=\"Expiration\"\n        valuePath=\"NotAfter\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Renewal Eligibility\"\n        valuePath=\"RenewalEligibility\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Transparency Logging Preference\"\n        valuePath=\"Options.CertificateTransparencyLoggingPreference\"\n        errorPath=\"CertificateTransparencyLoggingPreference\"\n        renderValue={valueOrNone}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape, valueOrNone } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst LambdaFunctions = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Validation\">\n          <PartialValue \n            label=\"Domain Validation Options\"\n            valuePath=\"DomainValidationOptions\"\n            renderValue={value => (\n              <ul>\n                {value.map((\n                  {\n                    DomainName,\n                    ValidationDomain,\n                    ValidationMethod,\n                    ValidationStatus,\n                  }, i\n                ) => (\n                  <li key={i}>\n                    {`${DomainName} - ${ValidationDomain} - ${ValidationMethod} - ${ValidationStatus}`}\n                  </li>\n                ))}\n              </ul>\n            )}\n          />\n        </TabPane>\n        <TabPane title=\"Keys\">\n          <div>\n            <PartialValue \n              label=\"Key Algorithm\"\n              valuePath=\"KeyAlgorithm\"\n              renderValue={valueOrNone}\n            />\n            <PartialValue \n              label=\"Signature Algorithm\"\n              valuePath=\"SignatureAlgorithm\"\n              renderValue={valueOrNone}\n            />\n            <PartialValue \n              label=\"Key Usages\"\n              valuePath=\"KeyUsages\"\n              errorPath=\"ExtendedKeyUsages\"\n              renderValue={value => (\n                <ul>\n                  {isEmpty(value) ? (\n                    <li>None</li>\n                  ) : (\n                    value.map((usage, i) => (\n                      <li key={i}>\n                        {`${usage.Name} - ${usage.OID}`}\n                      </li>\n                    ))\n                  )}\n                </ul>\n              )}\n            />\n            <PartialValue \n              label=\"In Use By\"\n              valuePath=\"InUseBys\"\n              errorPath=\"InUseBy\"\n              renderValue={value => (\n                <ul>\n                  {isEmpty(value) ? (\n                    <li>None</li>\n                  ) : (\n                    value.map((usedBy, i) => (\n                      <li key={i}>\n                        {usedBy}\n                      </li>\n                    ))\n                  )}\n                </ul>\n              )}\n            />\n          </div>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nLambdaFunctions.propTypes = propTypes;\n\nexport default LambdaFunctions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}