{"version":3,"sources":["partials/azure/network.subscriptions.id.security_groups.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderSecurityRules","items","className","map","item","width","priority","name","protocol","source_port_ranges","source_address_prefixes_is_asg","service","resource","id","source_address_prefixes","destination_port_ranges","destination_address_prefixes","allow","renderSubnetLink","SecurityGroups","props","data","get","sortedSecurityRules","sortBy","security_rules","inbound","filter","direction","outbound","label","valuePath","renderValue","tags","renderList","valueOrNone","title","subnets","Object","values","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","value","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/41.e1ee9251.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  renderList,\n  valueOrNone,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink';\n\nconst renderSecurityRules = items => {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>Priority</td>\n            <td>Name</td>\n            <td>Protocol</td>\n            <td>Source Port</td>\n            <td>Source Filter</td>\n            <td>Destination Port</td>\n            <td>Destination Filter</td>\n            <td>Action</td>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <tr key={item.name}>\n              <td width=\"10%\" className=\"text-center\">\n                {item.priority}\n              </td>\n              <td width=\"40%\">{item.name}</td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.protocol}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.source_port_ranges}\n              </td>\n              {item.source_address_prefixes_is_asg && (\n                <td width=\"10%\" className=\"text-center\">\n                  <ResourceLink\n                    service=\"network\"\n                    resource=\"application_security_groups\"\n                    id={item.source_address_prefixes}\n                  />\n                </td>\n              )}\n              {!item.source_address_prefixes_is_asg && (\n                <td width=\"10%\" className=\"text-center\">\n                  {item.source_address_prefixes}\n                </td>\n              )}\n              <td width=\"10%\" className=\"text-center\">\n                {item.destination_port_ranges}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.destination_address_prefixes}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.allow && (\n                  <i className=\"fa fa-check-circle finding-good\"></i>\n                )}\n                {!item.allow && (\n                  <i className=\"fa fa-times-circle finding-danger\"></i>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst renderSubnetLink = ({id}) => (\n  <ResourceLink\n    service=\"network\" resource=\"virtual_networks\"\n    id={id} />\n);\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  const sortedSecurityRules = sortBy(item.security_rules, 'priority');\n  const inbound = sortedSecurityRules.filter(\n    ({ direction }) => direction === 'Inbound',\n  );\n  const outbound = sortedSecurityRules.filter(\n    ({ direction }) => direction === 'Outbound',\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"Name\" valuePath=\"name\" />\n\n        <PartialValue label=\"Location\" valuePath=\"location\" />\n\n        <PartialValue label=\"State\" valuePath=\"provisioning_state\" />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Inbound Security Rules\">\n          {renderSecurityRules(inbound)}\n        </TabPane>\n\n        <TabPane title=\"Outbound Security Rules\">\n          {renderSecurityRules(outbound)}\n        </TabPane>\n\n        <TabPane title=\"Attached Subnets\">\n          <PartialValue\n            valuePath=\"subnets\"\n            renderValue={subnets => renderList(Object.values(subnets), '', renderSubnetLink)}\n          />\n        </TabPane>\n\n        <TabPane title=\"Attached Network Interfaces\">\n          {/* ADD NETWORK INTERFACES */}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}