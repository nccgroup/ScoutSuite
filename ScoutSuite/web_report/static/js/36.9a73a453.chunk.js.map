{"version":3,"sources":["partials/aws/config.regions.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["ConfigRecorders","props","data","recorders","get","rules","label","valuePath","errorPath","renderValue","value","Boolean","toString","title","disabled","isEmpty","renderList","Object","entries","id","name","service","resource","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"oNA2EeA,UAxDS,SAAAC,GAAU,IACxBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAYC,IAAIF,EAAM,CAAC,OAAQ,aAAc,IAC7CG,EAAQD,IAAIF,EAAM,CAAC,OAAQ,SAAU,IAoB3C,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,MAAM,8BACNC,UAAU,kBACVC,UAAU,gBACVC,YAAa,SAAAC,GAAK,OAAIC,QAAQD,GAAOE,gBAGzC,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAM,YACNC,SAAUC,IAAQZ,GAFpB,SAIGa,YAAWC,OAAOC,QAAQf,GAAY,IAjCpB,SAAC,GAAD,uBAAEgB,EAAF,KAAQC,EAAR,KAAQA,KAAR,OACzB,cAAC,IAAD,CACEC,QAAQ,SACRC,SAAS,YACTH,GAAIA,EACJC,KAAMA,SA8BJ,cAAC,IAAD,CACEP,MAAM,QACNC,SAAUC,IAAQV,GAFpB,SAIGW,YAAWC,OAAOC,QAAQb,GAAQ,IA9BpB,SAAC,GAAD,uBAAEc,EAAF,KAAQC,EAAR,KAAQA,KAAR,OACrB,cAAC,IAAD,CACEC,QAAQ,SACRC,SAAS,QACTH,GAAIA,EACJC,KAAMA,iB,wDCjBGG,IAda,SAAAtB,GAAU,IAC5BuB,EAAavB,EAAbuB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACzB,GAAW,IAE/BY,EAKEZ,EALFY,MACAc,EAIE1B,EAJF0B,WACAb,EAGEb,EAHFa,SACAc,EAEE3B,EAFF2B,QACAJ,EACEvB,EADFuB,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGjB,EACAoB,IAAWH,GAAYI,QAG1BrB,EAGJ,OACE,cAAC,IAAkBsB,SAAnB,CAA4BzB,MAAOqB,EAAnC,SACE,cAAC,IAAD,CACElB,MAAOmB,EACPP,UAAWW,IAAG,mBAAoBN,GAClCH,WAAYA,EACZb,SAAUA,EACVc,QAASA,EALX,SAOGJ","file":"static/js/36.9a73a453.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  renderList,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ConfigRecorders = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const recorders = get(data, ['item', 'recorders'], {});\n  const rules = get(data, ['item', 'rules'], {});\n\n  const renderRecorderLink = ([id, { name }]) => (\n    <ResourceLink \n      service=\"config\"\n      resource=\"recorders\"\n      id={id}\n      name={name}\n    />\n  );\n\n  const renderRuleLink = ([id, { name }]) => (\n    <ResourceLink \n      service=\"config\"\n      resource=\"rules\"\n      id={id}\n      name={name}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"AWS Config Recorder enabled\"\n          valuePath=\"recorders_count\"\n          errorPath=\"NotConfigured\"\n          renderValue={value => Boolean(value).toString()}\n        />\n      </InformationsWrapper>\n      <TabsMenu>\n        <TabPane\n          title=\"Recorders\"\n          disabled={isEmpty(recorders)}\n        >\n          {renderList(Object.entries(recorders), '', renderRecorderLink)}\n        </TabPane>\n        <TabPane\n          title=\"Rules\"\n          disabled={isEmpty(rules)}\n        >\n          {renderList(Object.entries(rules), '', renderRuleLink)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nConfigRecorders.propTypes = propTypes;\n\nexport default ConfigRecorders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}