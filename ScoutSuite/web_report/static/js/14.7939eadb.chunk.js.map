{"version":3,"sources":["partials/aws/iam.roles.id/Informations/index.js","partials/aws/iam.roles.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/Partial/Policy/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","formatDate","IamRoles","props","data","role_policy","get","instances","lambdas","inline_policies","policies","tags","title","policy","PolicyDocument","policyPath","disabled","isEmpty","renderList","Object","values","renderResourceLink","entries","map","i","id","name","renderPolicyLink","renderAwsTags","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","value","cx","Policy","defaultOpen","hasError","useContext","PartialContext","path_to_issues","some","path","includes","policyTitle","renderJson","json","errorPath","object","JSON","stringify","replace","renderWithInnerHtml","policyContent","key","trigger","fontSize","triggerWhenOpen","transitionTime","open","size","defaultExpanded","expandIcon","defaultProps"],"mappings":"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","file":"static/js/14.7939eadb.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { formatDate, valueOrNone } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ID\" \n        valuePath=\"id\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Description\" \n        valuePath=\"description\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Creation Date\" \n        valuePath=\"CreateDate\"\n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Path\" \n        valuePath=\"path\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Max Session Duration\" \n        valuePath=\"max_session_duration\"\n        renderValue={valueOrNone}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  renderList,\n  renderResourceLink,\n  renderPolicyLink,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { Partial } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport Policy from '../../../components/Partial/Policy';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst IamRoles = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const role_policy = get(data, ['item', 'assume_role_policy'], {});\n  const instances = get(data, ['item', 'instance_profiles'], {});\n  const lambdas = get(data, ['item', 'awslambdas'], {});\n  const inline_policies = get(data, ['item', 'inline_policies'], {});\n  const policies = get(data, ['item', 'policies'], []);\n  const tags = get(data, ['item', 'Tags'], []);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Role Trust Policy\">\n          <Policy\n            policy={role_policy.PolicyDocument}\n            policyPath=\"assume_role_policy.PolicyDocument\"\n          />\n        </TabPane>\n        <TabPane \n          title=\"Instances\"\n          disabled={isEmpty(instances)}\n        >\n          {renderList(Object.values(instances), '', renderResourceLink('ec2', 'instances'))}\n        </TabPane>\n        <TabPane \n          title=\"Lambda Functions\"\n          disabled={isEmpty(lambdas)}\n        >\n          {renderList(Object.values(lambdas), '', renderResourceLink('awslambda', 'functions'))}\n        </TabPane>\n        <TabPane \n          title=\"Inline Policies\"\n          disabled={isEmpty(inline_policies)}\n        >\n          <>\n            {Object.entries(inline_policies).map(([id, policy], i) => (\n              <Policy\n                key={i}\n                name={policy.name}\n                policy={policy.PolicyDocument}\n                policyPath={`inline_policies.${id}.PolicyDocument`}\n              />\n            ))}\n          </>\n        </TabPane>\n        <TabPane \n          title=\"Managed Policies\"\n          disabled={isEmpty(policies)}\n        >\n          {renderList(policies, '', renderPolicyLink)}\n        </TabPane>\n        <TabPane \n          title=\"Tags\"\n          disabled={isEmpty(tags)}\n        >\n          {renderAwsTags(tags)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nIamRoles.propTypes = propTypes;\n\nexport default IamRoles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Collapsible from 'react-collapsible';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport size from 'lodash/size';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { PartialContext } from '../context';\nimport PartialValue from '../PartialValue';\nimport { renderWithInnerHtml } from '../../../utils/Partials';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  name: PropTypes.string,\n  policy: PropTypes.object.isRequired,\n  policyPath: PropTypes.string,\n  defaultOpen: PropTypes.bool,\n};\n\nconst defaultProps = {\n  defaultOpen: false,\n};\n\nconst Policy = props => {\n  const { \n    name, \n    policy, \n    policyPath,\n    defaultOpen,\n  } = props;\n\n  const { path_to_issues } = useContext(PartialContext);\n  const hasError = path_to_issues.some(path => path.includes(policyPath));\n\n  if (isEmpty(policy)) return null;\n\n  const policyTitle = (\n    <h4 className=\"policy-title\">\n      {name}\n    </h4>\n  );\n\n  const displayJson = object => \n    JSON.stringify(object, null, 2)\n      .replace(/ /gm, '&nbsp;')\n      .replace(/\\n/gm, '<br/>');\n\n  const renderJson = (json, errorPath) => (\n    <PartialValue \n      value={displayJson(json)}\n      errorPath={errorPath}\n      renderValue={value => (\n        renderWithInnerHtml(\n          value,\n        )\n      )}\n    />\n  );\n\n  const policyContent = (\n    <code>\n      {'{'}\n      {Object.entries(policy).map(([key, value], i) => (\n        <div \n          key={i}\n          className={cx({ 'inline': typeof(value) === 'string' })}\n        >\n          {`\"${key}\":\\xa0`}\n          {key === 'Statement' ? (\n            <>\n              [<br/>\n              {value.map((object, i) => (\n                <Collapsible\n                  key={i}\n                  trigger={\n                    <>\n                      <ExpandMoreIcon fontSize=\"inherit\"/>\n                      <span>{'{...}'}</span>\n                    </>\n                  }\n                  triggerWhenOpen={\n                    <ExpandLessIcon fontSize=\"inherit\"/>\n                  }\n                  transitionTime={1}\n                  open={true}\n                >\n                  {renderJson(object, `${policyPath}.Statement.${i}`)}\n                </Collapsible>\n              ))}\n              ]\n            </>\n          ) : (\n            <>\n              {renderJson(value)}\n            </>\n          )}\n          {i < size(policy) - 1 && ','}\n          <br/>\n        </div>    \n      ))}\n      {'}'}\n    </code>\n  );\n\n  return (\n    <div className=\"policy\">\n      {name ? (\n        <Accordion\n          defaultExpanded={defaultOpen || hasError}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon/>}\n          >\n            {policyTitle}\n          </AccordionSummary>\n          <AccordionDetails>\n            {policyContent}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        policyContent\n      )}\n    </div>\n  );\n};\n\nPolicy.propTypes = propTypes;\nPolicy.defaultProps = defaultProps;\n\nexport default Policy;\n"],"sourceRoot":""}