{"version":3,"sources":["partials/aws/config.regions.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["ConfigRecorders","props","data","recorders","get","rules","label","valuePath","errorPath","renderValue","value","Boolean","toString","title","disabled","isEmpty","renderList","Object","entries","id","name","service","resource","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"qNA2EeA,UAxDS,SAAAC,GAAU,IACxBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAYC,IAAIF,EAAM,CAAC,OAAQ,aAAc,IAC7CG,EAAQD,IAAIF,EAAM,CAAC,OAAQ,SAAU,IAoB3C,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,MAAM,8BACNC,UAAU,kBACVC,UAAU,gBACVC,YAAa,SAAAC,GAAK,OAAIC,QAAQD,GAAOE,gBAGzC,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAM,YACNC,SAAUC,IAAQZ,GAFpB,SAIGa,YAAWC,OAAOC,QAAQf,GAAY,IAjCpB,SAAC,GAAD,uBAAEgB,EAAF,KAAQC,EAAR,KAAQA,KAAR,OACzB,cAAC,IAAD,CACEC,QAAQ,SACRC,SAAS,YACTH,GAAIA,EACJC,KAAMA,SA8BJ,cAAC,IAAD,CACEP,MAAM,QACNC,SAAUC,IAAQV,GAFpB,SAIGW,YAAWC,OAAOC,QAAQb,GAAQ,IA9BpB,SAAC,GAAD,uBAAEc,EAAF,KAAQC,EAAR,KAAQA,KAAR,OACrB,cAAC,IAAD,CACEC,QAAQ,SACRC,SAAS,QACTH,GAAIA,EACJC,KAAMA,iB,iCCzCZ,0HAEMG,EAAgB,CACpBC,cAAe,GACfC,KAAM,IAGKC,EAAiBC,IAAMC,cAAcL,GACrCM,EAAqBF,IAAMC,cAAc,IACzCE,EAAoBH,IAAMC,eAAc,gB,oECgBtCG,IAdQ,SAAC9B,GAAW,IACzB+B,EAAmB/B,EAAnB+B,KAAMC,EAAahC,EAAbgC,SAERC,EAAWC,qBAAWN,KAE5B,OACE,cAAC,IAAmBO,SAApB,CAA6B1B,MAAO2B,YAAYH,EAAUF,GAA1D,SACGC,M,uNC6DQK,EA9DM,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,QAASkB,EAAoB,EAApBA,QAASP,EAAW,EAAXA,KAAW,EAK/CG,qBAAWK,KAHbC,EAFiD,EAEjDA,WACAC,EAHiD,EAGjDA,aACAC,EAJiD,EAIjDA,gBAGMC,EAAoBC,cAApBD,gBA8BFE,EAAQ1C,IAAIqC,EAAY,CAACpB,EAASkB,GAAU,IAAIQ,SAASf,GAE/D,OACE,cAACgB,EAAA,EAAD,CACEnC,MACEiC,EACI,sCACA,iCAENG,UAAU,MACVC,OAAK,EAPP,SASE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAU,gBACVC,QAASR,EA7BA,WACbH,EAAgBtB,EAASkB,EAASP,GAClCY,EACE,qBACA,CACEW,QAAS,QACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAtBR,WACVhB,EAAarB,EAASkB,EAASP,GAC/BY,EACE,0DACA,CACEW,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAgChB,SAKGZ,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,S,QCpB5Ba,EAAe,SAAA1D,GAAU,IA4BzB2D,EA1BFtD,EAUEL,EAVFK,MACAuD,EASE5D,EATF4D,UACAtD,EAQEN,EARFM,UACAC,EAOEP,EAPFO,UACA6C,EAMEpD,EANFoD,UACAS,EAKE7D,EALF6D,OACAC,EAIE9D,EAJF8D,QACAC,EAGE/D,EAHF+D,aACAvD,EAEER,EAFFQ,YACAwD,EACEhE,EADFgE,kBAGIC,EAASC,cACTC,EAAMjC,qBAAWT,KACjBQ,EAAWC,qBAAWN,KACtBwC,EAAgBlC,qBAAWL,KAE3BwC,EAAgBjC,YAAY4B,GAAqB/B,EAAU3B,GAC7DG,EAAQD,EACVR,EAAMS,OAASN,IAAIgE,EAAI3C,KAAM6C,EAAerE,EAAMS,SAG/B,mBAAVA,IACTA,EAAQ6D,OAAO7D,IAIbF,GAEFoD,GADcY,IAAQhE,GAAaA,EAAY,CAACA,IACzBiE,KAAI,SAAAzC,GAAI,OAC7BK,YAAY4B,GAAqB/B,EAAUF,MAG7C4B,EAAiB,CAACU,GAGpB,IAAMI,EAAWd,EAAee,MAAK,SAAA3C,GAAI,OACvCoC,EAAIQ,eAAe7B,SAASf,MAExB6C,EAAQT,EAAIS,MAQlB,GANAC,qBAAU,WACJJ,GACFL,EAAcQ,KAEf,CAACA,SAEUE,IAAVrE,GAAiC,OAAVA,EACzB,OAAO,KAGT,IAAMsE,EACJ,cAAC,EAAD,CACE3D,QAAS6C,EAAO7C,QAASkB,QAAS2B,EAAO3B,QACzCP,KAAI,UAAKoC,EAAIpC,KAAT,YAAiB4B,EAAe,MAGlCqB,EACJ,uBAAM5B,UAAW6B,IAAGR,GAAYQ,IAAG,QAASL,IAA5C,UACGnE,EACAgE,GAAYM,KAIjB,OACE,cAACG,EAAA,EAAD,CACE9B,UAAW6B,IAAG7B,EAAW,gBAAiB,CAAES,WAC5CxD,MAAOA,EACPuD,UAAWA,EACXnD,MACEqD,EACE,cAACf,EAAA,EAAD,yBAASnC,MAAOH,GAAWsD,GAA3B,aACGiB,KAGHA,KAQVtB,EAAayB,aApGQ,CACnB9E,MAAO,GACPuD,UAAW,KACXnD,MAAO,KACPH,UAAW,KACXC,UAAW,KACXsD,QAAQ,EACRC,SAAS,EACTC,aAAc,CACZqB,WAAY,IACZpC,UAAW,aAEbxC,YAAa,SAAAC,GAAK,OAAIA,IA0FTiD,O,sKCjHA2B,G,MAdQ,SAACrF,GAAW,IACzBC,EAAmBD,EAAnBC,KAAM+B,EAAahC,EAAbgC,SAId,OAFAsD,QAAQC,KAAK,eAAgBtF,GAG3B,cAAC,IAAekC,SAAhB,CAAyB1B,MAAOR,EAAhC,SACG+B,M,0EChBP,IAAIwD,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCzE,OAAO2E,eAAeC,EAAS,aAAc,CAC3CnF,OAAO,IAETmF,EAAQC,aAAU,EAElB,IAAInE,EAAQgE,EAAwBD,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,KAElBI,SAAuBnE,EAAMqE,cAAc,OAAQ,CACnFC,EAAG,sBACD,UAEJJ,EAAQC,QAAUC,G,wDCKHG,IAda,SAAAjG,GAAU,IAC5BgC,EAAahC,EAAbgC,SAER,OACE,sBAAKoB,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCpB,O,iMCyCQkE,G,OAtCQ,SAAClG,GAAW,IAE/BY,EAKEZ,EALFY,MACAuF,EAIEnG,EAJFmG,WACAtF,EAGEb,EAHFa,SACAwC,EAEErD,EAFFqD,QACArB,EACEhC,EADFgC,SAN8B,EASIoE,mBAAS,IATb,mBASzBC,EATyB,KASbjC,EATa,KAW1BkC,EAAgBD,EAElB,qCACGzF,EACA2F,IAAWF,GAAYG,QAG1B5F,EAGJ,OACE,cAAC,IAAkBuB,SAAnB,CAA4B1B,MAAO2D,EAAnC,SACE,cAAC,IAAD,CACExD,MAAO0F,EACPlD,UAAW6B,IAAG,mBAAoBoB,GAClCF,WAAYA,EACZtF,SAAUA,EACVwC,QAASA,EALX,SAOGrB,S","file":"static/js/27.abbf8c8f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  renderList,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ConfigRecorders = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const recorders = get(data, ['item', 'recorders'], {});\n  const rules = get(data, ['item', 'rules'], {});\n\n  const renderRecorderLink = ([id, { name }]) => (\n    <ResourceLink \n      service=\"config\"\n      resource=\"recorders\"\n      id={id}\n      name={name}\n    />\n  );\n\n  const renderRuleLink = ([id, { name }]) => (\n    <ResourceLink \n      service=\"config\"\n      resource=\"rules\"\n      id={id}\n      name={name}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"AWS Config Recorder enabled\"\n          valuePath=\"recorders_count\"\n          errorPath=\"NotConfigured\"\n          renderValue={value => Boolean(value).toString()}\n        />\n      </InformationsWrapper>\n      <TabsMenu>\n        <TabPane\n          title=\"Recorders\"\n          disabled={isEmpty(recorders)}\n        >\n          {renderList(Object.entries(recorders), '', renderRecorderLink)}\n        </TabPane>\n        <TabPane\n          title=\"Rules\"\n          disabled={isEmpty(rules)}\n        >\n          {renderList(Object.entries(rules), '', renderRuleLink)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nConfigRecorders.propTypes = propTypes;\n\nexport default ConfigRecorders;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}