{"version":3,"sources":["partials/aws/cloudtrail.regions.id.trails.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/WarningMessage/index.js"],"names":["RegionDomain","props","data","isLogging","get","scoutLink","className","label","valuePath","message","renderValue","convertBoolToEnable","formatDate","errorPath","value","service","resource","id","valueOrNone","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","title","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/42.034d4e66.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { \n  partialDataShape, \n  convertBoolToEnable,\n  formatDate,\n  valueOrNone,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport ResourceLink from '../../../components/ResourceLink';\nimport WarningMessage from '../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const isLogging = get(data, ['item', 'IsLogging']);\n  const scoutLink = get(data, ['item', 'scout_link']);\n\n  return (\n    <Partial data={data}>\n      <div className=\"cloudtrail-trails\">\n        <h4>Informations</h4>\n        <PartialValue\n          label=\"ARN\"\n          valuePath=\"arn\"\n        />\n        <PartialValue\n          label=\"Region\"\n          valuePath=\"HomeRegion\"\n        />\n        {scoutLink ? (\n          <WarningMessage\n            message=\"Multi-trail region\"\n          />\n        ) : (\n          <>\n            <PartialValue\n              label=\"Logging\"\n              valuePath=\"IsLogging\"\n              renderValue={convertBoolToEnable}\n            />\n            <PartialValue\n              label=\"Start Logging Time\"\n              valuePath=\"StartLoggingTime\"\n              renderValue={formatDate}\n            />\n            <PartialValue\n              label=\"Stop Logging Time\"\n              valuePath=\"StopLoggingTime\"\n              renderValue={formatDate}\n            />\n            <PartialValue\n              label=\"Multi Region\"\n              valuePath=\"IsMultiRegionTrail\"\n              errorPath=\"IsLogging\"\n              renderValue={convertBoolToEnable}\n            />\n            <PartialValue\n              label=\"Management Events\"\n              valuePath=\"ManagementEventsEnabled\"\n              errorPath=\"cloudtrail-management-events-disabled\"\n              renderValue={convertBoolToEnable}\n            />\n            <PartialValue\n              label=\"Data Events\"\n              valuePath=\"DataEventsEnabled\"\n              errorPath=\"cloudtrail-data-events-disabled\"\n              renderValue={convertBoolToEnable}\n            />\n            <PartialValue\n              label=\"Include Global Services\"\n              valuePath=\"IncludeGlobalServiceEvents\"\n              errorPath={[\n                'GlobalServicesDuplicated',\n                'IncludeGlobalServiceEvents',\n              ]}\n              renderValue={value => convertBoolToEnable(value && isLogging)}\n            />\n            <PartialValue\n              label=\"Destination S3 Bucket Name\"\n              valuePath=\"bucket_id\"\n              renderValue={value => (\n                <ResourceLink \n                  service=\"s3\"\n                  resource=\"buckets\"\n                  id={value}\n                />\n              )}\n            />\n            <PartialValue\n              label=\"Log File Validation Enabled\"\n              valuePath=\"LogFileValidationEnabled\"\n              errorPath=\"LogFileValidationDisabled\"\n              renderValue={convertBoolToEnable}\n            />\n            <PartialValue\n              label=\"KMS Key\"\n              valuePath=\"KmsKeyId\"\n              errorPath=\"cloudtrail-kms-key-unused\"\n              renderValue={valueOrNone}\n            />\n            <PartialValue\n              label=\"Latest CloudWatch Logs Delivery Time\"\n              valuePath=\"LatestCloudWatchLogsDeliveryTime\"\n              errorPath=\"TrailCloudwatchNoIntegration\"\n              renderValue={formatDate}\n            />\n          </>\n        )}\n      </div>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}