{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Informations/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/RulesList/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Usage/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/WarningMessage/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","RulesList","ctx","useContext","PartialContext","basePath","PartialPathContext","rules","get","item","isDefault","renderIpAddresses","title","addresses","path","map","address","i","value","errorPath","renderValue","CIDRName","CIDR","className","Object","entries","protocols","name","ports","groups","port_name","port","cidrs","Ipv6Ranges","security_groups","group","GroupName","service","resource","id","GroupId","UserId","message","Usage","renderUsageList","resources","type","isArray","renderList","renderResourceLink","list","makeTitle","resource_type","icon","fontSize","Ec2SecurityGroups","props","data","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","defaultValues","path_to_issue","React","createContext","PartialTabContext","PartialSection","children","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","setIssueLevel","fullValuePath","String","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","WarningMessage","match"],"mappings":"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","file":"static/js/6.252f0f8d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue label=\"ID\" valuePath=\"id\" />\n      <PartialValue label=\"ARN\" valuePath=\"arn\" />\n      <PartialValue label=\"Region\" valuePath=\"region\" />\n      <PartialValue label=\"VPC\" valuePath=\"vpc\" />\n      <PartialValue label=\"Description\" valuePath=\"description\" />\n    </>\n  );\n};\n\nexport default Informations;\n","import React, { useContext }  from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\nimport { PartialValue } from '../../../../components/Partial';\nimport ResourceLink from '../../../../components/ResourceLink';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst RulesList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const rules = get(ctx.item, basePath);\n\n  const isDefault = get(ctx.item, 'name') === 'default';\n\n  const renderIpAddresses = (title, addresses, path) => (\n    <li>\n      {`${title}:`}\n      <ul>\n        {addresses.map((address, i) => (\n          <li key={i}>\n            <PartialValue\n              value={address}\n              errorPath={`${path}.cidrs.${i}.CIDR`}\n              renderValue={value =>\n                value.CIDRName \n                  ? `${value.CIDR} (${value.CIDRName})`\n                  : value.CIDR\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const renderSecurityGroups = (groups, path) => (\n    <li>\n      EC2 security groups:\n      <ul>\n        {groups.map((group, i) => (\n          <li key={i}>\n            <PartialValue\n              value={group}\n              errorPath={`${path}.cidrs.security_groups.${i}`}\n              renderValue={value =>\n                value.GroupName\n                  ? (\n                    <span>\n                      {`${value.GroupName} (`}\n                      <ResourceLink \n                        service=\"ec2\"\n                        resource=\"security_groups\"\n                        id={value.GroupId}\n                        name={value.GroupId}\n                      />\n                      {')'}\n                    </span>\n                  ) : `${value.GroupId} (AWS Account ID: ${value.UserId})`\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <>\n      <ul className=\"rules-list\">\n        {Object.entries(rules.protocols).map(([name, { ports }], i) => (\n          <div key={i}>\n            <li>{name}</li>\n            <ul>\n              <li>\n                Ports:\n                <ul>\n                  {Object.entries(ports).map(([port_name, port], i) => (\n                    <div key={i}>\n                      <li>\n                        <PartialValue\n                          value={port_name}\n                          errorPath={`protocols.${name}.ports.${port_name}`}\n                        />\n                      </li>\n                      <ul>\n                        {port.cidrs && (\n                          renderIpAddresses(\n                            'IP adresses',\n                            port.cidrs, \n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.Ipv6Ranges && (\n                          renderIpAddresses(\n                            'IPv6 addresses',\n                            port.Ipv6Ranges,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.security_groups && (\n                          renderSecurityGroups(\n                            port.security_groups,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                      </ul>\n                    </div>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </ul>\n      {isDefault && (\n        <PartialValue\n          errorPath=\"default_with_rules\"\n          renderValue={() => (\n            <WarningMessage\n              className=\"rules-list__warning-message\"\n              message=\"Default security groups should have no rules.\"\n            />\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RulesList;\n","import React, { useContext }  from 'react';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport { \n  PartialContext, \n  PartialPathContext \n} from '../../../../components/Partial/context';\nimport { \n  makeTitle,\n  renderList,\n  renderResourceLink,\n} from '../../../../utils/Partials';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst Usage = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n\n  const renderUsageList = (resources, service, type) => \n    isArray(resources) \n      ? renderList(resources, '', renderResourceLink(service, type))\n      : (\n        Object.entries(resources).map(([name, list], i) => (\n          <ul key={i}>\n            <li>\n              {makeTitle(name)}\n              {renderUsageList(list, service, type)}\n            </li>\n          </ul>\n        ))\n      );\n\n  return (\n    <div className=\"security-group-usage\">\n      {value && (\n        <ul>\n          {Object.entries(value).map(([service, { resource_type }]) => (\n            Object.entries(resource_type).map(([type, resources], i) => (\n              <div key={i}>\n                <li>\n                  <h5 className=\"resource-title\">\n                    {`${makeTitle(service)} ${makeTitle(type)}`}\n                  </h5>\n                </li>\n                {renderUsageList(resources, service, type)}\n              </div>\n            ))\n          ))}\n        </ul>\n      )}\n      {!value && (\n        <WarningMessage\n          message=\"This security group is not in use.\"\n          icon={<CheckCircleOutlineOutlinedIcon fontSize=\"inherit\" />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Usage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getVpcFromPath, getRegionFromPath } from '../../../utils/Api';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialSection } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport RulesList from './RulesList';\nimport Usage from './Usage';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Ec2SecurityGroups = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.ec2.regions.${region}.vpcs.${vpcId}.name`)\n  );\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc} (${vpcId})`;\n    data.item.region = region;\n  }\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Egress Rules\">\n          <PartialSection path=\"rules.egress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Ingress Rules\">\n          <PartialSection path=\"rules.ingress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Usage\">\n          <PartialSection path=\"used_by\">\n            <Usage />\n          </PartialSection>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nEc2SecurityGroups.propTypes = propTypes;\n\nexport default Ec2SecurityGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}