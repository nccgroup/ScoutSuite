{"version":3,"sources":["partials/aws/emr.regions.id.vpcs.id.clusters.id/Informations/index.js","partials/aws/emr.regions.id.vpcs.id.clusters.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","Clusters","props","data","path","get","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","item","name","attributes","renderGroupLink","id","service","resource","title","renderValue","valueOrNone","value","EmrManagedMasterSecurityGroup","disabled","EmrManagedSlaveSecurityGroup","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","match"],"mappings":"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","file":"static/js/14.7e0e6f6e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"ID\"\n        valuePath=\"id\"\n      />\n      <PartialValue\n        label=\"Availability Zone\"\n        valuePath=\"Ec2InstanceAttributes.Ec2AvailabilityZone\"\n      />\n      <PartialValue\n        label=\"Status\"\n        valuePath=\"Status.State\"\n      />\n      <PartialValue\n        label=\"Instance Profile\"\n        valuePath=\"Ec2InstanceAttributes.IamInstanceProfile\"\n      />\n      <PartialValue\n        label=\"Visibile to all users\"\n        valuePath=\"VisibleToAllUsers\"\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape, valueOrNone } from '../../../utils/Partials';\nimport { useAPI } from '../../../api/useAPI';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { getRegionFromPath, getVpcFromPath } from '../../../utils/Api';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Clusters = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.ec2.regions.${region}.vpcs.${vpcId}`)\n  );\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc.name} (${vpcId})`;\n    data.item.region = region;\n  }\n\n  const attributes = get(data, ['item', 'Ec2InstanceAttributes']);\n\n  const renderGroupLink = (id, name) => (\n    <ResourceLink \n      service=\"ec2\"\n      resource=\"security_groups\"\n      id={id}\n      name={name}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Master\">\n          <div>\n            <PartialValue \n              label=\"Public DNS\"\n              valuePath=\"MasterPublicDnsName\"\n              renderValue={valueOrNone}\n            />\n            <PartialValue \n              label=\"Security Group\"\n              value={get(\n                vpc,\n                ['security_groups', attributes.EmrManagedMasterSecurityGroup, 'name']\n              )}\n              renderValue={value => (\n                renderGroupLink(\n                  attributes.EmrManagedMasterSecurityGroup,\n                  value,\n                )\n              )}\n            />\n          </div>\n        </TabPane>\n        <TabPane \n          title=\"Slave\"\n          disabled={isEmpty(attributes.EmrManagedSlaveSecurityGroup)}\n        >\n          <PartialValue \n            label=\"Security Group\"\n            value={get(\n              vpc,\n              ['security_groups', attributes.EmrManagedSlaveSecurityGroup, 'name']\n            )}\n            renderValue={value => (\n              renderGroupLink(\n                attributes.EmrManagedSlaveSecurityGroup,\n                value,\n              )\n            )}\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nClusters.propTypes = propTypes;\n\nexport default Clusters;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}