{"version":3,"sources":["partials/aws/elb.regions.id.vpcs.id.elbs.id/Informations/index.js","partials/aws/elb.regions.id.vpcs.id.elbs.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","renderValue","value","map","zone","i","ELBs","props","data","path","get","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","item","arn","name","listeners","attributes","securityGroups","instances","subnets","tags","title","Object","entries","port","listener","errorPath","SslPolicy","Protocol","renderAttributes","attribute","join","isObject","isArray","x","Value","Key","key","disabled","renderList","renderSecurityGroupLink","id","service","resource","renderAwsTags","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","match"],"mappings":"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","file":"static/js/12.a11acd52.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"DNS\"\n        valuePath=\"DNSName\"\n      />\n      <PartialValue\n        label=\"Scheme\"\n        valuePath=\"Scheme\"\n      />\n      <PartialValue\n        label=\"Availability zones\"\n        valuePath=\"AvailabilityZones\"\n        renderValue={value => (\n          <ul>\n            {value.map((zone, i) => (\n              <li key={i}>{zone}</li>\n            ))}\n          </ul>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getVpcFromPath, getRegionFromPath } from '../../../utils/Api';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { \n  partialDataShape,\n  renderList,\n  renderSecurityGroupLink,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ELBs = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.elb.regions.${region}.vpcs.${vpcId}`)\n  );\n\n  if (isEmpty(data.item) || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.arn = vpc.arn;\n    data.item.vpc = `${vpc.name} (${vpcId})`;\n  }\n\n  const listeners = get(data, ['item', 'listeners'], {});\n  const attributes = get(data, ['item', 'attributes'], {});\n  const securityGroups = get(data, ['item', 'security_groups'], []);\n  const instances = get(data, ['item', 'instances'], []);\n  const subnets = get(data, ['item', 'Subnets'], []);\n  const tags = get(data, ['item', 'tags'], []);\n\n  const renderAttributes = (attribute, path = []) => {\n    const label = path.join('.');\n    if (!isObject(attribute)) {\n      return (\n        <li key={label}>\n          <PartialValue\n            label={label}\n            value={attribute}\n            errorPath={`attributes.${label}`}\n          />\n        </li>\n      );\n    }\n  \n    if (isArray(attribute)) {\n      return (\n        <li key={label}>\n          <PartialValue\n            label={label}\n            value={attribute}\n            renderValue={value => value.map((x, i) => (\n              <ul key={i}>\n                {renderAttributes(x.Value, [x.Key])}\n              </ul>\n            ))}\n          />\n        </li>\n      ); \n    }\n  \n    return Object.entries(attribute).map(([key, value]) => (\n      renderAttributes(value, [...path, key])\n    ));\n  };\n\n  const renderInstanceLink = id => (\n    <ResourceLink \n      service=\"ec2\"\n      resource=\"instances\"\n      id={id}\n    />\n  );\n\n  const renderSubnetLink = id => (\n    <ResourceLink \n      service=\"vpc\"\n      resource=\"subnets\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <div>\n        <TabsMenu>\n          <TabPane title=\"Listeners\">\n            <ul>\n              {Object.entries(listeners).map(([port, listener], i) => (\n                <li key={i}>\n                  <PartialValue\n                    value={{\n                      port,\n                      ...listener,\n                    }}\n                    errorPath={`listeners.${port}`}\n                    renderValue={value => value.SslPolicy ? (\n                      <>\n                        {`${value.port} (${value.Protocol}, `}\n                        <PartialValue\n                          value={value.SslPolicy}\n                          errorPath={`listeners.${value.port}.SslPolicy`}\n                        />\n                        {')'}\n                      </>\n                    ) : (\n                      `${value.port} (${value.Protocol})`\n                    )}\n                  />\n                </li>\n              ))}\n            </ul>\n          </TabPane>\n          <TabPane title=\"Attributes\">\n            <ul>\n              {renderAttributes(attributes)}\n            </ul>\n          </TabPane>\n          <TabPane\n            title=\"Security Groups\"\n            disabled={isEmpty(securityGroups)}\n          >\n            {renderList(securityGroups, '', renderSecurityGroupLink)}\n          </TabPane>\n          <TabPane\n            title=\"Destination\"\n            disabled={isEmpty(instances) && isEmpty(subnets)}\n          >\n            <div>\n              {!isEmpty(instances) && (\n                <>\n                  <h5>Instances</h5>\n                  {renderList(instances, '', renderInstanceLink)}\n                </>\n              )}\n              {!isEmpty(subnets) && (\n                <>\n                  <h5>Subnets</h5>\n                  {renderList(subnets, '', renderSubnetLink)}\n                </>\n              )}\n            </div>\n          </TabPane>\n          {!isEmpty(tags) && (\n            <TabPane title=\"Tags\">\n              {renderAwsTags(tags)}\n            </TabPane>\n          )}\n        </TabsMenu>\n      </div>\n    </Partial>\n  );\n};\n\nELBs.propTypes = propTypes;\n\nexport default ELBs;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}