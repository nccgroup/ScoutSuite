{"version":3,"sources":["partials/aws/cloudwatch.regions.id.alarms.id/Informations/index.js","partials/aws/cloudwatch.regions.id.alarms.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/WarningMessage/index.js"],"names":["Informations","label","valuePath","className","MetricFilters","props","data","actions","get","alarms","title","isEmpty","errorPath","renderValue","message","renderList","disabled","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","value","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/7.5257225d.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\n\nimport './style.scss';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"Name\"\n        valuePath=\"name\"\n      />\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"Actions Enabled\"\n        valuePath=\"ActionsEnabled\"\n      />\n      <PartialValue\n        label=\"State\"\n        valuePath=\"StateValue\"\n      />\n      <div className=\"alarm-metrics\">\n        <PartialValue\n          label=\"Metric\"\n          valuePath=\"Namespace\"\n        />\n        <span>::</span>\n        <PartialValue\n          valuePath=\"MetricName\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  renderList,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport WarningMessage from '../../../components/WarningMessage';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst MetricFilters = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const actions = get(data, ['item', 'AlarmActions']);\n  const alarms = get(data, ['item', 'InsufficientDataActions'], []);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n      \n      <TabsMenu>\n        <TabPane title=\"Alarm Actions\">\n          {!isEmpty(actions) ? (\n            renderList(actions)\n          ) : (\n            <PartialValue\n              errorPath=\"NoActions\"\n              renderValue={() => (\n                <WarningMessage\n                  message=\"No actions have been configured for this alarm.\"\n                />\n              )}\n            />\n          )}\n        </TabPane>\n        <TabPane \n          title=\"Insufficient Data Actions\"\n          disabled={isEmpty(alarms)}\n        >\n          {renderList(alarms)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nMetricFilters.propTypes = propTypes;\n\nexport default MetricFilters;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}