{"version":3,"sources":["partials/aws/s3.buckets.id/PoliciesAccessTable/index.js"],"names":["PoliciesAccessTable","props","columnName","ctx","useContext","PartialContext","basePath","PartialPathContext","value","get","item","className","Object","entries","map","id","accessGroup","policies","inline_policies","i","policy_id","policy","rowSpan","keys","length","toString"],"mappings":"kKAqDeA,UA3Ca,SAAAC,GAAU,IAC5BC,EAAeD,EAAfC,WAEFC,EAAMC,qBAAWC,KACjBC,EAAWF,qBAAWG,KACtBC,EAAQC,IAAIN,EAAIO,KAAMJ,GAE5B,OACE,wBAAOK,UAAU,iBAAjB,UACE,gCACE,+BACE,6BAAKT,IACL,6CACA,gDAGJ,gCACGU,OAAOC,QAAQL,GAAOM,KAAI,YAAwB,IAAD,mBAArBC,EAAqB,KAAjBC,EAAiB,KAC1CC,EAAWD,EAAYC,UAAYD,EAAYE,gBAErD,OAAON,OAAOC,QAAQI,GAAUH,KAAI,WAAsBK,GAAtB,uBAAEC,EAAF,KAAaC,EAAb,YAClC,+BACQ,GAALF,GACC,oBAAIG,QAASV,OAAOW,KAAKN,GAAUO,OAAnC,SACGT,IAGL,6BACGK,IAEH,8BACsC,MAAlCX,IAAIY,EAAQ,YAAa,OAAeI,eAVrCL","file":"static/js/130.6f24ae14.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\n\nconst propTypes = {\n  columnName: PropTypes.string.isRequired,\n};\n\nconst PoliciesAccessTable = props => {\n  const { columnName } = props;\n\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n  return (\n    <table className=\"policies-table\">\n      <thead>\n        <tr>\n          <th>{columnName}</th>\n          <th>Policy Name</th>\n          <th>Condition</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(value).map(([id, accessGroup]) => {\n          const policies = accessGroup.policies || accessGroup.inline_policies;\n          \n          return Object.entries(policies).map(([policy_id, policy], i) => (\n            <tr key={policy_id}>\n              {i == 0 && (\n                <td rowSpan={Object.keys(policies).length}>\n                  {id}\n                </td>\n              )}\n              <td>\n                {policy_id}\n              </td>\n              <td>\n                {(get(policy, 'condition', null) != null).toString()}\n              </td>\n            </tr>\n          ));\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nPoliciesAccessTable.propTypes = propTypes;\n\nexport default PoliciesAccessTable;\n"],"sourceRoot":""}