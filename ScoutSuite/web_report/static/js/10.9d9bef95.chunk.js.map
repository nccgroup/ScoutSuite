{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.instances.id/Informations/index.js","partials/aws/ec2.regions.id.vpcs.id.instances.id/NetworkInterfaces/index.js","partials/aws/ec2.regions.id.vpcs.id.instances.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","convertBoolToEnable","formatDate","NetworkInterfaces","props","interfaces","Object","entries","map","i","id","networkInterface","Description","value","Association","PublicIp","PublicDnsName","Attachment","InstanceId","isEmpty","Ipv6Addresses","address","Ipv6Address","PrivateIpAddresses","Primary","PrivateIpAddress","Groups","renderList","renderSecurityGroupLink","Ec2Instance","data","path","get","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","networkInterfaces","metadata","userdata","secrets","item","className","title","disabled","HttpEndpoint","errorPath","HttpTokens","split","key","values","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","match"],"mappings":"wJAoEeA,UA1DM,WACnB,OACE,qCACE,cAAC,IAAD,CACEC,MAAM,MACNC,UAAU,QAEZ,cAAC,IAAD,CACED,MAAM,KACNC,UAAU,OAEZ,cAAC,IAAD,CACED,MAAM,SACNC,UAAU,WAEZ,cAAC,IAAD,CACED,MAAM,oBACNC,UAAU,sBAEZ,cAAC,IAAD,CACED,MAAM,MACNC,UAAU,QAEZ,cAAC,IAAD,CACED,MAAM,iBACNC,UAAU,mBAEZ,cAAC,IAAD,CACED,MAAM,WACNC,UAAU,WACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,aACNC,UAAU,qBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,kBACNC,UAAU,YAEZ,cAAC,IAAD,CACED,MAAM,QACNC,UAAU,eAEZ,cAAC,IAAD,CACED,MAAM,gBACNC,UAAU,iBAEZ,cAAC,IAAD,CACED,MAAM,WACNC,UAAU,aACVC,YAAaG,W,mGC+BNC,UA9EW,SAAAC,GAAU,IAC1BC,EAAeD,EAAfC,WAER,OACEC,OAAOC,QAAQF,GAAYG,KAAI,WAAyBC,GAAzB,uBAAEC,EAAF,KAAMC,EAAN,YAC7B,gCACE,6BAAKD,IACL,+BACGC,EAAiBC,aAChB,6BACE,cAAC,IAAD,CACEf,MAAM,cACNgB,MAAOF,EAAiBC,gBAI7BD,EAAiBG,aAChB,qCACE,6BACE,cAAC,IAAD,CACEjB,MAAM,YACNgB,MAAOF,EAAiBG,YAAYC,aAGxC,6BACE,cAAC,IAAD,CACElB,MAAM,aACNgB,MAAOF,EAAiBG,YAAYE,qBAK3CL,EAAiBM,YAChB,6BACE,cAAC,IAAD,CACEpB,MAAM,uBACNgB,MAAOF,EAAiBM,WAAWC,gBAIvCC,IAAQR,EAAiBS,gBACzB,qCACE,iDACA,6BACGT,EAAiBS,cAAcZ,KAAI,SAACa,EAASZ,GAAV,OAClC,6BACGY,EAAQC,aADFb,WAOhBE,EAAiBY,mBAAmBf,KAAI,SAACa,EAASZ,GAAV,OACvC,6BACE,cAAC,IAAD,CACEZ,MAAOwB,EAAQG,QACb,qBAAuB,aAEzBX,MAAOQ,EAAQI,oBALVhB,OASTU,IAAQR,EAAiBe,SACzB,6BACE,cAAC,IAAD,CACE7B,MAAM,kBACNgB,MAAOc,YAAWhB,EAAiBe,OAAQ,GAAIE,cA7D/CnB,Q,yLCqGDoB,UAnGK,SAAAzB,GAAU,IACpB0B,EAAS1B,EAAT0B,KAEFC,EAAOC,IAAIF,EAAM,CAAC,OAAQ,QAAS,IACnCG,EAASC,YAAkBH,GAC3BI,EAAQC,YAAeL,GALF,EAOIM,YAC7BC,YAAe,wBAAD,OAAyBL,EAAzB,iBAAwCE,EAAxC,WADFI,EAPa,EAOnBT,KAAWU,EAPQ,EAORA,QAInB,IAAKV,GAAQU,EAAS,OAAO,KAE7B,IAAMC,EAAoBT,IAAIF,EAAM,CAAC,OAAQ,uBACvCY,EAAWV,IAAIF,EAAM,CAAC,OAAQ,qBAC9Ba,EAAWX,IAAIF,EAAM,CAAC,OAAQ,eAAiB,GAC/Cc,EAAUZ,IAAIF,EAAM,CAAC,OAAQ,sBAOnC,OALKX,IAAQoB,KACXT,EAAKe,KAAKN,IAAV,UAAmBA,EAAnB,aAA2BJ,EAA3B,KACAL,EAAKe,KAAKZ,OAASA,GAInB,eAAC,IAAD,CAASH,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,UAAD,MAGF,qBAAKgB,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAM,qBACNC,SAAU7B,IAAQsB,GAFpB,SAIE,cAAC,UAAD,CAAmBpC,WAAYoC,MAEjC,cAAC,IAAD,CACEM,MAAM,mBACNC,SAAU7B,IAAQuB,GAFpB,SAIE,gCACE,cAAC,IAAD,CACE7C,MAAM,WACNgB,MAAO6B,EAASO,aAChBC,UAAU,qBAEZ,cAAC,IAAD,CACErD,MAAM,cACNgB,MAAO6B,EAASS,WAChBD,UAAU,0BAIhB,cAAC,IAAD,CACEH,MAAM,YACNC,SAAU7B,IAAQwB,GAFpB,SAIE,gCACE,sCACCA,EAASS,MAAM,MAAM5C,KAAI,SAACsB,EAAMrB,GAAP,OACxB,+BACGqB,GADQrB,OAIXU,IAAQyB,IACR,gCACE,oBAAIE,UAAU,iBAAd,SACE,cAAC,IAAD,CACEjC,MAAM,oBACNqC,UAAU,wBAGd,6BACG5C,OAAOC,QAAQqC,GAASpC,KAAI,WAAgBC,GAAhB,uBAAE4C,EAAF,KAAOC,EAAP,YAC3B,+BACGD,EACD,6BACGC,EAAO9C,KAAI,SAACK,EAAOJ,GAAR,OACV,6BACE,+BAAOI,KADAJ,UAJNA,0B,iCCjG/B,0HAEM8C,EAAgB,CACpBC,cAAe,GACfX,KAAM,IAGKY,EAAiBC,IAAMC,cAAcJ,GACrCK,EAAqBF,IAAMC,cAAc,IACzCE,EAAoBH,IAAMC,eAAc,gB,oECgBtCG,IAdQ,SAAC1D,GAAW,IACzB2B,EAAmB3B,EAAnB2B,KAAMgC,EAAa3D,EAAb2D,SAERC,EAAWC,qBAAWL,KAE5B,OACE,cAAC,IAAmBM,SAApB,CAA6BrD,MAAOsD,YAAYH,EAAUjC,GAA1D,SACGgC,M,uNC6DQK,EA9DM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASvC,EAAW,EAAXA,KAAW,EAK/CkC,qBAAWM,KAHbC,EAFiD,EAEjDA,WACAC,EAHiD,EAGjDA,aACAC,EAJiD,EAIjDA,gBAGMC,EAAoBC,cAApBD,gBA8BFE,EAAQ7C,IAAIwC,EAAY,CAACH,EAASC,GAAU,IAAIQ,SAAS/C,GAE/D,OACE,cAACgD,EAAA,EAAD,CACEhC,MACE8B,EACI,sCACA,iCAENG,UAAU,MACVC,OAAK,EAPP,SASE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLrC,UAAU,gBACVsC,QAASP,EA7BA,WACbH,EAAgBL,EAASC,EAASvC,GAClC4C,EACE,qBACA,CACEU,QAAS,QACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAtBR,WACVf,EAAaJ,EAASC,EAASvC,GAC/B4C,EACE,0DACA,CACEU,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAgChB,SAKGX,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,S,QCpB5BY,EAAe,SAAArF,GAAU,IA4BzBsF,EA1BF7F,EAUEO,EAVFP,MACA8F,EASEvF,EATFuF,UACA7F,EAQEM,EARFN,UACAoD,EAOE9C,EAPF8C,UACAJ,EAME1C,EANF0C,UACA8C,EAKExF,EALFwF,OACAC,EAIEzF,EAJFyF,QACAC,EAGE1F,EAHF0F,aACA/F,EAEEK,EAFFL,YACAgG,EACE3F,EADF2F,kBAGIC,EAASC,cACTC,EAAMjC,qBAAWR,KACjBO,EAAWC,qBAAWL,KACtBuC,EAAgBlC,qBAAWJ,KAE3BuC,EAAgBjC,YAAY4B,GAAqB/B,EAAUlE,GAC7De,EAAQd,EACVK,EAAMS,OAASmB,IAAIkE,EAAIrD,KAAMuD,EAAehG,EAAMS,SAG/B,mBAAVA,IACTA,EAAQwF,OAAOxF,IAIbqC,GAEFwC,GADcY,IAAQpD,GAAaA,EAAY,CAACA,IACzB1C,KAAI,SAAAuB,GAAI,OAC7BoC,YAAY4B,GAAqB/B,EAAUjC,MAG7C2D,EAAiB,CAACU,GAGpB,IAAMG,EAAWb,EAAec,MAAK,SAAAzE,GAAI,OACvCmE,EAAIO,eAAe3B,SAAS/C,MAExB2E,EAAQR,EAAIQ,MAQlB,GANAC,qBAAU,WACJJ,GACFJ,EAAcO,KAEf,CAACA,SAEUE,IAAV/F,GAAiC,OAAVA,EACzB,OAAO,KAGT,IAAMgG,EACJ,cAAC,EAAD,CACExC,QAAS2B,EAAO3B,QAASC,QAAS0B,EAAO1B,QACzCvC,KAAI,UAAKmE,EAAInE,KAAT,YAAiB2D,EAAe,MAGlCoB,EACJ,uBAAMhE,UAAWiE,IAAGR,GAAYQ,IAAG,QAASL,IAA5C,UACG7F,EACA0F,GAAYM,KAIjB,OACE,cAACG,EAAA,EAAD,CACElE,UAAWiE,IAAGjE,EAAW,gBAAiB,CAAE8C,WAC5C/F,MAAOA,EACP8F,UAAWA,EACX9E,MACEgF,EACE,cAACd,EAAA,EAAD,yBAAShC,MAAOlC,GAAWiF,GAA3B,aACGgB,KAGHA,KAQVrB,EAAawB,aApGQ,CACnBpH,MAAO,GACP8F,UAAW,KACX9E,MAAO,KACPf,UAAW,KACXoD,UAAW,KACX0C,QAAQ,EACRC,SAAS,EACTC,aAAc,CACZoB,WAAY,IACZlC,UAAW,aAEbjF,YAAa,SAAAc,GAAK,OAAIA,IA0FT4E,O,sKCjHA0B,G,MAdQ,SAAC/G,GAAW,IACzB0B,EAAmB1B,EAAnB0B,KAAMiC,EAAa3D,EAAb2D,SAId,OAFAqD,QAAQC,KAAK,eAAgBvF,GAG3B,cAAC,IAAeoC,SAAhB,CAAyBrD,MAAOiB,EAAhC,SACGiC,M,0EChBP,IAAIuD,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCjH,OAAOmH,eAAeC,EAAS,aAAc,CAC3C7G,OAAO,IAET6G,EAAQC,aAAU,EAElB,IAAIjE,EAAQ8D,EAAwBD,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,KAElBI,SAAuBjE,EAAMmE,cAAc,OAAQ,CACnFC,EAAG,sBACD,UAEJJ,EAAQC,QAAUC,G,wDCKHG,IAda,SAAA3H,GAAU,IAC5B2D,EAAa3D,EAAb2D,SAER,OACE,sBAAKjB,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCiB,O,iMCyCQiE,G,OAtCQ,SAAC5H,GAAW,IAE/B2C,EAKE3C,EALF2C,MACAkF,EAIE7H,EAJF6H,WACAjF,EAGE5C,EAHF4C,SACAoC,EAEEhF,EAFFgF,QACArB,EACE3D,EADF2D,SAN8B,EASImE,mBAAS,IATb,mBASzBC,EATyB,KASbhC,EATa,KAW1BiC,EAAgBD,EAElB,qCACGpF,EACAsF,IAAWF,GAAYG,QAG1BvF,EAGJ,OACE,cAAC,IAAkBmB,SAAnB,CAA4BrD,MAAOsF,EAAnC,SACE,cAAC,IAAD,CACEpD,MAAOqF,EACPtF,UAAWiE,IAAG,mBAAoBoB,GAClCF,WAAYA,EACZjF,SAAUA,EACVoC,QAASA,EALX,SAOGrB,S,uDCjDT,yFAGa7B,EAAoB,SAAAH,GAAI,OAAIC,IAAID,EAAKwG,MAAM,oBAAqB,IAEhEnG,EAAiB,SAAAL,GAAI,OAAIC,IAAID,EAAKwG,MAAM,iBAAkB,K","file":"static/js/10.9d9bef95.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\nimport { \n  valueOrNone,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"ID\"\n        valuePath=\"id\"\n      />\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"Availability Zone\"\n        valuePath=\"availability_zone\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"Reservation ID\"\n        valuePath=\"reservation_id\"\n      />\n      <PartialValue\n        label=\"IAM role\"\n        valuePath=\"iam_role\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Monitoring\"\n        valuePath=\"monitoring_enabled\"\n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue\n        label=\"Access Key Name\"\n        valuePath=\"KeyName\"\n      />\n      <PartialValue\n        label=\"State\"\n        valuePath=\"State.Name\"\n      />\n      <PartialValue\n        label=\"Instance Type\"\n        valuePath=\"InstanceType\"\n      />\n      <PartialValue\n        label=\"Up Since\"\n        valuePath=\"LaunchTime\"\n        renderValue={formatDate}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  renderList, \n  renderSecurityGroupLink \n} from '../../../../utils/Partials';\nimport DetailedValue from '../../../../components/DetailedValue';\n\n\nconst propTypes = {\n  interfaces: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { interfaces } = props;\n\n  return (\n    Object.entries(interfaces).map(([id, networkInterface], i) => (\n      <div key={i}>\n        <h5>{id}</h5>\n        <ul>\n          {networkInterface.Description && (\n            <li>\n              <DetailedValue\n                label=\"Description\"\n                value={networkInterface.Description}\n              />\n            </li>\n          )}\n          {networkInterface.Association && (\n            <>\n              <li>\n                <DetailedValue\n                  label=\"Public IP\"\n                  value={networkInterface.Association.PublicIp}\n                />\n              </li>\n              <li>\n                <DetailedValue\n                  label=\"Public DNS\"\n                  value={networkInterface.Association.PublicDnsName}\n                />\n              </li>\n            </>\n          )}\n          {networkInterface.Attachment && (\n            <li>\n              <DetailedValue\n                label=\"Attached to Instance\"\n                value={networkInterface.Attachment.InstanceId}\n              />\n            </li>\n          )}\n          {!isEmpty(networkInterface.Ipv6Addresses) && (\n            <>\n              <li>IPv6 Addresses:</li>\n              <ul>\n                {networkInterface.Ipv6Addresses.map((address, i) => (\n                  <li key={i}>\n                    {address.Ipv6Address}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          {networkInterface.PrivateIpAddresses.map((address, i) => (\n            <li key={i}>\n              <DetailedValue\n                label={address.Primary ? \n                  'Primary Private IP' : 'Private IP'\n                }\n                value={address.PrivateIpAddress}\n              />\n            </li>\n          ))}\n          {!isEmpty(networkInterface.Groups) && (\n            <li>\n              <DetailedValue\n                label=\"Security Groups\"\n                value={renderList(networkInterface.Groups, '', renderSecurityGroupLink)}\n              />\n            </li>\n          )}\n        </ul>\n      </div>\n    ))\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getVpcFromPath, getRegionFromPath } from '../../../utils/Api';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport NetworkInterfaces from './NetworkInterfaces';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Ec2Instance = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.ec2.regions.${region}.vpcs.${vpcId}.name`)\n  );\n\n  if (!data || loading) return null;\n\n  const networkInterfaces = get(data, ['item', 'network_interfaces']);\n  const metadata = get(data, ['item', 'metadata_options']);\n  const userdata = get(data, ['item', 'user_data']) || '';\n  const secrets = get(data, ['item', 'user_data_secrets']);\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc} (${vpcId})`;\n    data.item.region = region;\n  }\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <div className=\"ec2-instances\">\n        <TabsMenu>\n          <TabPane\n            title=\"Network Interfaces\"\n            disabled={isEmpty(networkInterfaces)}\n          >\n            <NetworkInterfaces interfaces={networkInterfaces} />\n          </TabPane>\n          <TabPane\n            title=\"Metadata Options\"\n            disabled={isEmpty(metadata)}\n          >\n            <div>\n              <PartialValue\n                label=\"Endpoint\"\n                value={metadata.HttpEndpoint}\n                errorPath=\"metadata_options\"\n              />\n              <PartialValue\n                label=\"HTTP Tokens\"\n                value={metadata.HttpTokens}\n                errorPath=\"metadata_options\"\n              />\n            </div>\n          </TabPane>\n          <TabPane\n            title=\"User Data\"\n            disabled={isEmpty(userdata)}\n          >\n            <div>\n              <h5>Data</h5>\n              {userdata.split('\\n').map((data, i) => (\n                <code key={i}>\n                  {data}\n                </code>\n              ))}\n              {!isEmpty(secrets) && (\n                <div>\n                  <h5 className=\"secrets-header\">\n                    <PartialValue\n                      value=\"Potential Secrets\"\n                      errorPath=\"potential_secrets\"\n                    />\n                  </h5>\n                  <ul>\n                    {Object.entries(secrets).map(([key, values], i) => (\n                      <li key={i}>\n                        {key}\n                        <ul>\n                          {values.map((value, i) => (\n                            <li key={i}>\n                              <code>{value}</code>\n                            </li>\n                          ))}\n                        </ul>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </TabPane>\n        </TabsMenu>\n      </div>\n    </Partial>\n  );\n};\n\nEc2Instance.propTypes = propTypes;\n\nexport default Ec2Instance;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}