{"version":3,"sources":["partials/aws/redshift.regions.id.vpcs.id.security_groups/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["SecurityGroups","props","data","ipRanges","get","groups","label","valuePath","title","disabled","isEmpty","map","range","i","CIDRIP","value","Status","name","EC2SecurityGroupName","UserId","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"oMA+EeA,UA/DQ,SAAAC,GAAU,IACvBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAWC,IAAIF,EAAM,CAAC,OAAQ,aAC9BG,EAASD,IAAIF,EAAM,CAAC,OAAQ,sBAElC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,MAAM,eACNC,UAAU,kBAId,cAAC,IAAD,UACE,eAAC,IAAD,CACEC,MAAM,QACNC,SAAUC,IAAQP,IAAaO,IAAQL,GAFzC,WAIIK,IAAQP,IACR,+CAEGA,EAASQ,KAAI,SAACC,EAAOC,GAAR,OACZ,6BACE,cAAC,IAAD,CACEP,MAAOM,EAAME,OACbC,MAAOH,EAAMI,UAHRH,UASbH,IAAQL,IACR,sDAEGA,EAAOM,KAAI,WAMPE,GANO,IAERC,EAFQ,EAERA,OACsBG,EAHd,EAGRC,qBACAC,EAJQ,EAIRA,OACAH,EALQ,EAKRA,OALQ,OAQV,6BACE,cAAC,IAAD,CACEV,MAAOQ,EACPC,MAAK,UAAKE,EAAL,6BAA8BE,EAA9B,cAA0CH,MAH1CH,mB,wDCtCVO,IAda,SAAAnB,GAAU,IAC5BoB,EAAapB,EAAboB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACtB,GAAW,IAE/BO,EAKEP,EALFO,MACAgB,EAIEvB,EAJFuB,WACAf,EAGER,EAHFQ,SACAgB,EAEExB,EAFFwB,QACAJ,EACEpB,EADFoB,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGnB,EACAsB,IAAWH,GAAYI,QAG1BvB,EAGJ,OACE,cAAC,IAAkBwB,SAAnB,CAA4BjB,MAAOa,EAAnC,SACE,cAAC,IAAD,CACEpB,MAAOqB,EACPP,UAAWW,IAAG,mBAAoBN,GAClCH,WAAYA,EACZf,SAAUA,EACVgB,QAASA,EALX,SAOGJ","file":"static/js/41.97ae257e.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const ipRanges = get(data, ['item', 'IPRanges']);\n  const groups = get(data, ['item', 'EC2SecurityGroups']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Descripition\"\n          valuePath=\"Description\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Rules\"\n          disabled={isEmpty(ipRanges) && isEmpty(groups)}\n        >\n          {!isEmpty(ipRanges) && (\n            <ul>\n              IP Addresses:\n              {ipRanges.map((range, i) => (\n                <li key={i}>\n                  <PartialValue\n                    label={range.CIDRIP}\n                    value={range.Status}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {!isEmpty(groups) && (\n            <ul>\n              EC2 Security Groups:\n              {groups.map((\n                {\n                  CIDRIP,\n                  EC2SecurityGroupName: name,\n                  UserId,\n                  Status,\n                }, i\n              ) => (\n                <li key={i}>\n                  <PartialValue\n                    label={CIDRIP}\n                    value={`${name} (AWS account ID: ${UserId}): ${Status}`}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}