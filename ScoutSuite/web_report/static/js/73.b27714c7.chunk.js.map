{"version":3,"sources":["partials/gcp/iam.projects.id.service_accounts.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js"],"names":["ServiceAccounts","props","bindings","keys","data","item","get","label","valuePath","title","length","Object","entries","map","key","path","renderValue","formatDate","values","binding","i","role","renderList","members","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","value","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper"],"mappings":"qMAsHeA,UA5CS,SAAAC,GAAU,IAnBXC,EA5CJC,EAgETC,EAASH,EAATG,KACFC,EAAOC,IAAIF,EAAM,CAAC,QAAS,IAEjC,OAAKA,EAGH,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,MAAM,KACNC,UAAU,OAEZ,cAAC,IAAD,CACED,MAAM,aACNC,UAAU,eAEZ,cAAC,IAAD,CACED,MAAM,QACNC,UAAU,UAEZ,cAAC,IAAD,CACED,MAAM,eACNC,UAAU,iBAEZ,cAAC,IAAD,CACED,MAAM,0BACNC,UAAU,+BAId,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,MAAM,OAAf,UA/FWN,EA+FuBE,EAAKF,KA9FxCA,GAAwB,IAAhBA,EAAKO,OAGhB,6BACGC,OAAOC,QAAQT,GAAMU,KAAI,gBAAEC,EAAF,2BACxB,cAAC,IAAD,CACEC,KAAI,eAAUD,GADhB,SAGE,+BACE,4BAAIA,IACJ,+BACE,6BACE,cAAC,IAAD,CACEP,MAAM,WACNC,UAAU,eAEd,6BACE,cAAC,IAAD,CACED,MAAM,gBACNC,UAAU,oBAEd,6BACE,cAAC,IAAD,CACED,MAAM,eACNC,UAAU,eACVQ,YAAaC,QAGjB,6BACE,cAAC,IAAD,CACEV,MAAM,cACNC,UAAU,cACVQ,YAAaC,eAzBhBH,QAP0B,2CAgGjC,cAAC,IAAD,CAASL,MAAM,wBAAf,UArDeP,EAsDGG,EAAKH,SArDxBA,GAAgC,IAApBA,EAASQ,OAGxB,6BACGC,OAAOO,OAAOhB,GAAUW,KAAI,SAACM,EAASC,GAAV,OAC3B,+BACE,4BAAID,EAAQE,OACZ,6BAAKC,YAAWH,EAAQI,aAFjBH,QALgC,iDAsB7B,O,iCC9EpB,0HAEMI,EAAgB,CACpBC,cAAe,GACfpB,KAAM,IAGKqB,EAAiBC,IAAMC,cAAcJ,GACrCK,EAAqBF,IAAMC,cAAc,IACzCE,EAAoBH,IAAMC,eAAc,gB,oECgBtCG,IAdQ,SAAC9B,GAAW,IACzBc,EAAmBd,EAAnBc,KAAMiB,EAAa/B,EAAb+B,SAERC,EAAWC,qBAAWL,KAE5B,OACE,cAAC,IAAmBM,SAApB,CAA6BC,MAAOC,YAAYJ,EAAUlB,GAA1D,SACGiB,M,uNC6DQM,EA9DM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASzB,EAAW,EAAXA,KAAW,EAK/CmB,qBAAWO,KAHbC,EAFiD,EAEjDA,WACAC,EAHiD,EAGjDA,aACAC,EAJiD,EAIjDA,gBAGMC,EAAoBC,cAApBD,gBA8BFE,EAAQzC,IAAIoC,EAAY,CAACH,EAASC,GAAU,IAAIQ,SAASjC,GAE/D,OACE,cAACkC,EAAA,EAAD,CACExC,MACEsC,EACI,sCACA,iCAENG,UAAU,MACVC,OAAK,EAPP,SASE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAU,gBACVC,QAASR,EA7BA,WACbH,EAAgBL,EAASC,EAASzB,GAClC8B,EACE,qBACA,CACEW,QAAS,QACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAtBR,WACVhB,EAAaJ,EAASC,EAASzB,GAC/B8B,EACE,0DACA,CACEW,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAgChB,SAKGZ,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,S,QCpB5Ba,EAAe,SAAA3D,GAAU,IA4BzB4D,EA1BFtD,EAUEN,EAVFM,MACAuD,EASE7D,EATF6D,UACAtD,EAQEP,EARFO,UACAuD,EAOE9D,EAPF8D,UACAT,EAMErD,EANFqD,UACAU,EAKE/D,EALF+D,OACAC,EAIEhE,EAJFgE,QACAC,EAGEjE,EAHFiE,aACAlD,EAEEf,EAFFe,YACAmD,EACElE,EADFkE,kBAGIC,EAASC,cACTC,EAAMpC,qBAAWR,KACjBO,EAAWC,qBAAWL,KACtB0C,EAAgBrC,qBAAWJ,KAE3B0C,EAAgBnC,YAAY8B,GAAqBlC,EAAUzB,GAC7D4B,EAAQpB,EACVf,EAAMmC,OAAS9B,IAAIgE,EAAIjE,KAAMmE,EAAevE,EAAMmC,SAG/B,mBAAVA,IACTA,EAAQqC,OAAOrC,IAIb2B,GAEFF,GADca,IAAQX,GAAaA,EAAY,CAACA,IACzBlD,KAAI,SAAAE,GAAI,OAC7BsB,YAAY8B,GAAqBlC,EAAUlB,MAG7C8C,EAAiB,CAACW,GAGpB,IAAMG,EAAWd,EAAee,MAAK,SAAA7D,GAAI,OACvCuD,EAAIO,eAAe7B,SAASjC,MAExB+D,EAAQR,EAAIQ,MAQlB,GANAC,qBAAU,WACJJ,GACFJ,EAAcO,KAEf,CAACA,SAEUE,IAAV5C,GAAiC,OAAVA,EACzB,OAAO,KAGT,IAAM6C,EACJ,cAAC,EAAD,CACE1C,QAAS6B,EAAO7B,QAASC,QAAS4B,EAAO5B,QACzCzB,KAAI,UAAKuD,EAAIvD,KAAT,YAAiB8C,EAAe,MAGlCqB,EACJ,uBAAM5B,UAAW6B,IAAGR,GAAYQ,IAAG,QAASL,IAA5C,UACG1C,EACAuC,GAAYM,KAIjB,OACE,cAACG,EAAA,EAAD,CACE9B,UAAW6B,IAAG7B,EAAW,gBAAiB,CAAEU,WAC5CzD,MAAOA,EACPuD,UAAWA,EACX1B,MACE6B,EACE,cAAChB,EAAA,EAAD,yBAASxC,MAAO2B,GAAW8B,GAA3B,aACGgB,KAGHA,KAQVtB,EAAayB,aApGQ,CACnB9E,MAAO,GACPuD,UAAW,KACX1B,MAAO,KACP5B,UAAW,KACXuD,UAAW,KACXC,QAAQ,EACRC,SAAS,EACTC,aAAc,CACZoB,WAAY,IACZpC,UAAW,aAEblC,YAAa,SAAAoB,GAAK,OAAIA,IA0FTwB,O,sKCjHA2B,G,MAdQ,SAACtF,GAAW,IACzBG,EAAmBH,EAAnBG,KAAM4B,EAAa/B,EAAb+B,SAId,OAFAwD,QAAQC,KAAK,eAAgBrF,GAG3B,cAAC,IAAe+B,SAAhB,CAAyBC,MAAOhC,EAAhC,SACG4B,M,0EChBP,IAAI0D,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtChF,OAAOkF,eAAeC,EAAS,aAAc,CAC3C1D,OAAO,IAET0D,EAAQC,aAAU,EAElB,IAAIpE,EAAQiE,EAAwBD,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,KAElBI,SAAuBpE,EAAMsE,cAAc,OAAQ,CACnFC,EAAG,sBACD,UAEJJ,EAAQC,QAAUC,G,wDCKHG,IAda,SAAAlG,GAAU,IAC5B+B,EAAa/B,EAAb+B,SAER,OACE,sBAAKsB,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCtB,O","file":"static/js/73.b27714c7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Tabs';\nimport PartialSection from '../../../components/Partial/PartialSection/index';\nimport { formatDate, renderList } from '../../../utils/Partials/index';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nconst renderKeys = keys => {\n  if (!keys || keys.length === 0) return <span>None</span>;\n\n  return (\n    <ul>\n      {Object.entries(keys).map(([key]) => (\n        <PartialSection\n          path={`keys.${key}`}\n          key={key}>\n          <li>\n            <b>{key}</b>\n            <ul>\n              <li>\n                <PartialValue\n                  label=\"Key Type\"\n                  valuePath=\"key_type\" />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Key Algorithm\"\n                  valuePath=\"key_algorithm\" />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Valid Before\"\n                  valuePath=\"valid_before\"\n                  renderValue={formatDate}\n                />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Valid After\"\n                  valuePath=\"valid_after\"\n                  renderValue={formatDate}\n                />\n              </li>\n            </ul>\n          </li>\n        </PartialSection>\n      ))}\n    </ul>\n  );\n};\n\nconst renderBindings = bindings => {\n  if (!bindings || bindings.length === 0) return <span>None</span>;\n\n  return (\n    <ul>\n      {Object.values(bindings).map((binding, i) => (\n        <li key={i}>\n          <b>{binding.role}</b>\n          <ul>{renderList(binding.members)}</ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ServiceAccounts = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\"\n          valuePath=\"id\" />\n\n        <PartialValue\n          label=\"Project ID\"\n          valuePath=\"project_id\" />\n\n        <PartialValue\n          label=\"Email\"\n          valuePath=\"email\" />\n\n        <PartialValue\n          label=\"Display Name\"\n          valuePath=\"display_name\" />\n\n        <PartialValue\n          label=\"Default Service Account\"\n          valuePath=\"default_service_account\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Keys\">{renderKeys(item.keys)}</TabPane>\n\n        <TabPane title=\"Service Account Users\">\n          {renderBindings(item.bindings)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nServiceAccounts.propTypes = propTypes;\n\nexport default ServiceAccounts;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}