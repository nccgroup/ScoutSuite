{"version":3,"sources":["partials/gcp/cloudsql.projects.id.instances.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js"],"names":["SQLInstances","props","items","data","item","get","label","valuePath","renderValue","convertBoolToEnable","formatDate","valueOrNone","title","authorized_networks","length","map","value","i","errorPath","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper"],"mappings":"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","file":"static/js/62.25503620.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  convertBoolToEnable,\n  formatDate,\n  valueOrNone,\n} from '../../../utils/Partials';\nimport { TabPane, TabsMenu } from '../../../components/Tabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nconst renderAuthorizedNetworks = items => {\n  if (!items || items.length === 0) return <span>None</span>;\n\n  return (\n    <ul>\n      {items.map((value, i) => {\n        return (\n          <li key={i}>\n            <PartialValue\n              errorPath={`authorized_networks.${i}.open_to_the_world`}\n              value={value}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SQLInstances = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"Project ID\" valuePath=\"project_id\" />\n\n        <PartialValue\n          label=\"Automatic Backups\"\n          valuePath=\"automatic_backup_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Last Backup\"\n          valuePath=\"last_backup_timestamp\"\n          renderValue={formatDate}\n        />\n\n        <PartialValue\n          label=\"Logs\"\n          valuePath=\"log_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"SSL Required\"\n          valuePath=\"ssl_required\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Public IP Address\"\n          valuePath=\"public_ip\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Private IP Address\"\n          valuePath=\"private_ip\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Authorized Networks\"\n          valuePath=\"authorized_networks\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Authorized Networks\">\n          {renderAuthorizedNetworks(item.authorized_networks)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nSQLInstances.propTypes = propTypes;\n\nexport default SQLInstances;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}