{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/RulesList/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/WarningMessage/index.js"],"names":["RulesList","ctx","useContext","PartialContext","basePath","PartialPathContext","rules","get","item","isDefault","renderIpAddresses","title","addresses","path","map","address","i","value","errorPath","renderValue","CIDRName","CIDR","className","Object","entries","protocols","name","ports","groups","port_name","port","cidrs","Ipv6Ranges","security_groups","group","GroupName","service","resource","id","GroupId","UserId","message","defaultValues","path_to_issue","React","createContext","PartialTabContext","PartialSection","props","children","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","label","separator","valuePath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","data","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/43.48071de6.chunk.js","sourcesContent":["import React, { useContext }  from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\nimport { PartialValue } from '../../../../components/Partial';\nimport ResourceLink from '../../../../components/ResourceLink';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst RulesList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const rules = get(ctx.item, basePath);\n\n  const isDefault = get(ctx.item, 'name') === 'default';\n\n  const renderIpAddresses = (title, addresses, path) => (\n    <li>\n      {`${title}:`}\n      <ul>\n        {addresses.map((address, i) => (\n          <li key={i}>\n            <PartialValue\n              value={address}\n              errorPath={`${path}.cidrs.${i}.CIDR`}\n              renderValue={value =>\n                value.CIDRName \n                  ? `${value.CIDR} (${value.CIDRName})`\n                  : value.CIDR\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const renderSecurityGroups = (groups, path) => (\n    <li>\n      EC2 security groups:\n      <ul>\n        {groups.map((group, i) => (\n          <li key={i}>\n            <PartialValue\n              value={group}\n              errorPath={`${path}.cidrs.security_groups.${i}`}\n              renderValue={value =>\n                value.GroupName\n                  ? (\n                    <span>\n                      {`${value.GroupName} (`}\n                      <ResourceLink \n                        service=\"ec2\"\n                        resource=\"security_groups\"\n                        id={value.GroupId}\n                        name={value.GroupId}\n                      />\n                      {')'}\n                    </span>\n                  ) : `${value.GroupId} (AWS Account ID: ${value.UserId})`\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <>\n      <ul className=\"rules-list\">\n        {Object.entries(rules.protocols).map(([name, { ports }], i) => (\n          <div key={i}>\n            <li>{name}</li>\n            <ul>\n              <li>\n                Ports:\n                <ul>\n                  {Object.entries(ports).map(([port_name, port], i) => (\n                    <div key={i}>\n                      <li>\n                        <PartialValue\n                          value={port_name}\n                          errorPath={`protocols.${name}.ports.${port_name}`}\n                        />\n                      </li>\n                      <ul>\n                        {port.cidrs && (\n                          renderIpAddresses(\n                            'IP adresses',\n                            port.cidrs, \n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.Ipv6Ranges && (\n                          renderIpAddresses(\n                            'IPv6 addresses',\n                            port.Ipv6Ranges,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.security_groups && (\n                          renderSecurityGroups(\n                            port.security_groups,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                      </ul>\n                    </div>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </ul>\n      {isDefault && (\n        <PartialValue\n          errorPath=\"default_with_rules\"\n          renderValue={() => (\n            <WarningMessage\n              className=\"rules-list__warning-message\"\n              message=\"Default security groups should have no rules.\"\n            />\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RulesList;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}