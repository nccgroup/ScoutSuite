{"version":3,"sources":["partials/aws/rds.regions.id.vpcs.id.instances.id/Informations/index.js","partials/aws/rds.regions.id.vpcs.id.instances.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","formatDate","makeTitle","convertBoolToEnable","value","SecurityGroups","props","data","title","Address","Port","errorPath","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/20.e3b37f5a.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { \n  formatDate, \n  makeTitle,\n  convertBoolToEnable,\n} from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\" \n      />\n      <PartialValue \n        label=\"Region\" \n        valuePath=\"region\" \n      />\n      <PartialValue \n        label=\"Engine\" \n        valuePath=\"Engine\" \n      />\n      <PartialValue \n        label=\"Creation Time\" \n        valuePath=\"InstanceCreateTime\" \n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Status\" \n        valuePath=\"DBInstanceStatus\" \n        renderValue={makeTitle}\n      />\n      <PartialValue \n        label=\"Is Read Replica\" \n        valuePath=\"is_read_replica\"\n      />\n      <PartialValue \n        label=\"Auto Minor Version Upgrade\" \n        valuePath=\"AutoMinorVersionUpgrade\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Multi Availability Zones\" \n        valuePath=\"MultiAZ\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Instance Class\" \n        valuePath=\"DBInstanceClass\"\n      />\n      <PartialValue \n        label=\"Backup Retention Period\" \n        valuePath=\"BackupRetentionPeriod\"\n        renderValue={value => `${value} days`}\n      />\n      <PartialValue \n        label=\"Enhanced Monitoring\" \n        valuePath=\"EnhancedMonitoringResourceArn\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Encrypted Storage\" \n        valuePath=\"StorageEncrypted\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"CA Certificate\" \n        valuePath=\"CACertificateIdentifier\" \n      />\n    </>\n  );\n};\n\nexport default Informations;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { partialDataShape, convertBoolToEnable } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Network\">\n          <div>\n            <PartialValue \n              label=\"Endpoint\"\n              valuePath=\"Endpoint\"\n              renderValue={value => `${value.Address}:${value.Port}`}\n            />\n            <PartialValue \n              label=\"Publicly Accessible\"\n              valuePath=\"PubliclyAccessible\"\n              errorPath=\"instance_publicly_accessible\"\n              renderValue={convertBoolToEnable}\n            />\n          </div>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}