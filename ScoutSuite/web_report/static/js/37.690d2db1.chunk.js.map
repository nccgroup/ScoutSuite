{"version":3,"sources":["partials/aws/dynamodb.regions.id.tables.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["DynamoDbTables","props","data","tags","get","label","valuePath","renderValue","valueOrNone","formatDate","convertBoolToEnable","title","disabled","isEmpty","renderAwsTags","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","value","cx"],"mappings":"oMA8EeA,UAxDQ,SAAAC,GAAU,IACvBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAOC,IAAIF,EAAM,CAAC,OAAQ,SAEhC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,MAAM,KACNC,UAAU,KACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,MACNC,UAAU,MACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,SACNC,UAAU,eACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,gBACNC,UAAU,qBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,oBACNC,UAAU,4BACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,aACNC,UAAU,aACVC,YAAaC,SAIjB,cAAC,IAAD,UACE,cAAC,IAAD,CACEG,MAAM,OACNC,SAAUC,IAAQV,GAFpB,SAIGW,YAAcX,Y,wDC7CVY,IAda,SAAAd,GAAU,IAC5Be,EAAaf,EAAbe,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACjB,GAAW,IAE/BU,EAKEV,EALFU,MACAQ,EAIElB,EAJFkB,WACAP,EAGEX,EAHFW,SACAQ,EAEEnB,EAFFmB,QACAJ,EACEf,EADFe,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGX,EACAc,IAAWH,GAAYI,QAG1Bf,EAGJ,OACE,cAAC,IAAkBgB,SAAnB,CAA4BC,MAAOL,EAAnC,SACE,cAAC,IAAD,CACEZ,MAAOa,EACPP,UAAWY,IAAG,mBAAoBP,GAClCH,WAAYA,EACZP,SAAUA,EACVQ,QAASA,EALX,SAOGJ","file":"static/js/37.690d2db1.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  valueOrNone,\n  formatDate,\n  convertBoolToEnable,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst DynamoDbTables = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const tags = get(data, ['item', 'tags']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\"\n          valuePath=\"id\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue\n          label=\"ARN\"\n          valuePath=\"arn\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue\n          label=\"Status\"\n          valuePath=\"table_status\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue\n          label=\"Creation Date\"\n          valuePath=\"creation_date_time\"\n          renderValue={formatDate}\n        />\n        <PartialValue\n          label=\"Automatic Backups\"\n          valuePath=\"automatic_backups_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Item Count\"\n          valuePath=\"item_count\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Tags\"\n          disabled={isEmpty(tags)}\n        >\n          {renderAwsTags(tags)}\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nDynamoDbTables.propTypes = propTypes;\n\nexport default DynamoDbTables;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}