{"version":3,"sources":["partials/azure/virtualmachines.subscriptions.id.instances.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Instances","props","data","item","network_interfaces_ids","useMemo","Object","values","network_interfaces","map","id","label","valuePath","renderValue","valueOrNone","errorPath","tags","renderList","title","value","service","resource","extensions","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/41.e9bc1eb2.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n// import Skeleton from '@material-ui/lab/Skeleton';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\n\nconst renderNetworkInterfaces = id => {\n  return (\n    <ResourceLink\n      service=\"network\" \n      resource=\"network_interfaces\"\n      id={id} />\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst Instances = props => {\n  const { data, item } = props;\n  const network_interfaces_ids = useMemo(\n    () => Object.values(item.network_interfaces).map(item => item.id),\n    [item.network_interfaces],\n  );\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\" valuePath=\"name\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"VM ID\"\n          valuePath=\"vm_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Location\"\n          valuePath=\"location\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Provisioning State\"\n          valuePath=\"provisioning_state\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Identity Principal ID\"\n          valuePath=\"identity.principal_id\"\n          errorPath=\"identity\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"License Type\"\n          valuePath=\"license_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Plan\" valuePath=\"plan\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Zones\"\n          valuePath=\"zones\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Instance View\"\n          valuePath=\"instance_view\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Proximity Placement Group\"\n          valuePath=\"proximity_placement_group\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Availability Set\"\n          valuePath=\"availability_set\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Additional Capabilities\"\n          valuePath=\"additional_capabilities\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Network Interfaces\">\n          {renderList(network_interfaces_ids, '', value =>\n            renderNetworkInterfaces(value),\n          )}\n        </TabPane>\n\n        <TabPane title=\"Extensions\">\n          {renderList(item.extensions)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nInstances.propTypes = propTypes;\n\nexport default Instances;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}