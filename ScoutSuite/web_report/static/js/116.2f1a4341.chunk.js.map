{"version":3,"sources":["partials/aws/iam.roles.id/Informations/index.js","partials/aws/iam.roles.id/index.js","components/InformationsWrapper/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","formatDate","IamRoles","props","data","role_policy","get","instances","lambdas","inline_policies","policies","tags","title","policy","PolicyDocument","policyPath","disabled","isEmpty","renderList","Object","values","renderResourceLink","entries","map","i","id","name","renderPolicyLink","renderAwsTags","InformationsWrapper","children","className"],"mappings":"kJA2CeA,UArCM,WACnB,OACE,qCACE,cAAC,IAAD,CACEC,MAAM,KACNC,UAAU,KACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,MACNC,UAAU,MACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,cACNC,UAAU,cACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,gBACNC,UAAU,aACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,OACNC,UAAU,OACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,uBACNC,UAAU,uBACVC,YAAaC,W,yJCyDNE,UAvEE,SAAAC,GAAU,IACjBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAcC,IAAIF,EAAM,CAAC,OAAQ,sBAAuB,IACxDG,EAAYD,IAAIF,EAAM,CAAC,OAAQ,qBAAsB,IACrDI,EAAUF,IAAIF,EAAM,CAAC,OAAQ,cAAe,IAC5CK,EAAkBH,IAAIF,EAAM,CAAC,OAAQ,mBAAoB,IACzDM,EAAWJ,IAAIF,EAAM,CAAC,OAAQ,YAAa,IAC3CO,EAAOL,IAAIF,EAAM,CAAC,OAAQ,QAAS,IAEzC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,UAAD,MAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAASQ,MAAM,oBAAf,SACE,cAAC,IAAD,CACEC,OAAQR,EAAYS,eACpBC,WAAW,wCAGf,cAAC,IAAD,CACEH,MAAM,YACNI,SAAUC,IAAQV,GAFpB,SAIGW,YAAWC,OAAOC,OAAOb,GAAY,GAAIc,YAAmB,MAAO,gBAEtE,cAAC,IAAD,CACET,MAAM,mBACNI,SAAUC,IAAQT,GAFpB,SAIGU,YAAWC,OAAOC,OAAOZ,GAAU,GAAIa,YAAmB,YAAa,gBAE1E,cAAC,IAAD,CACET,MAAM,kBACNI,SAAUC,IAAQR,GAFpB,SAIE,mCACGU,OAAOG,QAAQb,GAAiBc,KAAI,WAAeC,GAAf,uBAAEC,EAAF,KAAMZ,EAAN,YACnC,cAAC,IAAD,CAEEa,KAAMb,EAAOa,KACbb,OAAQA,EAAOC,eACfC,WAAU,0BAAqBU,EAArB,oBAHLD,UAQb,cAAC,IAAD,CACEZ,MAAM,mBACNI,SAAUC,IAAQP,GAFpB,SAIGQ,YAAWR,EAAU,GAAIiB,OAE5B,cAAC,IAAD,CACEf,MAAM,OACNI,SAAUC,IAAQN,GAFpB,SAIGiB,YAAcjB,a,wDC7DVkB,IAda,SAAA1B,GAAU,IAC5B2B,EAAa3B,EAAb2B,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O","file":"static/js/116.2f1a4341.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { formatDate, valueOrNone } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ID\" \n        valuePath=\"id\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Description\" \n        valuePath=\"description\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Creation Date\" \n        valuePath=\"CreateDate\"\n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Path\" \n        valuePath=\"path\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue \n        label=\"Max Session Duration\" \n        valuePath=\"max_session_duration\"\n        renderValue={valueOrNone}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  renderList,\n  renderResourceLink,\n  renderPolicyLink,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { Partial } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport Policy from '../../../components/Partial/Policy';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst IamRoles = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const role_policy = get(data, ['item', 'assume_role_policy'], {});\n  const instances = get(data, ['item', 'instance_profiles'], {});\n  const lambdas = get(data, ['item', 'awslambdas'], {});\n  const inline_policies = get(data, ['item', 'inline_policies'], {});\n  const policies = get(data, ['item', 'policies'], []);\n  const tags = get(data, ['item', 'Tags'], []);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Role Trust Policy\">\n          <Policy\n            policy={role_policy.PolicyDocument}\n            policyPath=\"assume_role_policy.PolicyDocument\"\n          />\n        </TabPane>\n        <TabPane \n          title=\"Instances\"\n          disabled={isEmpty(instances)}\n        >\n          {renderList(Object.values(instances), '', renderResourceLink('ec2', 'instances'))}\n        </TabPane>\n        <TabPane \n          title=\"Lambda Functions\"\n          disabled={isEmpty(lambdas)}\n        >\n          {renderList(Object.values(lambdas), '', renderResourceLink('awslambda', 'functions'))}\n        </TabPane>\n        <TabPane \n          title=\"Inline Policies\"\n          disabled={isEmpty(inline_policies)}\n        >\n          <>\n            {Object.entries(inline_policies).map(([id, policy], i) => (\n              <Policy\n                key={i}\n                name={policy.name}\n                policy={policy.PolicyDocument}\n                policyPath={`inline_policies.${id}.PolicyDocument`}\n              />\n            ))}\n          </>\n        </TabPane>\n        <TabPane \n          title=\"Managed Policies\"\n          disabled={isEmpty(policies)}\n        >\n          {renderList(policies, '', renderPolicyLink)}\n        </TabPane>\n        <TabPane \n          title=\"Tags\"\n          disabled={isEmpty(tags)}\n        >\n          {renderAwsTags(tags)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nIamRoles.propTypes = propTypes;\n\nexport default IamRoles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}