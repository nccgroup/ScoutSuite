{"version":3,"sources":["partials/azure/aad.applications.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderPasswordCredentials","item","label","value","key_id","start_date","end_date","id","Applications","props","data","valuePath","renderValue","valueOrNone","title","values","renderList","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"oKASMA,EAA4B,SAACC,GACjC,OACE,+BACE,cAAC,IAAD,CAAcC,MAAM,KAAKC,MAAOF,EAAKG,SACrC,+BACE,6BAAI,cAAC,IAAD,CAAcF,MAAM,aAAaC,MAAOF,EAAKI,eACjD,6BAAI,cAAC,IAAD,CAAcH,MAAM,WAAWC,MAAOF,EAAKK,kBAJ1CL,EAAKM,KA6GHC,UA/FM,SAAAC,GAAU,IACrBC,EAASD,EAATC,KAER,OAAKA,EAGH,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACER,MAAM,KAAKS,UAAU,KACrBC,YAAaC,MAEf,cAAC,IAAD,CACEX,MAAM,SACNS,UAAU,SACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,OACNS,UAAU,cACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,mBACNS,UAAU,mBACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,mBACNS,UAAU,mBACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,6BACNS,UAAU,6BACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,uBACNS,UAAU,uBACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,0BACNS,UAAU,0BACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,gBACNS,UAAU,gBACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,6BACNS,UAAU,gCACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,8BACNS,UAAU,8BACVC,YAAaC,MAGf,cAAC,IAAD,CACEX,MAAM,qBACNS,UAAU,qBACVC,YAAaC,SAIjB,cAAC,IAAD,UACE,cAAC,IAAD,CAASC,MAAM,uBAAf,SACE,cAAC,IAAD,CACEH,UAAU,uBACVC,YAAa,SAAAG,GAAM,OACjBC,YAAWD,EAAQ,GAAIf,aAjFjB,O,iCC5BpB,0HAEMiB,EAAgB,CACpBC,cAAe,GACfjB,KAAM,IAGKkB,EAAiBC,IAAMC,cAAcJ,GACrCK,EAAqBF,IAAMC,cAAc,IACzCE,EAAoBH,IAAMC,eAAc,gB,sMC8CtCG,EAvCM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAAW,EACdC,qBAAWC,KAAxCC,EAD2C,EAC3CA,WAAYC,EAD+B,EAC/BA,aACZC,EAAoBC,cAApBD,gBAgBFE,EAAQC,IAAIL,EAAY,CAACL,EAASC,GAAU,IAAIU,SAAST,GAE/D,OACE,cAACU,EAAA,EAAD,CACEvB,MAAM,wBAAwBwB,UAAU,MACxCC,OAAK,EAFP,SAGE,cAACC,EAAA,EAAD,CACEC,SAAUP,EACVQ,KAAK,QACLC,UAAW,cAAC,IAAD,IACXC,UAAU,gBACVC,QAzBM,WACVd,EAAaN,EAASC,EAASC,GAC/BK,EACE,0DACA,CACEc,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAYhB,oB,QCWAC,EAAe,SAAAzC,GAAU,IA4BzB0C,EA1BFjD,EAUEO,EAVFP,MACAkD,EASE3C,EATF2C,UACAzC,EAQEF,EARFE,UACA0C,EAOE5C,EAPF4C,UACAT,EAMEnC,EANFmC,UACAU,EAKE7C,EALF6C,OACAC,EAIE9C,EAJF8C,QACAC,EAGE/C,EAHF+C,aACA5C,EAEEH,EAFFG,YACA6C,EACEhD,EADFgD,kBAGIC,EAASC,cACTC,EAAMhC,qBAAWT,KACjB0C,EAAWjC,qBAAWN,KACtBwC,EAAgBlC,qBAAWL,KAE3BwC,EAAgBC,YAAYP,GAAqBI,EAAUlD,GAC7DR,EAAQS,EACVH,EAAMN,OAASgC,IAAIyB,EAAI3D,KAAM8D,EAAetD,EAAMN,SAG/B,mBAAVA,IACTA,EAAQ8D,OAAO9D,IAIbkD,GAEFF,GADce,IAAQb,GAAaA,EAAY,CAACA,IACzBc,KAAI,SAAAxC,GAAI,OAC7BqC,YAAYP,GAAqBI,EAAUlC,MAG7CwB,EAAiB,CAACY,GAGpB,IAAMK,EAAWjB,EAAekB,MAAK,SAAA1C,GAAI,OACvCiC,EAAIU,eAAelC,SAAST,MAExB4C,EAAQX,EAAIW,MAQlB,GANAC,qBAAU,WACJJ,GACFN,EAAcS,KAEf,CAACA,SAEUE,IAAVtE,GAAiC,OAAVA,EACzB,OAAO,KAGT,IAAMuE,EACJ,cAAC,EAAD,CACEjD,QAASiC,EAAOjC,QAASC,QAASgC,EAAOhC,QACzCC,KAAI,UAAKiC,EAAIjC,KAAT,YAAiBwB,EAAe,MAGlCwB,EACJ,uBAAM/B,UAAWgC,IAAGR,GAAYQ,IAAG,QAASL,IAA5C,UACGpE,EACAiE,GAAYM,KAIjB,OACE,cAACG,EAAA,EAAD,CACEjC,UAAWgC,IAAGhC,EAAW,gBAAiB,CAAEU,WAC5CpD,MAAOA,EACPkD,UAAWA,EACXjD,MACEoD,EACE,cAAClB,EAAA,EAAD,yBAASvB,MAAOX,GAAWqD,GAA3B,aACGmB,KAGHA,KAQVzB,EAAa4B,aApGQ,CACnB5E,MAAO,GACPkD,UAAW,KACXjD,MAAO,KACPQ,UAAW,KACX0C,UAAW,KACXC,QAAQ,EACRC,SAAS,EACTC,aAAc,CACZuB,WAAY,IACZzC,UAAW,aAEb1B,YAAa,SAAAT,GAAK,OAAIA,IA0FT+C,O,qECjHA8B,IAdQ,SAACvE,GAAW,IACzBkB,EAAmBlB,EAAnBkB,KAAMsD,EAAaxE,EAAbwE,SAERpB,EAAWjC,qBAAWN,KAE5B,OACE,cAAC,IAAmB4D,SAApB,CAA6B/E,MAAO6D,YAAYH,EAAUlC,GAA1D,SACGsD,M,sKCOQE,G,OAdQ,SAAC1E,GAAW,IACzBC,EAAmBD,EAAnBC,KAAMuE,EAAaxE,EAAbwE,SAId,OAFAG,QAAQC,KAAK,eAAgB3E,GAG3B,cAAC,IAAewE,SAAhB,CAAyB/E,MAAOO,EAAhC,SACGuE,M,iGCMQK,IAda,SAAA7E,GAAU,IAC5BwE,EAAaxE,EAAbwE,SAER,OACE,sBAAKrC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCqC,O,uNCyCQM,G,OAtCQ,SAAC9E,GAAW,IAE/BK,EAKEL,EALFK,MACA0E,EAIE/E,EAJF+E,WACA/C,EAGEhC,EAHFgC,SACAI,EAEEpC,EAFFoC,QACAoC,EACExE,EADFwE,SAN8B,EASIQ,mBAAS,IATb,mBASzBC,EATyB,KASb5B,EATa,KAW1B6B,EAAgBD,EAElB,qCACG5E,EACA8E,IAAWF,GAAYG,QAG1B/E,EAGJ,OACE,cAAC,IAAkBoE,SAAnB,CAA4B/E,MAAO2D,EAAnC,SACE,cAAC,IAAD,CACEhD,MAAO6E,EACP/C,UAAWgC,IAAG,mBAAoBc,GAClCF,WAAYA,EACZ/C,SAAUA,EACVI,QAASA,EALX,SAOGoC","file":"static/js/38.762b736f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { partialDataShape, valueOrNone } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport { renderList } from '../../../utils/Partials/index';\n\nconst renderPasswordCredentials = (item) => {\n  return (\n    <li key={item.id}>\n      <PartialValue label=\"ID\" value={item.key_id} />\n      <ul>\n        <li><PartialValue label=\"Start Date\" value={item.start_date} /></li>\n        <li><PartialValue label=\"End Date\" value={item.end_date} /></li>\n      </ul>\n    </li>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Applications = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\" valuePath=\"id\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"App ID\"\n          valuePath=\"app_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Type\"\n          valuePath=\"object_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Sign In Audience\"\n          valuePath=\"sign_in_audience\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Publisher Domain\"\n          valuePath=\"publisher_domain\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Available To Other Tenants\"\n          valuePath=\"available_to_other_tenants\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Allow Guests Sign-In\"\n          valuePath=\"allow_guests_sign_in\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Allow Passthrough Users\"\n          valuePath=\"allow_passthrough_users\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Public Client\"\n          valuePath=\"public_client\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Device-Only Auth Supported\"\n          valuePath=\"is_device_only_auth_supported\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Pre-Authorized Applications\"\n          valuePath=\"pre_authorized_applications\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Deletion Timestamp\"\n          valuePath=\"deletion_timestamp\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Password Credentials\">\n          <PartialValue\n            valuePath=\"password_credentials\"\n            renderValue={values =>\n              renderList(values, '', renderPasswordCredentials)\n            }\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nApplications.propTypes = propTypes;\n\nexport default Applications;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}