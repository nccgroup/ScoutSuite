{"version":3,"sources":["partials/aws/s3.buckets.id/BucketPolicies/AccessControlList/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js"],"names":["AccessControlList","ctx","useContext","PartialContext","basePath","PartialPathContext","value","get","item","className","Object","keys","map","id","valuePath","tooltip","errorPath","renderValue","convertBoolToCheckmark","defaultValues","path_to_issue","React","createContext","PartialTabContext","PartialSection","props","path","children","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","title","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","label","separator","inline","tooltipProps","basePathOverwrite","params","useParams","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","data","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/105.6db624fc.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../../components/Partial/context';\nimport { PartialValue } from '../../../../../components/Partial';\nimport { convertBoolToCheckmark } from '../../../../../utils/Partials';\n\n\nconst AccessControlList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);  \n\n  return (\n    <table className=\"acl-table\">\n      <thead>\n        <tr>\n          <th/>\n          <th>List</th>\n          <th>Upload/Delete</th>\n          <th>View Permissions</th>\n          <th>Edit Permissions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(value).map(id => (\n          <tr key={id}>\n            <td>\n              <PartialValue \n                valuePath={`${id}.DisplayName`} \n                tooltip\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.read`}\n                errorPath={`${id}.read`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.read_acp`}\n                errorPath={`${id}.read_acp`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.write`}\n                errorPath={`${id}.write`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.write_acp`}\n                errorPath={`${id}.write_acp`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n          </tr>\n        ))}\n        \n      </tbody>\n    </table>\n  );\n};\n\nexport default AccessControlList;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;"],"sourceRoot":""}