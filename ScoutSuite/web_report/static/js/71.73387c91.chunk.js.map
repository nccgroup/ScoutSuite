{"version":3,"sources":["partials/gcp/kubernetesengine.projects.id.zones.id.clusters.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js"],"names":["renderCIRBlock","displayName","cidrBlock","K8SClusters","props","nodePools","data","item","get","label","valuePath","renderValue","convertBoolToEnable","errorPath","values","renderList","valueOrNone","labels","convertListToChips","title","node_pools","Object","entries","map","key","path","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","value","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper"],"mappings":"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","file":"static/js/71.73387c91.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { Partial, PartialSection, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  convertBoolToEnable,\n  convertListToChips,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Tabs';\nimport { renderList, valueOrNone } from '../../../utils/Partials/index';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nconst renderCIRBlock = ({ displayName, cidrBlock }) =>\n  `${displayName}: ${cidrBlock}`;\n\nconst renderNodePools = nodePools => {\n  return Object.entries(nodePools).map(([key]) => (\n    <div key={key}>\n\n      <h3>{key}</h3>\n      <PartialSection path={key}>\n        <PartialValue\n          label=\"Automatic node upgrades\"\n          valuePath=\"auto_upgrade_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Automatic node repair\"\n          valuePath=\"auto_repair_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Legacy metadata endpoints\"\n          valuePath=\"legacy_metadata_endpoints_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n      </PartialSection>\n\n      \n    </div>\n  ));\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst K8SClusters = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\"\n          valuePath=\"name\" />\n\n        <PartialValue\n          label=\"Project ID\"\n          valuePath=\"project\" />\n\n        <PartialValue\n          label=\"Dashboard\"\n          valuePath=\"dashboard_status\" />\n\n        <PartialValue\n          label=\"Alias IP\"\n          valuePath=\"alias_ip_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Basic Authentication\"\n          valuePath=\"basic_authentication_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Client Certificate Authentication\"\n          valuePath=\"client_certificate_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Image Type\"\n          valuePath=\"image_type\"\n          errorPath=\"container_optimized_os_not_used\" />\n\n        <PartialValue\n          label=\"Legacy Authorization\"\n          valuePath=\"legacy_abac_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Master Authorized Networks\"\n          valuePath=\"master_authorized_networks_enabled\"\n          errorPath=\"master_authorized_networks_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Pod Security Policy\"\n          valuePath=\"pod_security_policy_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Network Policy\"\n          valuePath=\"network_policy_enabled\"\n          errorPath=\"network_policy_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Private Cluster\"\n          valuePath=\"private_cluster_enabled\"\n          errorPath=\"private_cluster_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Private Google Access\"\n          valuePath=\"private_ip_google_access_enabled\"\n          errorPath=\"private_ip_google_access_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Service Account\"\n          valuePath=\"service_account\"\n          errorPath=\"default_service_account_used\" />\n\n        <PartialValue\n          label=\"Stackdriver Logging\"\n          valuePath=\"logging_enabled\"\n          errorPath=\"logging_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Stackdriver Monitoring\"\n          valuePath=\"monitoring_enabled\"\n          errorPath=\"monitoring_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Scopes\"\n          valuePath=\"scopes\"\n          errorPath=\"scopes_not_limited\"\n          renderValue={values => renderList(values, '', valueOrNone)}\n        />\n\n        {item.labels && (\n          <PartialValue\n            label=\"Labels\"\n            valuePath=\"labels\"\n            errorPath=\"has_no_labels\"\n            renderValue={convertListToChips}\n          />\n        )}\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Master Authorized Networks\">\n          <PartialValue\n            label=\"Status\"\n            valuePath=\"master_authorized_networks_config.enabled\"\n            renderValue={convertBoolToEnable}\n          />\n\n          <PartialValue\n            label=\"CIDR Blocks\"\n            valuePath=\"master_authorized_networks_config.cidrBlocks\"\n            renderValue={values => renderList(values, '', renderCIRBlock)}\n          />\n        </TabPane>\n\n        <TabPane title=\"Node pools\">{renderNodePools(item.node_pools)}</TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nK8SClusters.propTypes = propTypes;\n\nexport default K8SClusters;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}