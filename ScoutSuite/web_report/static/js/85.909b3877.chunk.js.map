{"version":3,"sources":["partials/aws/iam.users.id/AuthenticationMethods/index.js","partials/aws/iam.users.id/index.js","components/InformationsWrapper/index.js","components/WarningMessage/index.js"],"names":["AuthenticationMethods","props","mfaDevices","accessKeys","loginProfile","className","label","valuePath","renderValue","value","convertBoolToYesOrNo","isEmpty","errorPath","map","mfa","i","SerialNumber","get","key","AccessKeyId","Status","formatDate","CreateDate","length","message","IamUsers","data","groups","inline_policies","policies","tags","valueOrNone","title","disabled","renderList","Object","values","id","service","resource","entries","policy","name","PolicyDocument","policyPath","renderPolicyLink","renderAwsTags","InformationsWrapper","children","defaultProps","icon","fontSize","WarningMessage","cx"],"mappings":"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","file":"static/js/85.909b3877.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport {\n  convertBoolToYesOrNo, \n  formatDate,\n} from '../../../../utils/Partials';\nimport { PartialValue } from '../../../../components/Partial';\nimport DetailedValue from '../../../../components/DetailedValue';\n\nimport './style.scss';\nimport WarningMessage from '../../../../components/WarningMessage';\n\n\nconst propTypes = {\n  mfaDevices: PropTypes.array.isRequired,\n  accessKeys: PropTypes.array.isRequired,\n  loginProfile: PropTypes.object.isRequired,\n};\n\n\nconst AuthenticationMethods = props => {\n  const { \n    mfaDevices, \n    accessKeys,\n    loginProfile,\n  } = props;\n\n  return (\n    <div className=\"authentication-methods\">\n      <PartialValue\n        label=\"Password enabled\"\n        valuePath=\"LoginProfile\"\n        renderValue={value => convertBoolToYesOrNo(!isEmpty(value))}\n      />\n      <PartialValue\n        label=\"Multi-Factor enabled\"\n        valuePath=\"MFADevices\"\n        errorPath=\"mfa_enabled\"\n        renderValue={value => convertBoolToYesOrNo(!isEmpty(value))}\n      />\n      {!isEmpty(mfaDevices) && (\n        <ul>\n          {mfaDevices.map((mfa, i) => (\n            <li key={i}>\n              <DetailedValue \n                label=\"Serial Number\"\n                value={mfa.SerialNumber}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n      <PartialValue\n        label=\"Access Keys\"\n        valuePath=\"AccessKeys\"\n        errorPath=\"multiple_api_keys\"\n        renderValue={value => get(value, 'length', 0)}\n      />\n      {!isEmpty(accessKeys) && (\n        <ul>\n          {accessKeys.map((key, i) => (\n            <li key={i}>\n              <PartialValue\n                errorPath={`AccessKeys.${i}`}\n                renderValue={() => (\n                  <ul className=\"key-infos\">\n                    {key.AccessKeyId}\n                    <li>{key.Status}</li>\n                    <li>{`Created on ${formatDate(key.CreateDate)}`}</li>\n                  </ul>\n                )}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n\n      <div className=\"warnings\">\n        {!isEmpty(loginProfile) && accessKeys.length > 0 && (\n          <PartialValue\n            errorPath=\"password_and_keys\"\n            renderValue={() => (\n              <WarningMessage \n                message=\"Review the need for password-based and key-based authentication\" \n              />\n            )}\n          />\n        )}\n        {accessKeys.length > 1 && (\n          <PartialValue \n            errorPath=\"multiple_active_api_keys\"\n            renderValue={() => (\n              <WarningMessage \n                message=\"Review the need for multiple active access keys\" \n              />\n            )}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nAuthenticationMethods.propTypes = propTypes;\n\nexport default AuthenticationMethods;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  formatDate,\n  valueOrNone,\n  renderList,\n  renderPolicyLink,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport AuthenticationMethods from './AuthenticationMethods';\nimport Policy from '../../../components/Partial/Policy';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst IamUsers = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const groups = get(data, ['item', 'groups'], {});\n  const inline_policies = get(data, ['item', 'inline_policies'], {});\n  const policies = get(data, ['item', 'policies'], {});\n  const tags = get(data, ['item', 'Tags'], []);\n\n  const renderGroupLink = id => (\n    <ResourceLink\n      service=\"iam\"\n      resource=\"groups\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue \n          label=\"ARN\" \n          valuePath=\"arn\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue \n          label=\"Creation Date\" \n          valuePath=\"CreateDate\"\n          renderValue={formatDate}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Authentication Methods\">\n          <AuthenticationMethods \n            mfaDevices={get(data, ['item', 'MFADevices'])}\n            accessKeys={get(data, ['item', 'AccessKeys'])}\n            loginProfile={get(data, ['item', 'LoginProfile'])}\n          />\n        </TabPane>\n        <TabPane \n          title=\"Groups\"\n          disabled={isEmpty(groups)}\n        >\n          {renderList(Object.values(groups), '', renderGroupLink)}\n        </TabPane>\n        \n        <TabPane \n          title=\"Inline Policies\"\n          disabled={isEmpty(inline_policies)}\n        >\n          <>\n            {Object.entries(inline_policies).map(([id, policy], i) => (\n              <Policy\n                key={i}\n                name={policy.name}\n                policy={policy.PolicyDocument}\n                policyPath={`inline_policies.${id}.PolicyDocument`}\n              />\n            ))}\n          </>\n        </TabPane>\n        <TabPane \n          title=\"Managed Policies\"\n          disabled={isEmpty(policies)}\n        >\n          {renderList(Object.values(policies), '', renderPolicyLink)}\n        </TabPane>\n        <TabPane \n          title=\"Tags\"\n          disabled={isEmpty(tags)}\n        >\n          {renderAwsTags(tags)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nIamUsers.propTypes = propTypes;\n\nexport default IamUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}