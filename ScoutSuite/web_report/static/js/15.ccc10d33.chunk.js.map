{"version":3,"sources":["partials/aws/rds.regions.id.parameter_groups.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["ParameterGroups","props","data","parameters","get","parameterLabel","name","description","className","title","placement","arrow","fontSize","label","valuePath","disabled","isEmpty","Object","entries","filter","ParameterValue","map","i","parameter","Description","value","errorPath","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","renderValue","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/15.ccc10d33.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\n\nimport { partialDataShape } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ParameterGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const parameters = get(data, ['item', 'parameters']);\n\n  const parameterLabel = (name, description) => (\n    <span className=\"parameter-label\">\n      <Tooltip \n        title={description}\n        placement=\"top\"\n        arrow\n      > \n        <InfoOutlinedIcon \n          fontSize=\"inherit\"\n        />\n      </Tooltip>\n      {`${name}: `}\n    </span>\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Group Family\"\n          valuePath=\"DBParameterGroupFamily\"\n        />\n        <PartialValue\n          label=\"Descripition\"\n          valuePath=\"Description\"\n        />\n        <PartialValue\n          label=\"ARN\"\n          valuePath=\"arn\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Parameters\"\n          disabled={isEmpty(parameters)}\n        >\n          <div className=\"rds-parameters\">\n            {Object.entries(parameters)\n              .filter(([, value]) => value.ParameterValue)\n              .map(([name, parameter], i) => (\n                <PartialValue\n                  key={i}\n                  label={parameterLabel(name, parameter.Description)}\n                  value={parameter.ParameterValue || ''}\n                  errorPath={name}\n                />\n              ))\n            }\n          </div>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nParameterGroups.propTypes = propTypes;\n\nexport default ParameterGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}