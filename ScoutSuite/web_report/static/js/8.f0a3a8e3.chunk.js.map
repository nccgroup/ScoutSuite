{"version":3,"sources":["partials/aws/vpc.regions.id.vpcs.id.network_acls.id/RulesTable/index.js","partials/aws/vpc.regions.id.vpcs.id.network_acls.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/WarningMessage/index.js"],"names":["RulesTable","props","rules","type","className","Object","entries","map","rule_id","rule","value","errorPath","port_range","protocol","CidrBlock","RuleAction","RegionDomain","data","get","subnets","label","valuePath","title","isEmtpy","renderValue","message","renderList","id","service","resource","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/8.f0a3a8e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialValue } from '../../../../components/Partial';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  rules: PropTypes.object.isRequired,\n  type: PropTypes.oneOf([\n    'egress', \n    'ingress'\n  ]).isRequired,\n};\n\nconst RulesTable = props => {\n  const {\n    rules,\n    type,\n  } = props;\n\n  return (\n    <table className=\"rules-table\">\n      <thead>\n        <tr>\n          <th>Rule Number</th>\n          <th>Port</th>\n          <th>Protocol</th>\n          <th>IP Address</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(rules[type]).map(([rule_id, rule]) => (\n          <tr key={rule_id}>\n            <td>\n              <PartialValue\n                value={rule_id}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.port_range}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.protocol}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.CidrBlock}\n                errorPath={`${type}.${rule_id}`}\n              />\n              \n            </td>\n            <td>\n              <PartialValue\n                value={rule.RuleAction}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nRulesTable.propTypes = propTypes;\n\nexport default RulesTable;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmtpy from 'lodash/isEmpty';\n\nimport { partialDataShape, renderList } from '../../../utils/Partials';\nimport { \n  Partial, \n  PartialValue,\n} from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport RulesTable from './RulesTable';\nimport WarningMessage from '../../../components/WarningMessage';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const rules = get(data, ['item', 'rules']);\n  const subnets = get(data, ['item', 'Associations']);\n\n  const renderSubnetLink = id => (\n    <ResourceLink\n      service=\"vpc\"\n      resource=\"subnets\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\"\n          valuePath=\"id\"\n        />\n        <PartialValue\n          label=\"Default\"\n          valuePath=\"IsDefault\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Egress Rules\">\n          <RulesTable \n            rules={rules}\n            type=\"egress\"\n          />\n        </TabPane>\n        <TabPane title=\"Ingress Rules\">\n          <RulesTable \n            rules={rules}\n            type=\"ingress\"\n          />\n        </TabPane>\n        <TabPane title=\"Associated Subnets\">\n          {!isEmtpy(subnets) ? (\n            renderList(subnets, 'SubnetId', renderSubnetLink)\n          ) : (\n            <PartialValue \n              valuePath=\"IsDefault\"\n              errorPath=\"unused\"\n              renderValue={value => (\n                !value && (\n                  <WarningMessage \n                    message=\"This network ACL is not the VPC's default NACL and is not associated with any existing VPC.\"\n                  />\n                )\n              )}\n            />\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}