{"version":3,"sources":["partials/aws/elbv2.regions.id.vpcs.id.lbs.id/Informations/index.js","partials/aws/elbv2.regions.id.vpcs.id.lbs.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","errorPath","renderValue","value","map","zone","i","ZoneName","SubnetId","ElbV2","props","data","path","get","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","item","listeners","attributes","securityGroups","tags","isNetwork","title","Object","entries","port","listener","SslPolicy","Protocol","inline","Key","Value","disabled","renderList","renderSecurityGroupLink","renderAwsTags","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","match"],"mappings":"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","file":"static/js/13.fbe8316b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"DNS\"\n        valuePath=\"DNSName\"\n      />\n      <PartialValue\n        label=\"Scheme\"\n        valuePath=\"Scheme\"\n        errorPath=\"load_balancer_scheme\"\n      />\n      <PartialValue\n        label=\"Type\"\n        valuePath=\"Type\"\n      />\n      <PartialValue\n        label=\"Availability zones\"\n        valuePath=\"AvailabilityZones\"\n        renderValue={value => (\n          <ul>\n            {value.map((zone, i) => (\n              <li key={i}>\n                {`${zone.ZoneName} (${zone.SubnetId})`}\n              </li>\n            ))}\n          </ul>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { getRegionFromPath, getVpcFromPath } from '../../../utils/Api';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { \n  partialDataShape,\n  renderList,\n  renderSecurityGroupLink,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ElbV2 = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.elbv2.regions.${region}.vpcs.${vpcId}.name`)\n  );\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc} (${vpcId})`;\n  }\n\n  const listeners = get(data, ['item', 'listeners'], {});\n  const attributes = get(data, ['item', 'attributes'], []);\n  const securityGroups = get(data, ['item', 'security_groups'], {});\n  const tags = get(data, ['item', 'tags'], []);\n  const isNetwork = get(data, ['item', 'isNetwork']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <div>\n        <TabsMenu>\n          <TabPane title=\"Listeners\">\n            <ul>\n              {Object.entries(listeners).map(([port, listener], i) => (\n                <li key={i}>\n                  <PartialValue\n                    value={{\n                      port,\n                      ...listener,\n                    }}\n                    errorPath={`listeners.${port}`}\n                    renderValue={value => value.SslPolicy ? (\n                      <>\n                        {`${value.port} (${value.Protocol}, `}\n                        <PartialValue\n                          value={value.SslPolicy}\n                          errorPath={`listeners.${value.port}.SslPolicy`}\n                          inline\n                        />\n                        {')'}\n                      </>\n                    ) : (\n                      `${value.port} (${value.Protocol})`\n                    )}\n                  />\n                </li>\n              ))}\n            </ul>\n          </TabPane>\n          <TabPane title=\"Attributes\">\n            <div>\n              {attributes.map(({ Key, Value }, i) => (\n                <PartialValue \n                  key={i}\n                  label={Key}\n                  value={Value}\n                  errorPath={`attributes.${i}`}\n                />\n              ))}\n            </div>\n          </TabPane>\n          {!isNetwork && (\n            <TabPane\n              title=\"Security Groups\"\n              disabled={isEmpty(securityGroups)}\n            >\n              {renderList(securityGroups, '', renderSecurityGroupLink)}\n            </TabPane>\n          )}\n          {!isEmpty(tags) && (\n            <TabPane title=\"Tags\">\n              {renderAwsTags(tags)}\n            </TabPane>\n          )}\n        </TabsMenu>\n      </div>\n    </Partial>\n  );\n};\n\nElbV2.propTypes = propTypes;\n\nexport default ElbV2;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}