{"version":3,"sources":["partials/azure/storageaccounts.subscriptions.id.storage_accounts.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Bucket","props","data","blob_containers","get","blob_services","label","valuePath","renderValue","convertBoolToEnable","convertValueOrNever","convertListToChips","title","isEmpty","Object","values","map","value","id","renderBlobContainer","name","renderBlobService","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"6MA+HeA,UAjFA,SAACC,GAAW,IACjBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAGlB,IAAMC,EAAkBC,IAAIF,EAAM,CAAC,OAAQ,oBACrCG,EAAgBD,IAAIF,EAAM,CAAC,OAAQ,kBAEzC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,MAAM,uBACNC,UAAU,SAEZ,cAAC,IAAD,CACED,MAAM,iBACNC,UAAU,yBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,iBACNC,UAAU,wBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,6BACNC,UAAU,qCACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,2BACNC,UAAU,sBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,8CACNC,UAAU,kCACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,OACNC,UAAU,OACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,iBACNC,UAAU,sBACVC,YAAaE,SAIjB,eAAC,IAAD,WACE,cAAC,IAAD,CAASE,MAAM,kBAAf,SACIC,IAAQV,GAMR,wCALA,6BACGW,OAAOC,OAAOZ,GAAiBa,KAAI,SAACC,GAAD,OAlFtB,SAAAf,GAC1B,OAAQ,+BACN,6BAAKA,EAAKgB,KACV,6BACE,cAAC,IAAD,CACEZ,MAAM,wBACNC,UAAS,0BAAqBL,EAAKgB,GAA1B,0BACTV,YAAaC,UANFP,EAAKgB,IAkFRC,CAAoBF,UAM5B,cAAC,IAAD,CAASL,MAAM,gBAAf,SACIC,IAAQR,GAMR,wCALA,6BACGS,OAAOC,OAAOV,GAAeW,KAAI,SAACC,GAAD,OAhFtB,SAAAf,GACxB,OAAQ,+BACN,6BAAKA,EAAKkB,OACV,6BACE,cAAC,IAAD,CACEd,MAAM,cACNC,UAAS,wBAAmBL,EAAKgB,GAAxB,wBACTV,YAAaC,UANFP,EAAKgB,IA+EmCG,CAAkBJ,kB,wDCzF9DK,IAda,SAAArB,GAAU,IAC5BsB,EAAatB,EAAbsB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACxB,GAAW,IAE/BW,EAKEX,EALFW,MACAc,EAIEzB,EAJFyB,WACAC,EAGE1B,EAHF0B,SACAC,EAEE3B,EAFF2B,QACAL,EACEtB,EADFsB,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGlB,EACAqB,IAAWH,GAAYI,QAG1BtB,EAGJ,OACE,cAAC,IAAkBuB,SAAnB,CAA4BlB,MAAOc,EAAnC,SACE,cAAC,IAAD,CACEnB,MAAOoB,EACPR,UAAWY,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/50.858800e3.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nimport { Partial } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport PartialValue from '../../../components/Partial/PartialValue/index';\nimport {\n  convertBoolToEnable,\n  convertValueOrNever,\n  convertListToChips,\n} from '../../../utils/Partials/index';\nimport { TabPane, TabsMenu } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst renderBlobContainer = data => {\n  return (<li key={data.id}>\n    <h2>{data.id}</h2>\n    <ul>\n      <PartialValue\n        label=\"Public Access Allowed\"\n        valuePath={`blob_containers.${data.id}.public_access_allowed`}\n        renderValue={convertBoolToEnable}\n      />\n    </ul>\n  </li>);\n};\nconst renderBlobService = data => {\n  return (<li key={data.id}>\n    <h2>{data.name}</h2>\n    <ul>\n      <PartialValue\n        label=\"Soft Delete\"\n        valuePath={`blob_services.${data.id}.soft_delete_enabled`}\n        renderValue={convertBoolToEnable}\n      />\n    </ul>\n  </li>);\n};\n\nconst Bucket = (props) => {\n  const { data } = props;\n\n  if (!data) return null;\n\n\n  const blob_containers = get(data, ['item', 'blob_containers']);\n  const blob_services = get(data, ['item', 'blob_services']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Storage Account Name\"\n          valuePath=\"name\"\n        />\n        <PartialValue\n          label=\"Public Traffic\"\n          valuePath=\"public_traffic_allowed\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"HTTPS Required\"\n          valuePath=\"https_traffic_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Microsoft Trusted Services\"\n          valuePath=\"trusted_microsoft_services_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Last Access Key Rotation\"\n          valuePath=\"access_keys_rotated\"\n          renderValue={convertValueOrNever}\n        />\n        <PartialValue\n          label=\"Storage encrypted with Customer Managed Key\"\n          valuePath=\"encryption_key_customer_managed\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={convertListToChips}\n        />\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={convertValueOrNever}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Blob Containers\">\n          {!isEmpty(blob_containers) ? (\n            <ul>\n              {Object.values(blob_containers).map((value) =>\n                renderBlobContainer(value)\n              )}</ul>\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n        <TabPane title=\"Blob Services\">\n          {!isEmpty(blob_services) ? (\n            <ul>\n              {Object.values(blob_services).map((value) => renderBlobService(value)\n              )}\n            </ul>\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial >\n  );\n};\n\nBucket.propTypes = propTypes;\n\nexport default Bucket;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}