{"version":3,"sources":["partials/aws/emr.regions.id.vpcs.id.clusters.id/Informations/index.js","partials/aws/emr.regions.id.vpcs.id.clusters.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","Clusters","props","data","path","get","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","item","name","attributes","renderGroupLink","id","service","resource","title","renderValue","valueOrNone","value","EmrManagedMasterSecurityGroup","disabled","EmrManagedSlaveSecurityGroup","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx","match"],"mappings":"4IAwCeA,UAnCM,WACnB,OACE,qCACE,cAAC,IAAD,CACEC,MAAM,SACNC,UAAU,WAEZ,cAAC,IAAD,CACED,MAAM,MACNC,UAAU,QAEZ,cAAC,IAAD,CACED,MAAM,KACNC,UAAU,OAEZ,cAAC,IAAD,CACED,MAAM,oBACNC,UAAU,8CAEZ,cAAC,IAAD,CACED,MAAM,SACNC,UAAU,iBAEZ,cAAC,IAAD,CACED,MAAM,mBACNC,UAAU,6CAEZ,cAAC,IAAD,CACED,MAAM,wBACNC,UAAU,2B,wKCqEHC,UAnFE,SAAAC,GAAU,IACjBC,EAASD,EAATC,KAEFC,EAAOC,IAAIF,EAAM,CAAC,OAAQ,QAAS,IACnCG,EAASC,YAAkBH,GAC3BI,EAAQC,YAAeL,GALL,EAOOM,YAC7BC,YAAe,wBAAD,OAAyBL,EAAzB,iBAAwCE,KAD1CI,EAPU,EAOhBT,KAAWU,EAPK,EAOLA,QAInB,IAAKV,GAAQU,EAAS,OAAO,KAExBC,IAAQF,KACXT,EAAKY,KAAKH,IAAV,UAAmBA,EAAII,KAAvB,aAAgCR,EAAhC,KACAL,EAAKY,KAAKT,OAASA,GAGrB,IAAMW,EAAaZ,IAAIF,EAAM,CAAC,OAAQ,0BAEhCe,EAAkB,SAACC,EAAIH,GAAL,OACtB,cAAC,IAAD,CACEI,QAAQ,MACRC,SAAS,kBACTF,GAAIA,EACJH,KAAMA,KAIV,OACE,eAAC,IAAD,CAASb,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,UAAD,MAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAASmB,MAAM,SAAf,SACE,gCACE,cAAC,IAAD,CACEvB,MAAM,aACNC,UAAU,sBACVuB,YAAaC,MAEf,cAAC,IAAD,CACEzB,MAAM,iBACN0B,MAAOpB,IACLO,EACA,CAAC,kBAAmBK,EAAWS,8BAA+B,SAEhEH,YAAa,SAAAE,GAAK,OAChBP,EACED,EAAWS,8BACXD,WAMV,cAAC,IAAD,CACEH,MAAM,QACNK,SAAUb,IAAQG,EAAWW,8BAF/B,SAIE,cAAC,IAAD,CACE7B,MAAM,iBACN0B,MAAOpB,IACLO,EACA,CAAC,kBAAmBK,EAAWW,6BAA8B,SAE/DL,YAAa,SAAAE,GAAK,OAChBP,EACED,EAAWW,6BACXH,gB,wDCnEDI,IAda,SAAA3B,GAAU,IAC5B4B,EAAa5B,EAAb4B,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAAC9B,GAAW,IAE/BoB,EAKEpB,EALFoB,MACAW,EAIE/B,EAJF+B,WACAN,EAGEzB,EAHFyB,SACAO,EAEEhC,EAFFgC,QACAJ,EACE5B,EADF4B,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGd,EACAiB,IAAWH,GAAYI,QAG1BlB,EAGJ,OACE,cAAC,IAAkBmB,SAAnB,CAA4BhB,MAAOY,EAAnC,SACE,cAAC,IAAD,CACEf,MAAOgB,EACPP,UAAWW,IAAG,mBAAoBN,GAClCH,WAAYA,EACZN,SAAUA,EACVO,QAASA,EALX,SAOGJ,S,iCCjDT,yFAGavB,EAAoB,SAAAH,GAAI,OAAIC,IAAID,EAAKuC,MAAM,oBAAqB,IAEhElC,EAAiB,SAAAL,GAAI,OAAIC,IAAID,EAAKuC,MAAM,iBAAkB","file":"static/js/25.64e8fc7c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"Region\"\n        valuePath=\"region\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"ID\"\n        valuePath=\"id\"\n      />\n      <PartialValue\n        label=\"Availability Zone\"\n        valuePath=\"Ec2InstanceAttributes.Ec2AvailabilityZone\"\n      />\n      <PartialValue\n        label=\"Status\"\n        valuePath=\"Status.State\"\n      />\n      <PartialValue\n        label=\"Instance Profile\"\n        valuePath=\"Ec2InstanceAttributes.IamInstanceProfile\"\n      />\n      <PartialValue\n        label=\"Visibile to all users\"\n        valuePath=\"VisibleToAllUsers\"\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape, valueOrNone } from '../../../utils/Partials';\nimport { useAPI } from '../../../api/useAPI';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { getRegionFromPath, getVpcFromPath } from '../../../utils/Api';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Clusters = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.ec2.regions.${region}.vpcs.${vpcId}`)\n  );\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc.name} (${vpcId})`;\n    data.item.region = region;\n  }\n\n  const attributes = get(data, ['item', 'Ec2InstanceAttributes']);\n\n  const renderGroupLink = (id, name) => (\n    <ResourceLink \n      service=\"ec2\"\n      resource=\"security_groups\"\n      id={id}\n      name={name}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Master\">\n          <div>\n            <PartialValue \n              label=\"Public DNS\"\n              valuePath=\"MasterPublicDnsName\"\n              renderValue={valueOrNone}\n            />\n            <PartialValue \n              label=\"Security Group\"\n              value={get(\n                vpc,\n                ['security_groups', attributes.EmrManagedMasterSecurityGroup, 'name']\n              )}\n              renderValue={value => (\n                renderGroupLink(\n                  attributes.EmrManagedMasterSecurityGroup,\n                  value,\n                )\n              )}\n            />\n          </div>\n        </TabPane>\n        <TabPane \n          title=\"Slave\"\n          disabled={isEmpty(attributes.EmrManagedSlaveSecurityGroup)}\n        >\n          <PartialValue \n            label=\"Security Group\"\n            value={get(\n              vpc,\n              ['security_groups', attributes.EmrManagedSlaveSecurityGroup, 'name']\n            )}\n            renderValue={value => (\n              renderGroupLink(\n                attributes.EmrManagedSlaveSecurityGroup,\n                value,\n              )\n            )}\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nClusters.propTypes = propTypes;\n\nexport default Clusters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}