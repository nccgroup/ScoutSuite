{"version":3,"sources":["partials/azure/sqldatabase.subscriptions.id.servers.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["SQLServers","props","dbs","serverKey","data","item","get","label","valuePath","errorPath","renderValue","valueOrNone","convertBoolToEnable","title","Object","entries","databases","id","length","map","key","db","baseErrorPath","path","renderList","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","value","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/43.d35b56df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport {\n  Partial,\n  PartialSection,\n  PartialValue,\n} from '../../../components/Partial';\nimport {\n  convertBoolToEnable,\n  partialDataShape,\n  renderList,\n  valueOrNone,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\n\nconst renderDatabases = (dbs, serverKey) => {\n  if (!dbs || !dbs.length) return <span>None</span>;\n\n  return dbs.map(([key, db]) => {\n    const baseErrorPath = `sqldatabase.servers.${serverKey}.databases.${key}`;\n\n    return (\n      <PartialSection path={`databases.${key}`} key={db.id}>\n        <b>{key}</b>\n\n        <PartialValue\n          label=\"Auditing\"\n          valuePath=\"auditing.auditing_enabled\"\n          errorPath=\"db_auditing_disabled\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Auditing retention period\"\n          valuePath=\"auditing.retention_days\"\n          errorPath=\"db_low_auditing_retention\"\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Threat detection\"\n          valuePath=\"threat_detection.threat_detection_enabled\"\n          errorPath=\"db_threat_detection_disabled\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Threat detection alerts\"\n          valuePath=\"threat_detection.alerts_enabled\"\n          errorPath=\"db_threat_detection_alerts_disabled\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Send threat detection alerts\"\n          valuePath=\"threat_detection.send_alerts_enabled\"\n          errorPath=\"db_send_threat_detection_alerts_disabled\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Threat detection retention period\"\n          valuePath=\"threat_detection.retention_days\"\n          errorPath=\"db_low_threat_detection_retention\"\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Transparent data encryption\"\n          valuePath=\"transparent_data_encryption_enabled\"\n          errorPath=\"transparent_data_encryption_enabled\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Geo-replication configured\"\n          valuePath=\"replication_configured\"\n          errorPath=\"replication_configured\"\n          renderValue={convertBoolToEnable}\n          baseErrorPath={baseErrorPath}\n        />\n\n        <PartialValue\n          label=\"Tags\" valuePath=\"tags\"\n          renderValue={renderList} />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n          baseErrorPath={baseErrorPath}\n        />\n      </PartialSection>\n    );\n  });\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SQLServers = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"SQL Server Name\" valuePath=\"name\" />\n\n        <PartialValue\n          label=\"Azure Active Directory Admin\"\n          valuePath=\"ad_admin.login\"\n          errorPath=\"ad_admin\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Auditing\"\n          valuePath=\"auditing.auditing_enabled\"\n          errorPath=\"server_auditing_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Auditing retention period\"\n          valuePath=\"auditing.retention_days\"\n          errorPath=\"server_low_auditing_retention\"\n        />\n\n        <PartialValue\n          label=\"Threat detection\"\n          valuePath=\"threat_detection.threat_detection_enabled\"\n          errorPath=\"server_threat_detection_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Threat detection alerts\"\n          valuePath=\"threat_detection.send_alerts_enabled\"\n          errorPath=\"server_send_threat_detection_alerts_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Send threat detection alerts\"\n          valuePath=\"threat_detection.send_alerts_enabled\"\n          errorPath=\"server_send_threat_detection_alerts_disabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Threat detection retention period\"\n          valuePath=\"retention_days\"\n          errorPath=\"server_low_threat_detection_retention\"\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"SQL Databases\">\n          {renderDatabases(Object.entries(item.databases), item.id)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nSQLServers.propTypes = propTypes;\n\nexport default SQLServers;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}