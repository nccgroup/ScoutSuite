{"version":3,"sources":["partials/aws/elasticache.regions.id.parameter_groups.id/index.js","components/Partial/GenericObject/index.js"],"names":["ParameterGroups","props","data","item","GenericObject","className","toString","invalidKeys","Object","entries","map","i","key","value","includes","label","renderValue","defaultProps"],"mappings":"gJA4BeA,UAjBS,SAAAC,GAAU,IACxBC,EAASD,EAATC,KAER,OAAKA,EAGH,gCACE,4CACA,cAAC,IAAD,CACEA,KAAMA,EAAKC,UANC,O,mECCdC,EAAgB,SAAhBA,EAAgBH,GAAU,IAE5BC,EAEED,EAFFC,KACAG,EACEJ,EADFI,UAGF,GAAoB,kBAATH,EACT,OAAOA,EAAKI,WAGd,IAAMC,EAAc,CAClB,OACA,gBAGF,OACE,oBAAIF,UAAWA,EAAf,SACGG,OAAOC,QAAQP,GAAMQ,KAAI,WAAeC,GAAf,uBAAEC,EAAF,KAAOC,EAAP,YACd,OAAVA,IAAmBN,EAAYO,SAASF,IACtC,6BACE,cAAC,IAAD,CACEG,MAAOH,EACPC,MAAOA,EACPG,YAAa,SAAAH,GAAK,OAAK,cAACT,EAAD,CAAeF,KAAMW,QAJvCF,SAcnBP,EAAca,aArCO,CACnBZ,UAAW,IAsCED","file":"static/js/102.15747ee8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport GenericObject from '../../../components/Partial/GenericObject';\nimport { partialDataShape } from '../../../utils/Partials';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ParameterGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <div>\n      <h4>Attributes</h4>\n      <GenericObject\n        data={data.item}\n      />\n    </div>\n  );\n};\n\nParameterGroups.propTypes = propTypes;\n\nexport default ParameterGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DetailedValue from '../../DetailedValue';\n\n\nconst propTypes = {\n  data: PropTypes.any.isRequired,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  className: '',\n};\n\nconst GenericObject = props => {\n  const { \n    data,\n    className,\n  } = props;\n\n  if (typeof data !== 'object') {\n    return data.toString();\n  }\n\n  const invalidKeys = [\n    'path',\n    'display_path',\n  ];\n\n  return (\n    <ul className={className}>\n      {Object.entries(data).map(([key, value], i) => (\n        value !== null && !invalidKeys.includes(key) && (\n          <li key={i}>\n            <DetailedValue \n              label={key} \n              value={value}\n              renderValue={value => (<GenericObject data={value}/>)}\n            />\n          </li>\n        )\n      ))}\n    </ul>\n  );\n};\n\nGenericObject.propTypes = propTypes;\nGenericObject.defaultProps = defaultProps;\n\nexport default GenericObject;\n"],"sourceRoot":""}