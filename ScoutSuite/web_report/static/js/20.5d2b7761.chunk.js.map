{"version":3,"sources":["partials/azure/aad.groups.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","api/useResources.js"],"names":["renderUsers","users","renderList","user","service","resource","id","name","renderUser","renderRoles","roles","rolesList","role","subscription_id","find","r","role_id","renderRole","Groups","props","data","item","useResources","useMemo","map","label","valuePath","renderValue","valueOrNone","convertBoolToEnable","title","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","value","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon","ids","setData","loading","setLoading","a","requests","API","Promise","all","response","error","message","asyncAPI"],"mappings":"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","file":"static/js/20.5d2b7761.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  convertBoolToEnable,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport { useResources } from '../../../api/useResources';\nimport { renderList } from '../../../utils/Partials/index';\nimport ResourceLink from '../../../components/ResourceLink/index';\n\nconst renderUsers = users => {\n  const renderUser = user => (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"users\"\n      id={user.id}\n      name={user.name}\n    />\n  );\n  return renderList(users, '', user => renderUser(user));\n};\n\nconst renderRoles = (roles, rolesList) => {\n  const renderRole = role => {\n    const { subscription_id } = rolesList.find(r => r.role_id === role.id);\n    return (\n      <span>\n        <ResourceLink\n          service=\"rbac\"\n          resource=\"roles\"\n          id={role.id}\n          name={role.name}\n        />{' '}\n        (subscription {subscription_id})\n      </span>\n    );\n  };\n  return renderList(roles, '', role => renderRole(role));\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst Groups = props => {\n  const { data, item } = props;\n  const { data: users } = useResources('aad', 'users', item.users);\n  const rolesList = useMemo(() => item.roles.map(r => r.role_id), [item.roles]);\n  const { data: roles } = useResources('rbac', 'roles', rolesList);\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\" valuePath=\"name\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Type\"\n          valuePath=\"object_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Mail Nickname\"\n          valuePath=\"mail_nickname\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Mail Status\"\n          valuePath=\"mail_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Mail\" valuePath=\"mail\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Security Status\"\n          valuePath=\"security_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Deletion Timestamp\"\n          valuePath=\"deletion_timestamp\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Role Assignments\">\n          {renderRoles(roles, item.roles)}\n        </TabPane>\n\n        <TabPane title=\"Members\">{renderUsers(users)}</TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nGroups.propTypes = propTypes;\n\nexport default Groups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import { useEffect, useState } from 'react';\nimport * as API from './api';\n\n/**\n * React Hook to fetch API data and re-render the component\n * @param {*} path\n */\nexport const useResources = (service, resource, ids) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const asyncAPI = async () => {\n      if (service && resource && ids) {\n        setLoading(true);\n        try {\n          const requests = ids.map(id =>\n            API.get(`services/${service}/resources/${resource}/${id}`),\n          );\n          const response = await Promise.all(requests);\n          console.info('useResources response', service, resource, ids, response);\n          setData(response);\n        } catch (e) {\n          console.error(e.message);\n        }\n        setLoading(false);\n      }\n    };\n    asyncAPI();\n  }, [ids]);\n\n  return {\n    data,\n    loading,\n  };\n};\n"],"sourceRoot":""}