{"version":3,"sources":["partials/azure/aad.service_principals.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","api/useResources.js"],"names":["renderRoles","roles","rolesList","renderList","role","subscription_id","find","r","role_id","id","service","resource","name","renderRole","ServicePrincipals","props","keys","data","item","useMemo","map","useResources","label","valuePath","renderValue","valueOrNone","tags","app_name","app_id","renderAppName","convertBoolToEnable","title","key_credentials","length","key","index","path","key_id","formatDate","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","value","cx","ids","setData","loading","setLoading","useEffect","a","requests","API","Promise","all","response","console","info","error","message","asyncAPI"],"mappings":"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","file":"static/js/27.1427d928.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport { useResources } from '../../../api/useResources';\nimport PartialSection from '../../../components/Partial/PartialSection';\n\nconst renderAppName = (app_name, app_id) => {\n  if (!app_name) return <span>None</span>;\n\n  return (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"applications\"\n      id={app_id}\n      name={app_name}\n    />\n  );\n};\n\nconst renderRoles = (roles, rolesList) => {\n  const renderRole = role => {\n    const { subscription_id } = rolesList.find(r => r.role_id === role.id);\n    return (\n      <span>\n        <ResourceLink\n          service=\"rbac\"\n          resource=\"roles\"\n          id={role.id}\n          name={role.name}\n        />{' '}\n        (subscription {subscription_id})\n      </span>\n    );\n  };\n  return renderList(roles, '', role => renderRole(role));\n};\n\nconst renderKeys = keys => {\n  if (!keys || keys.length === 0) return <span>None</span>;\n\n  return (\n    <ul>\n      {keys.map((key, index) => (\n        <PartialSection\n          path={`keys.${index}`}\n          key={index}>\n          <li>\n            <b>{key.key_id}</b>\n            <ul>\n              <li>\n                <PartialValue\n                  label=\"Type\"\n                  valuePath=\"type\"\n                  renderValue={valueOrNone} />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Usage\"\n                  valuePath=\"usage\"\n                  renderValue={valueOrNone} />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Start Date\"\n                  valuePath=\"start_date\"\n                  renderValue={formatDate}\n                />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"End Date\"\n                  valuePath=\"end_date\"\n                  renderValue={formatDate}\n                />\n              </li>\n            </ul>\n          </li>\n        </PartialSection>\n      ))}\n    </ul>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst ServicePrincipals = props => {\n  const { data, item } = props;\n  const rolesList = useMemo(() => item.roles.map(r => r.role_id), [item.roles]);\n  const { data: roles } = useResources('rbac', 'roles', rolesList);\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\" valuePath=\"id\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"App\"\n          valuePath=\"app_name\"\n          renderValue={app_name => renderAppName(app_name, item.app_id)}\n        />\n\n        <PartialValue\n          label=\"Status\"\n          valuePath=\"account_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"App Owner Tenant ID\"\n          valuePath=\"app_owner_tenant_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"App Role Assignment Required\"\n          valuePath=\"app_role_assignment_required\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Type\"\n          valuePath=\"object_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Service Principal Type\"\n          valuePath=\"service_principal_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Publisher Name\"\n          valuePath=\"publisher_name\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Deletion Timestamp\"\n          valuePath=\"deletion_timestamp\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Roles\">\n          {renderRoles(roles, item.roles)}\n        </TabPane>\n\n        <TabPane title=\"Keys\">\n          {renderKeys(item.key_credentials)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nServicePrincipals.propTypes = propTypes;\n\nexport default ServicePrincipals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import { useEffect, useState } from 'react';\nimport * as API from './api';\n\n/**\n * React Hook to fetch API data and re-render the component\n * @param {*} path\n */\nexport const useResources = (service, resource, ids) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const asyncAPI = async () => {\n      if (service && resource && ids) {\n        setLoading(true);\n        try {\n          const requests = ids.map(id =>\n            API.get(`services/${service}/resources/${resource}/${id}`),\n          );\n          const response = await Promise.all(requests);\n          console.info('useResources response', service, resource, ids, response);\n          setData(response);\n        } catch (e) {\n          console.error(e.message);\n        }\n        setLoading(false);\n      }\n    };\n    asyncAPI();\n  }, [ids]);\n\n  return {\n    data,\n    loading,\n  };\n};\n"],"sourceRoot":""}