{"version":3,"sources":["partials/aws/vpc.regions.id.vpcs.id.network_acls.id/RulesTable/index.js","partials/aws/vpc.regions.id.vpcs.id.network_acls.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["RulesTable","props","rules","type","className","Object","entries","map","rule_id","rule","value","errorPath","port_range","protocol","CidrBlock","RuleAction","RegionDomain","data","get","subnets","label","valuePath","title","isEmtpy","renderValue","message","renderList","id","service","resource","InformationsWrapper","children","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"0JA4EeA,UA5DI,SAAAC,GAAU,IAEzBC,EAEED,EAFFC,MACAC,EACEF,EADFE,KAGF,OACE,wBAAOC,UAAU,cAAjB,UACE,gCACE,+BACE,6CACA,sCACA,0CACA,4CACA,6CAGJ,gCACGC,OAAOC,QAAQJ,EAAMC,IAAOI,KAAI,mCAAEC,EAAF,KAAWC,EAAX,YAC/B,+BACE,6BACE,cAAC,IAAD,CACEC,MAAOF,EACPG,UAAS,UAAKR,EAAL,YAAaK,OAG1B,6BACE,cAAC,IAAD,CACEE,MAAOD,EAAKG,WACZD,UAAS,UAAKR,EAAL,YAAaK,OAG1B,6BACE,cAAC,IAAD,CACEE,MAAOD,EAAKI,SACZF,UAAS,UAAKR,EAAL,YAAaK,OAG1B,6BACE,cAAC,IAAD,CACEE,MAAOD,EAAKK,UACZH,UAAS,UAAKR,EAAL,YAAaK,OAI1B,6BACE,cAAC,IAAD,CACEE,MAAOD,EAAKM,WACZJ,UAAS,UAAKR,EAAL,YAAaK,SA7BnBA,a,wJCqDJQ,UAlEM,SAAAf,GAAU,IACrBgB,EAAShB,EAATgB,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMf,EAAQgB,IAAID,EAAM,CAAC,OAAQ,UAC3BE,EAAUD,IAAID,EAAM,CAAC,OAAQ,iBAUnC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,MAAM,KACNC,UAAU,OAEZ,cAAC,IAAD,CACED,MAAM,UACNC,UAAU,iBAId,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,MAAM,eAAf,SACE,cAAC,UAAD,CACEpB,MAAOA,EACPC,KAAK,aAGT,cAAC,IAAD,CAASmB,MAAM,gBAAf,SACE,cAAC,UAAD,CACEpB,MAAOA,EACPC,KAAK,cAGT,cAAC,IAAD,CAASmB,MAAM,qBAAf,SACIC,IAAQJ,GAGR,cAAC,IAAD,CACEE,UAAU,YACVV,UAAU,SACVa,YAAa,SAAAd,GAAK,OACfA,GACC,cAAC,IAAD,CACEe,QAAQ,mGARhBC,YAAWP,EAAS,YApCL,SAAAQ,GAAE,OACzB,cAAC,IAAD,CACEC,QAAQ,MACRC,SAAS,UACTF,GAAIA,iB,wDCVKG,IAda,SAAA7B,GAAU,IAC5B8B,EAAa9B,EAAb8B,SAER,OACE,sBAAK3B,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACC2B,O,qNCyCQC,G,OAtCQ,SAAC/B,GAAW,IAE/BqB,EAKErB,EALFqB,MACAW,EAIEhC,EAJFgC,WACAC,EAGEjC,EAHFiC,SACAC,EAEElC,EAFFkC,QACAJ,EACE9B,EADF8B,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGf,EACAkB,IAAWH,GAAYI,QAG1BnB,EAGJ,OACE,cAAC,IAAkBoB,SAAnB,CAA4BhC,MAAO4B,EAAnC,SACE,cAAC,IAAD,CACEhB,MAAOiB,EACPnC,UAAWuC,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGJ,S","file":"static/js/19.97821340.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialValue } from '../../../../components/Partial';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  rules: PropTypes.object.isRequired,\n  type: PropTypes.oneOf([\n    'egress', \n    'ingress'\n  ]).isRequired,\n};\n\nconst RulesTable = props => {\n  const {\n    rules,\n    type,\n  } = props;\n\n  return (\n    <table className=\"rules-table\">\n      <thead>\n        <tr>\n          <th>Rule Number</th>\n          <th>Port</th>\n          <th>Protocol</th>\n          <th>IP Address</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(rules[type]).map(([rule_id, rule]) => (\n          <tr key={rule_id}>\n            <td>\n              <PartialValue\n                value={rule_id}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.port_range}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.protocol}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.CidrBlock}\n                errorPath={`${type}.${rule_id}`}\n              />\n              \n            </td>\n            <td>\n              <PartialValue\n                value={rule.RuleAction}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nRulesTable.propTypes = propTypes;\n\nexport default RulesTable;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmtpy from 'lodash/isEmpty';\n\nimport { partialDataShape, renderList } from '../../../utils/Partials';\nimport { \n  Partial, \n  PartialValue,\n} from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport RulesTable from './RulesTable';\nimport WarningMessage from '../../../components/WarningMessage';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const rules = get(data, ['item', 'rules']);\n  const subnets = get(data, ['item', 'Associations']);\n\n  const renderSubnetLink = id => (\n    <ResourceLink\n      service=\"vpc\"\n      resource=\"subnets\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\"\n          valuePath=\"id\"\n        />\n        <PartialValue\n          label=\"Default\"\n          valuePath=\"IsDefault\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Egress Rules\">\n          <RulesTable \n            rules={rules}\n            type=\"egress\"\n          />\n        </TabPane>\n        <TabPane title=\"Ingress Rules\">\n          <RulesTable \n            rules={rules}\n            type=\"ingress\"\n          />\n        </TabPane>\n        <TabPane title=\"Associated Subnets\">\n          {!isEmtpy(subnets) ? (\n            renderList(subnets, 'SubnetId', renderSubnetLink)\n          ) : (\n            <PartialValue \n              valuePath=\"IsDefault\"\n              errorPath=\"unused\"\n              renderValue={value => (\n                !value && (\n                  <WarningMessage \n                    message=\"This network ACL is not the VPC's default NACL and is not associated with any existing VPC.\"\n                  />\n                )\n              )}\n            />\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}