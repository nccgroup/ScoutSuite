{"version":3,"sources":["partials/aws/iam.groups.id/index.js","components/InformationsWrapper/index.js","components/WarningMessage/index.js"],"names":["IamGroups","props","data","users","get","inline_policies","policies","label","valuePath","renderValue","valueOrNone","formatDate","title","isEmpty","errorPath","message","renderList","id","service","resource","disabled","Object","entries","map","i","policy","name","PolicyDocument","policyPath","renderPolicyLink","InformationsWrapper","children","className","defaultProps","icon","fontSize","WarningMessage","cx"],"mappings":"wOAiGeA,UAzEG,SAAAC,GAAU,IAClBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAQC,IAAIF,EAAM,CAAC,OAAQ,SAAU,IACrCG,EAAkBD,IAAIF,EAAM,CAAC,OAAQ,mBAAoB,IACzDI,EAAWF,IAAIF,EAAM,CAAC,OAAQ,YAAa,IAUjD,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEK,MAAM,MACNC,UAAU,MACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,gBACNC,UAAU,aACVC,YAAaE,SAIjB,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,MAAM,UAAf,SACIC,IAAQV,GAGR,cAAC,IAAD,CACEW,UAAU,MACVL,YAAa,kBACX,cAAC,IAAD,CAAgBM,QAAQ,kCAL5BC,YAAWb,EAAO,IA1BL,SAAAc,GAAE,OACvB,cAAC,IAAD,CACEC,QAAQ,MACRC,SAAS,QACTF,GAAIA,SAgCF,cAAC,IAAD,CACEL,MAAM,kBACNQ,SAAUP,IAAQR,GAFpB,SAIE,mCACGgB,OAAOC,QAAQjB,GAAiBkB,KAAI,WAAeC,GAAf,uBAAEP,EAAF,KAAMQ,EAAN,YACnC,cAAC,IAAD,CAEEC,KAAMD,EAAOC,KACbD,OAAQA,EAAOE,eACfC,WAAU,0BAAqBX,EAArB,oBAHLO,UAQb,cAAC,IAAD,CACEZ,MAAM,mBACNQ,SAAUP,IAAQP,GAFpB,SAIGU,YAAWV,EAAU,GAAIuB,e,wDChErBC,IAda,SAAA7B,GAAU,IAC5B8B,EAAa9B,EAAb8B,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,2GCFDE,G,OAAe,CACnBC,KAAM,cAAC,IAAD,CAA2BC,SAAS,cAGtCC,EAAiB,SAAAnC,GAAU,IAE7Bc,EAGEd,EAHFc,QACAmB,EAEEjC,EAFFiC,KACAF,EACE/B,EADF+B,UAGF,OACE,sBAAKA,UAAWK,IAAG,kBAAmBL,GAAtC,UACGE,EACAnB,MAMPqB,EAAeH,aAAeA,EAEfG,O","file":"static/js/111.99a0c34f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  partialDataShape,\n  formatDate,\n  valueOrNone,\n  renderList,\n  renderPolicyLink,\n} from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport WarningMessage from '../../../components/WarningMessage';\nimport Policy from '../../../components/Partial/Policy';\nimport ResourceLink from '../../../components/ResourceLink';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst IamGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const users = get(data, ['item', 'users'], []);\n  const inline_policies = get(data, ['item', 'inline_policies'], {});\n  const policies = get(data, ['item', 'policies'], []);\n\n  const renderUserLink = id => (\n    <ResourceLink\n      service=\"iam\"\n      resource=\"users\"\n      id={id}\n    />\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue \n          label=\"ARN\" \n          valuePath=\"arn\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue \n          label=\"Creation Date\" \n          valuePath=\"CreateDate\"\n          renderValue={formatDate}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Members\">\n          {!isEmpty(users) ? (\n            renderList(users, '', renderUserLink)\n          ) : (\n            <PartialValue\n              errorPath=\"ALL\"\n              renderValue={() => (\n                <WarningMessage message=\"This group has no members.\"/>\n              )}\n            />\n          )}\n        </TabPane>\n        <TabPane \n          title=\"Inline Policies\"\n          disabled={isEmpty(inline_policies)}\n        >\n          <>\n            {Object.entries(inline_policies).map(([id, policy], i) => (\n              <Policy\n                key={i}\n                name={policy.name}\n                policy={policy.PolicyDocument}\n                policyPath={`inline_policies.${id}.PolicyDocument`}\n              />\n            ))}\n          </>\n        </TabPane>\n        <TabPane \n          title=\"Managed Policies\"\n          disabled={isEmpty(policies)}\n        >\n          {renderList(policies, '', renderPolicyLink)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nIamGroups.propTypes = propTypes;\n\nexport default IamGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}