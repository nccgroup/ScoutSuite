{"version":3,"sources":["partials/aws/rds.regions.id.security_groups.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["SecurityGroups","props","data","groups","get","ipRanges","label","valuePath","title","disabled","isEmpty","map","i","name","EC2SecurityGroupName","groupId","EC2SecurityGroupId","ownerId","EC2SecurityGroupOwnerId","Status","range","CIDRIP","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","value","cx"],"mappings":"oMAiEeA,UAjDQ,SAAAC,GAAU,IACvBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAASC,IAAIF,EAAM,CAAC,OAAQ,sBAC5BG,EAAWD,IAAIF,EAAM,CAAC,OAAQ,aAEpC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,MAAM,eACNC,UAAU,iCAId,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAM,iBACNC,SAAUC,IAAQP,GAFpB,SAIE,+BACGA,EAAOQ,KAAI,WAMPC,GANO,IAEcC,EAFd,EAERC,qBACoBC,EAHZ,EAGRC,mBACyBC,EAJjB,EAIRC,wBACAC,EALQ,EAKRA,OALQ,OAQV,uCACMN,EADN,aACeE,EADf,eAC6BE,EAD7B,aACyCE,EADzC,MAASP,MAIVP,EAASM,KAAI,SAACS,EAAOR,GAAR,OACZ,uCACMQ,EAAMC,OADZ,aACuBD,EAAMD,OAD7B,MAASP,kB,wDC5BRU,IAda,SAAArB,GAAU,IAC5BsB,EAAatB,EAAbsB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACxB,GAAW,IAE/BO,EAKEP,EALFO,MACAkB,EAIEzB,EAJFyB,WACAjB,EAGER,EAHFQ,SACAkB,EAEE1B,EAFF0B,QACAJ,EACEtB,EADFsB,SAN8B,EASIK,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGrB,EACAwB,IAAWH,GAAYI,QAG1BzB,EAGJ,OACE,cAAC,IAAkB0B,SAAnB,CAA4BC,MAAOL,EAAnC,SACE,cAAC,IAAD,CACEtB,MAAOuB,EACPP,UAAWY,IAAG,mBAAoBP,GAClCH,WAAYA,EACZjB,SAAUA,EACVkB,QAASA,EALX,SAOGJ","file":"static/js/39.03aaff63.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const groups = get(data, ['item', 'EC2SecurityGroups']);\n  const ipRanges = get(data, ['item', 'IPRanges']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Descripition\"\n          valuePath=\"DBSecurityGroupDescription\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane \n          title=\"Authorizations\"\n          disabled={isEmpty(groups)}\n        >\n          <ul>\n            {groups.map((\n              {\n                EC2SecurityGroupName: name,\n                EC2SecurityGroupId: groupId,\n                EC2SecurityGroupOwnerId: ownerId,\n                Status,\n              }, i\n            ) => (\n              <li key={i}>\n                {`${name} (${groupId}) @ ${ownerId} (${Status})`}\n              </li>\n            ))}\n            {ipRanges.map((range, i) => (\n              <li key={i}>\n                {`${range.CIDRIP} (${range.Status})`}\n              </li>\n            ))}\n          </ul>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}