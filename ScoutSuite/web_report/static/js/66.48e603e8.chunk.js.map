{"version":3,"sources":["partials/gcp/iam.projects.id.bindings.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js"],"names":["Bindings","props","data","label","valuePath","renderValue","valueOrNone","errorPath","title","renderList","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","value","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper"],"mappings":"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","file":"static/js/66.48e603e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { partialDataShape, valueOrNone, renderList } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Tabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Bindings = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Title\"\n          valuePath=\"title\" />\n\n        <PartialValue\n          label=\"Description\"\n          valuePath=\"description\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Project ID\"\n          errorPath=\"projet_id\"\n          valuePath=\"project\"\n        />\n\n        <PartialValue\n          label=\"Custom Role\"\n          valuePath=\"custom_role\"\n          renderValue={valueOrNone} />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Permissions\"></TabPane>\n\n        <TabPane title=\"Bindings\">\n          <PartialValue\n            label=\"Attached Users\"\n            valuePath=\"members.users\"\n            renderValue={renderList}\n          />\n\n          <PartialValue\n            label=\"Attached Groups\"\n            valuePath=\"members.groups\"\n            renderValue={renderList}\n          />\n\n          <PartialValue\n            label=\"Attached Service Accounts\"\n            valuePath=\"members.service_accounts\"\n            renderValue={renderList}\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nBindings.propTypes = propTypes;\n\nexport default Bindings;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}