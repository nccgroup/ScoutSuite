{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Informations/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/RulesList/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Usage/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","utils/Api/index.js"],"names":["Informations","label","valuePath","RulesList","ctx","useContext","PartialContext","basePath","PartialPathContext","rules","get","item","isDefault","renderIpAddresses","title","addresses","path","map","address","i","value","errorPath","renderValue","CIDRName","CIDR","className","Object","entries","protocols","name","ports","groups","port_name","port","cidrs","Ipv6Ranges","security_groups","group","GroupName","service","resource","id","GroupId","UserId","message","Usage","renderUsageList","resources","type","isArray","renderList","renderResourceLink","list","makeTitle","resource_type","icon","fontSize","Ec2SecurityGroups","props","data","region","getRegionFromPath","vpcId","getVpcFromPath","useAPI","getRawEndpoint","vpc","loading","isEmpty","InformationsWrapper","children","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","Provider","cx","match"],"mappings":"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","file":"static/js/8.6ef3bc2c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue label=\"ID\" valuePath=\"id\" />\n      <PartialValue label=\"ARN\" valuePath=\"arn\" />\n      <PartialValue label=\"Region\" valuePath=\"region\" />\n      <PartialValue label=\"VPC\" valuePath=\"vpc\" />\n      <PartialValue label=\"Description\" valuePath=\"description\" />\n    </>\n  );\n};\n\nexport default Informations;\n","import React, { useContext }  from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\nimport { PartialValue } from '../../../../components/Partial';\nimport ResourceLink from '../../../../components/ResourceLink';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst RulesList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const rules = get(ctx.item, basePath);\n\n  const isDefault = get(ctx.item, 'name') === 'default';\n\n  const renderIpAddresses = (title, addresses, path) => (\n    <li>\n      {`${title}:`}\n      <ul>\n        {addresses.map((address, i) => (\n          <li key={i}>\n            <PartialValue\n              value={address}\n              errorPath={`${path}.cidrs.${i}.CIDR`}\n              renderValue={value =>\n                value.CIDRName \n                  ? `${value.CIDR} (${value.CIDRName})`\n                  : value.CIDR\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const renderSecurityGroups = (groups, path) => (\n    <li>\n      EC2 security groups:\n      <ul>\n        {groups.map((group, i) => (\n          <li key={i}>\n            <PartialValue\n              value={group}\n              errorPath={`${path}.cidrs.security_groups.${i}`}\n              renderValue={value =>\n                value.GroupName\n                  ? (\n                    <span>\n                      {`${value.GroupName} (`}\n                      <ResourceLink \n                        service=\"ec2\"\n                        resource=\"security_groups\"\n                        id={value.GroupId}\n                        name={value.GroupId}\n                      />\n                      {')'}\n                    </span>\n                  ) : `${value.GroupId} (AWS Account ID: ${value.UserId})`\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <>\n      <ul className=\"rules-list\">\n        {Object.entries(rules.protocols).map(([name, { ports }], i) => (\n          <div key={i}>\n            <li>{name}</li>\n            <ul>\n              <li>\n                Ports:\n                <ul>\n                  {Object.entries(ports).map(([port_name, port], i) => (\n                    <div key={i}>\n                      <li>\n                        <PartialValue\n                          value={port_name}\n                          errorPath={`protocols.${name}.ports.${port_name}`}\n                        />\n                      </li>\n                      <ul>\n                        {port.cidrs && (\n                          renderIpAddresses(\n                            'IP adresses',\n                            port.cidrs, \n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.Ipv6Ranges && (\n                          renderIpAddresses(\n                            'IPv6 addresses',\n                            port.Ipv6Ranges,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.security_groups && (\n                          renderSecurityGroups(\n                            port.security_groups,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                      </ul>\n                    </div>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </ul>\n      {isDefault && (\n        <PartialValue\n          errorPath=\"default_with_rules\"\n          renderValue={() => (\n            <WarningMessage\n              className=\"rules-list__warning-message\"\n              message=\"Default security groups should have no rules.\"\n            />\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RulesList;\n","import React, { useContext }  from 'react';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport { \n  PartialContext, \n  PartialPathContext \n} from '../../../../components/Partial/context';\nimport { \n  makeTitle,\n  renderList,\n  renderResourceLink,\n} from '../../../../utils/Partials';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst Usage = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n\n  const renderUsageList = (resources, service, type) => \n    isArray(resources) \n      ? renderList(resources, '', renderResourceLink(service, type))\n      : (\n        Object.entries(resources).map(([name, list], i) => (\n          <ul key={i}>\n            <li>\n              {makeTitle(name)}\n              {renderUsageList(list, service, type)}\n            </li>\n          </ul>\n        ))\n      );\n\n  return (\n    <div className=\"security-group-usage\">\n      {value && (\n        <ul>\n          {Object.entries(value).map(([service, { resource_type }]) => (\n            Object.entries(resource_type).map(([type, resources], i) => (\n              <div key={i}>\n                <li>\n                  <h5 className=\"resource-title\">\n                    {`${makeTitle(service)} ${makeTitle(type)}`}\n                  </h5>\n                </li>\n                {renderUsageList(resources, service, type)}\n              </div>\n            ))\n          ))}\n        </ul>\n      )}\n      {!value && (\n        <WarningMessage\n          message=\"This security group is not in use.\"\n          icon={<CheckCircleOutlineOutlinedIcon fontSize=\"inherit\" />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Usage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getVpcFromPath, getRegionFromPath } from '../../../utils/Api';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialSection } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport RulesList from './RulesList';\nimport Usage from './Usage';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Ec2SecurityGroups = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const region = getRegionFromPath(path);\n  const vpcId = getVpcFromPath(path);\n\n  const { data: vpc, loading } = useAPI(\n    getRawEndpoint(`services.ec2.regions.${region}.vpcs.${vpcId}.name`)\n  );\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.vpc = `${vpc} (${vpcId})`;\n    data.item.region = region;\n  }\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Egress Rules\">\n          <PartialSection path=\"rules.egress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Ingress Rules\">\n          <PartialSection path=\"rules.ingress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Usage\">\n          <PartialSection path=\"used_by\">\n            <Usage />\n          </PartialSection>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nEc2SecurityGroups.propTypes = propTypes;\n\nexport default Ec2SecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import get from 'lodash/get';\n\n\nexport const getRegionFromPath = path => get(path.match(/regions\\.([^.]*)/), 1);\n\nexport const getVpcFromPath = path => get(path.match(/vpcs\\.([^.]*)/), 1);\n"],"sourceRoot":""}