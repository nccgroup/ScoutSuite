{"version":3,"sources":["partials/aws/vpc.regions.id.flow_logs.id/Informations/index.js","partials/aws/vpc.regions.id.flow_logs.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","valueOrNone","formatDate","RegionDomain","props","data","tags","get","isEmpty","title","renderAwsTags","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","value","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/22.1775c171.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { valueOrNone, formatDate } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"Name\"\n        valuePath=\"name\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Resource ID\"\n        valuePath=\"resource_id\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Creation Date\"\n        valuePath=\"creation_time\"\n        renderValue={formatDate}\n      />\n      <PartialValue\n        label=\"Flow Log Status\"\n        valuePath=\"flow_log_status\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Deliver Logs Status\"\n        valuePath=\"deliver_logs_status\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Deliver Logs Error Messages\"\n        valuePath=\"deliver_logs_error_message\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Traffic Type\"\n        valuePath=\"traffic_type\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Destination Type\"\n        valuePath=\"log_destination_type\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Destination\"\n        valuePath=\"log_destination\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Log Format\"\n        valuePath=\"log_format\"\n        renderValue={valueOrNone}\n      />\n      <PartialValue\n        label=\"Max Aggregation Interval\"\n        valuePath=\"max_aggregation_interval\"\n        renderValue={valueOrNone}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { partialDataShape, renderAwsTags } from '../../../utils/Partials';\nimport { Partial } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst RegionDomain = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const tags = get(data, ['item', 'tags'], []);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        {!isEmpty(tags) && (\n          <TabPane title=\"Tags\">\n            {renderAwsTags(tags)}\n          </TabPane>\n        )}\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRegionDomain.propTypes = propTypes;\n\nexport default RegionDomain;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}