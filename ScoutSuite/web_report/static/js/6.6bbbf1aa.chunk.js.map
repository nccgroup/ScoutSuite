{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Informations/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/RulesList/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Usage/index.js","partials/aws/ec2.regions.id.vpcs.id.security_groups.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/WarningMessage/index.js"],"names":["Informations","label","valuePath","RulesList","ctx","useContext","PartialContext","basePath","PartialPathContext","rules","get","item","isDefault","renderIpAddresses","title","addresses","path","map","address","i","value","errorPath","renderValue","CIDRName","CIDR","className","Object","entries","protocols","name","ports","groups","port_name","port","cidrs","Ipv6Ranges","security_groups","group","GroupName","GroupId","UserId","message","Usage","renderUsageList","resources","isArray","renderResourcesAsList","list","makeTitle","service","resource_type","type","icon","fontSize","Ec2SecurityGroups","props","data","defaultValues","path_to_issue","React","createContext","PartialTabContext","AddException","finding","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","setIssueLevel","fullValuePath","concatPaths","String","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","WarningMessage"],"mappings":"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","file":"static/js/6.6bbbf1aa.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue label=\"ID\" valuePath=\"id\" />\n      <PartialValue label=\"ARN\" valuePath=\"arn\" />\n      <PartialValue label=\"Region\" valuePath=\"region\" />\n      {/* TODO: Get VPC value from 'services.vpc.regions'*/}\n      <PartialValue label=\"VPC\" valuePath=\"vpc\" />  \n      <PartialValue label=\"Description\" valuePath=\"description\" />\n    </>\n  );\n};\n\nexport default Informations;\n","import React, { useContext }  from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\nimport { PartialValue } from '../../../../components/Partial';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst RulesList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const rules = get(ctx.item, basePath);\n\n  const isDefault = get(ctx.item, 'name') === 'default';\n\n  const renderIpAddresses = (title, addresses, path) => (\n    <li>\n      {`${title}:`}\n      <ul>\n        {addresses.map((address, i) => (\n          <li key={i}>\n            <PartialValue\n              value={address}\n              errorPath={path}\n              renderValue={value =>\n                value.CIDRName \n                  ? `${value.CIDR} (${value.CIDRName})`\n                  : value.CIDR\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const renderSecurityGroups = (groups, path) => (\n    <li>\n      EC2 security groups:\n      <ul>\n        {groups.map((group, i) => (\n          <li key={i}>\n            <PartialValue\n              value={group}\n              errorPath={path}\n              renderValue={value =>\n                value.GroupName\n                  ? `${value.GroupName} (${value.GroupId})`   //TODO: Link groupId resource\n                  : `${value.GroupId} (AWS Account ID: ${value.UserId})`\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <>\n      <ul className=\"rules-list\">\n        {Object.entries(rules.protocols).map(([name, { ports }], i) => (\n          <div key={i}>\n            <li>{name}</li>\n            <ul>\n              <li>\n                Ports:\n                <ul>\n                  {Object.entries(ports).map(([port_name, port], i) => (\n                    <div key={i}>\n                      <li>\n                        <PartialValue\n                          value={port_name}\n                          errorPath={`protocols.${name}.ports.${port_name}`}\n                        />\n                      </li>\n                      <ul>\n                        {port.cidrs && (\n                          renderIpAddresses(\n                            'IP adresses',\n                            port.cidrs, \n                            `protocols.${name}.ports.${port_name}.cidrs.${i}.CIDR`,\n                          )\n                        )}\n                        {port.Ipv6Ranges && (\n                          renderIpAddresses(\n                            'IPv6 addresses',\n                            port.Ipv6Ranges,\n                            `protocols.${name}.ports.${port_name}.cidrs.${i}.CIDR`,\n                          )\n                        )}\n                        {port.security_groups && (\n                          renderSecurityGroups(\n                            port.security_groups,\n                            `protocols.${name}.ports.${port_name}.security_groups.${i}`,\n                          )\n                        )}\n                      </ul>\n                    </div>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </ul>\n      {isDefault && (\n        <PartialValue\n          errorPath=\"default_with_rules\"\n          renderValue={() => (\n            <WarningMessage\n              className=\"rules-list__warning-message\"\n              message=\"Default security groups should have no rules.\"\n            />\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RulesList;\n","import React, { useContext }  from 'react';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport { \n  PartialContext, \n  PartialPathContext \n} from '../../../../components/Partial/context';\nimport { \n  makeTitle,\n  renderResourcesAsList,\n} from '../../../../utils/Partials';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst Usage = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n  const renderUsageList = resources => \n    isArray(resources) \n      ? renderResourcesAsList(resources, 'name')\n      : (\n        Object.entries(resources).map(([name, list], i) => (\n          <ul key={i}>\n            <li>\n              {makeTitle(name)}\n              {renderUsageList(list)}\n            </li>\n          </ul>\n        ))\n      );\n\n  return (\n    <div className=\"security-group-usage\">\n      {value && (\n        <ul>\n          {Object.entries(value).map(([service, { resource_type }]) => (\n            Object.entries(resource_type).map(([type, resources], i) => (\n              <div key={i}>\n                <li>\n                  <h5 className=\"resource-title\">\n                    {`${makeTitle(service)} ${makeTitle(type)}`}\n                  </h5>\n                </li>\n                {renderUsageList(resources)}\n              </div>\n            ))\n          ))}\n        </ul>\n      )}\n      {!value && (\n        <WarningMessage\n          message=\"This security group is not in use.\"\n          icon={<CheckCircleOutlineOutlinedIcon fontSize=\"inherit\" />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Usage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial, PartialSection } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport RulesList from './RulesList';\nimport Usage from './Usage';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Ec2SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Egress Rules\">\n          <PartialSection path=\"rules.egress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Ingress Rules\">\n          <PartialSection path=\"rules.ingress\">\n            <RulesList />\n          </PartialSection>\n        </TabPane>\n        <TabPane title=\"Usage\">\n          <PartialSection path=\"used_by\">\n            <Usage />\n          </PartialSection>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nEc2SecurityGroups.propTypes = propTypes;\n\nexport default Ec2SecurityGroups;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}