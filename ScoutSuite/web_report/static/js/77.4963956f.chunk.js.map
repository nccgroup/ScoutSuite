{"version":3,"sources":["partials/gcp/cloudstorage.projects.id.buckets.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderACL","acls","path","map","_","key","valuePath","renderObjACL","acl","entity","Buckets","props","data","iams","member_bindings","get","default_object_acl","label","renderValue","formatDate","convertBoolToEnable","title","isEmpty","Object","entries","iam","value","item","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/77.4963956f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport PartialSection from '../../../components/Partial/PartialSection/index';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst renderIAM = (iams) => {\n  return (\n    <ul>\n      {iams.map(([key, iam]) => (\n        <li key={key}>\n          <PartialValue valuePath={key} value={key} />\n          <ul>\n            {iam.map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst renderACL = (acls) => {\n  return (\n    <PartialSection path=\"acls\">\n      <ul>\n        {acls.map((_, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.entity'} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst renderObjACL = (acls) => {\n  return (\n    <PartialSection path=\"default_object_acl\">\n      <ul>\n        {acls.map((acl, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.' + acl.entity} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst Buckets = (props) => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const member_bindings = get(data, ['item', 'member_bindings']);\n  const acls = get(data, ['item', 'acls']);\n  const default_object_acl = get(data, ['item', 'default_object_acl']);\n\n  return (\n    <Partial data={data}>\n      <div>\n        <PartialValue label=\"Project ID\" valuePath=\"project_id\" />\n\n        <PartialValue\n          label=\"Creation Date\"\n          valuePath=\"creation_date\"\n          renderValue={formatDate}\n        />\n\n        <PartialValue label=\"Location\" valuePath=\"location\" />\n\n        <PartialValue label=\"Storage Class\" valuePath=\"storage_class\" />\n\n        <PartialValue\n          label=\"Logging\"\n          valuePath=\"logging_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Versioning\"\n          valuePath=\"versioning_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n      </div>\n\n      <TabsMenu>\n        {/*TODO: Tab error highlight */}\n\n        <TabPane title=\"IAM Permissions\">\n          {!isEmpty(member_bindings) ? (\n            renderIAM(Object.entries(member_bindings))\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n\n        <TabPane title=\"ACL Permissions\">\n          {!isEmpty(acls) ? renderACL(acls) : <span>None</span>}\n        </TabPane>\n\n        <TabPane title=\"Default Object ACL Permissions\">\n          {!isEmpty(default_object_acl) ? (\n            renderObjACL(default_object_acl)\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nBuckets.propTypes = propTypes;\n\nexport default Buckets;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}