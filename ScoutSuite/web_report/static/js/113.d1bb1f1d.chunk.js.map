{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/Usage/index.js","components/Partial/context.js","components/WarningMessage/index.js"],"names":["Usage","ctx","useContext","PartialContext","basePath","PartialPathContext","value","get","item","renderUsageList","resources","service","type","isArray","renderList","renderResourceLink","Object","entries","map","i","name","list","makeTitle","className","resource_type","message","icon","fontSize","defaultValues","path_to_issue","React","createContext","PartialTabContext","defaultProps","WarningMessage","props","cx"],"mappings":"8NAmEeA,UAhDD,WACZ,IAAMC,EAAMC,qBAAWC,KACjBC,EAAWF,qBAAWG,KACtBC,EAAQC,IAAIN,EAAIO,KAAMJ,GAGtBK,EAAkB,SAAlBA,EAAmBC,EAAWC,EAASC,GAArB,OACtBC,IAAQH,GACJI,YAAWJ,EAAW,GAAIK,YAAmBJ,EAASC,IAEtDI,OAAOC,QAAQP,GAAWQ,KAAI,WAAeC,GAAf,uBAAEC,EAAF,KAAQC,EAAR,YAC5B,6BACE,+BACGC,YAAUF,GACVX,EAAgBY,EAAMV,EAASC,OAH3BO,OASjB,OACE,sBAAKI,UAAU,uBAAf,UACGjB,GACC,6BACGU,OAAOC,QAAQX,GAAOY,KAAI,mCAAEP,EAAF,KAAaa,EAAb,KAAaA,cAAb,OACzBR,OAAOC,QAAQO,GAAeN,KAAI,WAAoBC,GAApB,uBAAEP,EAAF,KAAQF,EAAR,YAChC,gCACE,6BACE,oBAAIa,UAAU,iBAAd,mBACMD,YAAUX,GADhB,YAC4BW,YAAUV,QAGvCH,EAAgBC,EAAWC,EAASC,KAN7BO,YAYhBb,GACA,cAAC,IAAD,CACEmB,QAAQ,qCACRC,KAAM,cAAC,IAAD,CAAgCC,SAAS,mB,iCC5DzD,0HAEMC,EAAgB,CACpBC,cAAe,GACfrB,KAAM,IAGKL,EAAiB2B,IAAMC,cAAcH,GACrCvB,EAAqByB,IAAMC,cAAc,IACzCC,EAAoBF,IAAMC,eAAc,gB,qFCK/CE,G,OAAe,CACnBP,KAAM,cAAC,IAAD,CAA2BC,SAAS,cAGtCO,EAAiB,SAAAC,GAAU,IAE7BV,EAGEU,EAHFV,QACAC,EAEES,EAFFT,KACAH,EACEY,EADFZ,UAGF,OACE,sBAAKA,UAAWa,IAAG,kBAAmBb,GAAtC,UACGG,EACAD,MAMPS,EAAeD,aAAeA,EAEfC,O","file":"static/js/113.d1bb1f1d.chunk.js","sourcesContent":["import React, { useContext }  from 'react';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport { \n  PartialContext, \n  PartialPathContext \n} from '../../../../components/Partial/context';\nimport { \n  makeTitle,\n  renderList,\n  renderResourceLink,\n} from '../../../../utils/Partials';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst Usage = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n\n  const renderUsageList = (resources, service, type) => \n    isArray(resources) \n      ? renderList(resources, '', renderResourceLink(service, type))\n      : (\n        Object.entries(resources).map(([name, list], i) => (\n          <ul key={i}>\n            <li>\n              {makeTitle(name)}\n              {renderUsageList(list, service, type)}\n            </li>\n          </ul>\n        ))\n      );\n\n  return (\n    <div className=\"security-group-usage\">\n      {value && (\n        <ul>\n          {Object.entries(value).map(([service, { resource_type }]) => (\n            Object.entries(resource_type).map(([type, resources], i) => (\n              <div key={i}>\n                <li>\n                  <h5 className=\"resource-title\">\n                    {`${makeTitle(service)} ${makeTitle(type)}`}\n                  </h5>\n                </li>\n                {renderUsageList(resources, service, type)}\n              </div>\n            ))\n          ))}\n        </ul>\n      )}\n      {!value && (\n        <WarningMessage\n          message=\"This security group is not in use.\"\n          icon={<CheckCircleOutlineOutlinedIcon fontSize=\"inherit\" />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Usage;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}