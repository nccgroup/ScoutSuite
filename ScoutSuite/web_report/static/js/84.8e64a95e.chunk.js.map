{"version":3,"sources":["partials/gcp/cloudstorage.projects.id.buckets.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderACL","acls","path","map","_","key","valuePath","renderObjACL","acl","entity","Buckets","props","data","iams","member_bindings","get","default_object_acl","label","renderValue","formatDate","convertBoolToEnable","title","isEmpty","Object","entries","iam","value","item","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/84.8e64a95e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport PartialSection from '../../../components/Partial/PartialSection/index';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst renderIAM = (iams) => {\n  return (\n    <ul>\n      {iams.map(([key, iam]) => (\n        <li key={key}>\n          <PartialValue valuePath={key} value={key} />\n          <ul>\n            {iam.map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst renderACL = (acls) => {\n  return (\n    <PartialSection path=\"acls\">\n      <ul>\n        {acls.map((_, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.entity'} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst renderObjACL = (acls) => {\n  return (\n    <PartialSection path=\"default_object_acl\">\n      <ul>\n        {acls.map((acl, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.' + acl.entity} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst Buckets = (props) => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const member_bindings = get(data, ['item', 'member_bindings']);\n  const acls = get(data, ['item', 'acls']);\n  const default_object_acl = get(data, ['item', 'default_object_acl']);\n\n  return (\n    <Partial data={data}>\n      <div>\n        <PartialValue label=\"Project ID\" valuePath=\"project_id\" />\n\n        <PartialValue\n          label=\"Creation Date\"\n          valuePath=\"creation_date\"\n          renderValue={formatDate}\n        />\n\n        <PartialValue label=\"Location\" valuePath=\"location\" />\n\n        <PartialValue label=\"Storage Class\" valuePath=\"storage_class\" />\n\n        <PartialValue\n          label=\"Logging\"\n          valuePath=\"logging_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Versioning\"\n          valuePath=\"versioning_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n      </div>\n\n      <TabsMenu>\n        <TabPane title=\"IAM Permissions\">\n          {!isEmpty(member_bindings) ? (\n            renderIAM(Object.entries(member_bindings))\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n\n        <TabPane title=\"ACL Permissions\">\n          {!isEmpty(acls) ? renderACL(acls) : <span>None</span>}\n        </TabPane>\n\n        <TabPane title=\"Default Object ACL Permissions\">\n          {!isEmpty(default_object_acl) ? (\n            renderObjACL(default_object_acl)\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nBuckets.propTypes = propTypes;\n\nexport default Buckets;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}