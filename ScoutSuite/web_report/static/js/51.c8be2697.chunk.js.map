{"version":3,"sources":["partials/azure/virtualmachines.subscriptions.id.instances.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderKeyValue","key","value","label","valueOrNone","Instances","props","data","item","valuePath","renderValue","errorPath","tags","renderList","title","disabled","diagnostics_profile","Object","entries","os_profile","storage_profile","additional_capabilities","network_interfaces","id","service","resource","renderNetworkInterfaces","extensions","name","renderExtension","InformationsWrapper","children","className","PartialTabPane","isSelected","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"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","file":"static/js/51.c8be2697.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import Skeleton from '@material-ui/lab/Skeleton';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport DetailedValue from '../../../components/DetailedValue';\n\nconst renderNetworkInterfaces = id => {\n  return (\n    <ResourceLink\n      service=\"network\" \n      resource=\"network_interfaces\"\n      id={id} />\n  );\n};\n\nconst renderKeyValue = ([key, value]) => {\n  return <DetailedValue\n    label={key}\n    value={valueOrNone(value)} />;\n};\n\nconst renderExtension = (item) => {\n  return <PartialValue\n    label=''\n    value={item.name}\n    errorPath=\"extensions\" />;\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst Instances = props => {\n  const { data, item } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\" valuePath=\"name\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"VM ID\"\n          valuePath=\"vm_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Location\"\n          valuePath=\"location\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Provisioning State\"\n          valuePath=\"provisioning_state\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Identity Principal ID\"\n          valuePath=\"identity.principal_id\"\n          errorPath=\"identity\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"License Type\"\n          valuePath=\"license_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Plan\" valuePath=\"plan\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Zones\"\n          valuePath=\"zones\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Instance View\"\n          valuePath=\"instance_view\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Proximity Placement Group\"\n          valuePath=\"proximity_placement_group\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Availability Set\"\n          valuePath=\"availability_set\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Additional Capabilities\"\n          valuePath=\"additional_capabilities\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n\n        <TabPane title=\"Diagnostics Profile\" disabled={!item.diagnostics_profile}>\n          {item.diagnostics_profile && renderList(Object.entries(item.diagnostics_profile), '', item =>\n            renderKeyValue(item)\n          )}\n        </TabPane>\n\n        <TabPane title=\"OS Profile\" disabled={!item.os_profile}>\n          {item.os_profile && renderList(Object.entries(item.os_profile), '', item =>\n            renderKeyValue(item)\n          )}\n        </TabPane>\n\n        <TabPane title=\"Storage Profile\" disabled={!item.storage_profile}>\n          {item.storage_profile && renderList(Object.entries(item.storage_profile), '', item =>\n            renderKeyValue(item)\n          )}\n        </TabPane>\n\n        <TabPane title=\"Additional Capabilities\" disabled={!item.additional_capabilities}>\n          {item.additional_capabilities && renderList(Object.entries(item.additional_capabilities), '', item =>\n            valueOrNone(item)\n          )}\n        </TabPane>\n\n        <TabPane title=\"Network Interfaces\">\n          {renderList(item.network_interfaces, '', id =>\n            renderNetworkInterfaces(id)\n          )}\n        </TabPane>\n\n        <TabPane title=\"Extensions\">\n          {renderList(item.extensions, '', value => renderExtension(value))}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nInstances.propTypes = propTypes;\n\nexport default Instances;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}