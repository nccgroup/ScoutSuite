{"version":3,"sources":["partials/azure/network.subscriptions.id.application_security_groups.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["AppSecurityGroups","props","data","item","network_interfaces_ids","useMemo","Object","values","network_interfaces","map","id","label","valuePath","renderValue","valueOrNone","tags","renderList","title","value","service","resource","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"0KAiFeA,UAtDW,SAAAC,GAAU,IAC1BC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAyBC,mBAC7B,kBAAMC,OAAOC,OAAOJ,EAAKK,oBAAoBC,KAAI,SAAAN,GAAI,OAAIA,EAAKO,QAC9D,CAACP,EAAKK,qBAGR,OAAKN,EAGH,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACES,MAAM,OAAOC,UAAU,OACvBC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,WACNC,UAAU,WACVC,YAAaC,MAGf,cAAC,IAAD,CACEH,MAAM,qBACNC,UAAU,qBACVC,YAAaC,MAGf,cAAC,IAAD,CACEH,MAAM,OACNC,UAAU,OACVC,YAAa,SAAAE,GAAI,OAAIC,YAAWD,EAAMD,QAGxC,cAAC,IAAD,CACEH,MAAM,iBACNC,UAAU,sBACVC,YAAaC,SAIjB,cAAC,IAAD,UACE,cAAC,IAAD,CAASG,MAAM,8BAAf,SACGD,YAAWZ,EAAwB,IAAI,SAAAc,GAAK,OAzDxBR,EA0DIQ,EAxD/B,cAAC,IAAD,CACEC,QAAQ,UACRC,SAAS,qBACTV,GAAIA,IALqB,IAAAA,YAqBX,O,wDCVLW,IAda,SAAApB,GAAU,IAC5BqB,EAAarB,EAAbqB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACvB,GAAW,IAE/BgB,EAKEhB,EALFgB,MACAQ,EAIExB,EAJFwB,WACAC,EAGEzB,EAHFyB,SACAC,EAEE1B,EAFF0B,QACAL,EACErB,EADFqB,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGZ,EACAe,IAAWH,GAAYI,QAG1BhB,EAGJ,OACE,cAAC,IAAkBiB,SAAnB,CAA4BhB,MAAOY,EAAnC,SACE,cAAC,IAAD,CACEb,MAAOc,EACPR,UAAWY,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/45.426c5b42.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\n\nconst renderNetworkInterface = id => {\n  return (\n    <ResourceLink\n      service=\"network\" \n      resource=\"network_interfaces\"\n      id={id} />\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst AppSecurityGroups = props => {\n  const { data, item } = props;\n  const network_interfaces_ids = useMemo(\n    () => Object.values(item.network_interfaces).map(item => item.id),\n    [item.network_interfaces],\n  );\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Name\" valuePath=\"name\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Location\"\n          valuePath=\"location\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Provisioning State\"\n          valuePath=\"provisioning_state\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Attached Network Interfaces\">\n          {renderList(network_interfaces_ids, '', value =>\n            renderNetworkInterface(value),\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nAppSecurityGroups.propTypes = propTypes;\n\nexport default AppSecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}