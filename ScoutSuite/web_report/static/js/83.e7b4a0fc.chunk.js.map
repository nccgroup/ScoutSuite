{"version":3,"sources":["partials/aws/elb.regions.id.elb_policies.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["ELBs","props","data","protocols","get","options","ciphers","attributes","isSslPolicy","renderEntries","entry","map","i","key","value","label","title","Object","entries","filter","x","AttributeName","AttributeValue","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","valuePath","errorPath","inline","tooltip","tooltipProps","renderValue","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/83.e7b4a0fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { Partial } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport DetailedValue from '../../../components/DetailedValue';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ELBs = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const protocols = get(data, ['item', 'protocols'], {});\n  const options = get(data, ['item', 'options'], {});\n  const ciphers = get(data, ['item', 'ciphers'], {});\n  const attributes = get(data, ['item', 'PolicyAttributeDescriptions'], []);\n  const isSslPolicy = get(data, ['item', 'PolicyTypeName']) === 'SSLNegotiationPolicyType';\n\n  const renderEntries = entry => (\n    <div>\n      {entry.map(([key, value], i) => (\n        <DetailedValue\n          key={i}\n          label={key}\n          value={value}\n        />\n      ))}\n    </div>\n  );\n\n  return (\n    <Partial data={data}>\n      {isSslPolicy ? (\n        <TabsMenu>\n          <TabPane title=\"Protocols\">\n            {renderEntries(Object.entries(protocols))}\n          </TabPane>\n          <TabPane title=\"Options\">\n            {renderEntries(Object.entries(options))}\n          </TabPane>\n          <TabPane title=\"Ciphers\">\n            {renderEntries(Object.entries(ciphers)\n              .filter(([, value]) => value === 'true')\n            )}\n          </TabPane>\n        </TabsMenu>\n      ) : (\n        <TabsMenu>\n          <TabPane title=\"Attributes\">\n            {renderEntries(attributes.map(x => [\n              x.AttributeName, x.AttributeValue\n            ]))}\n          </TabPane>\n        </TabsMenu>\n      )}\n    </Partial>\n  );\n};\n\nELBs.propTypes = propTypes;\n\nexport default ELBs;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}