{"version":3,"sources":["partials/aws/iam.users.id/AuthenticationMethods/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/WarningMessage/index.js"],"names":["AuthenticationMethods","props","mfaDevices","accessKeys","loginProfile","className","label","valuePath","renderValue","value","convertBoolToYesOrNo","isEmpty","errorPath","map","mfa","i","SerialNumber","get","key","AccessKeyId","Status","formatDate","CreateDate","length","message","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","title","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","data","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","icon","fontSize","WarningMessage"],"mappings":"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","file":"static/js/44.894bc9c2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport {\n  convertBoolToYesOrNo, \n  formatDate,\n} from '../../../../utils/Partials';\nimport { PartialValue } from '../../../../components/Partial';\nimport DetailedValue from '../../../../components/DetailedValue';\n\nimport './style.scss';\nimport WarningMessage from '../../../../components/WarningMessage';\n\n\nconst propTypes = {\n  mfaDevices: PropTypes.array.isRequired,\n  accessKeys: PropTypes.array.isRequired,\n  loginProfile: PropTypes.object.isRequired,\n};\n\n\nconst AuthenticationMethods = props => {\n  const { \n    mfaDevices, \n    accessKeys,\n    loginProfile,\n  } = props;\n\n  return (\n    <div className=\"authentication-methods\">\n      <PartialValue\n        label=\"Password enabled\"\n        valuePath=\"LoginProfile\"\n        renderValue={value => convertBoolToYesOrNo(!isEmpty(value))}\n      />\n      <PartialValue\n        label=\"Multi-Factor enabled\"\n        valuePath=\"MFADevices\"\n        errorPath=\"mfa_enabled\"\n        renderValue={value => convertBoolToYesOrNo(!isEmpty(value))}\n      />\n      {!isEmpty(mfaDevices) && (\n        <ul>\n          {mfaDevices.map((mfa, i) => (\n            <li key={i}>\n              <DetailedValue \n                label=\"Serial Number\"\n                value={mfa.SerialNumber}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n      <PartialValue\n        label=\"Access Keys\"\n        valuePath=\"AccessKeys\"\n        errorPath=\"multiple_api_keys\"\n        renderValue={value => get(value, 'length', 0)}\n      />\n      {!isEmpty(accessKeys) && (\n        <ul>\n          {accessKeys.map((key, i) => (\n            <li key={i}>\n              <PartialValue\n                errorPath={`AccessKeys.${i}`}\n                renderValue={() => (\n                  <ul className=\"key-infos\">\n                    {key.AccessKeyId}\n                    <li>{key.Status}</li>\n                    <li>{`Created on ${formatDate(key.CreateDate)}`}</li>\n                  </ul>\n                )}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n\n      <div className=\"warnings\">\n        {!isEmpty(loginProfile) && accessKeys.length > 0 && (\n          <PartialValue\n            errorPath=\"password_and_keys\"\n            renderValue={() => (\n              <WarningMessage \n                message=\"Review the need for password-based and key-based authentication\" \n              />\n            )}\n          />\n        )}\n        {accessKeys.length > 1 && (\n          <PartialValue \n            errorPath=\"multiple_active_api_keys\"\n            renderValue={() => (\n              <WarningMessage \n                message=\"Review the need for multiple active access keys\" \n              />\n            )}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nAuthenticationMethods.propTypes = propTypes;\n\nexport default AuthenticationMethods;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: <ReportProblemOutlinedIcon fontSize=\"inherit\" />\n};\n\nconst WarningMessage = props => {\n  const { \n    message, \n    icon,\n    className,\n  } = props;\n\n  return (\n    <div className={cx('warning-message', className)}>\n      {icon}\n      {message}\n    </div>\n  );\n};\n\nWarningMessage.propTypes = propTypes;\nWarningMessage.defaultProps = defaultProps;\n\nexport default WarningMessage;\n"],"sourceRoot":""}