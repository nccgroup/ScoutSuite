{"version":3,"sources":["partials/azure/aad.service_principals.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","api/useResources.js"],"names":["renderRoles","roles","rolesList","renderList","role","subscription_id","find","r","role_id","id","service","resource","name","renderRole","ServicePrincipals","props","keys","data","item","useMemo","map","useResources","label","valuePath","renderValue","valueOrNone","tags","app_name","app_id","renderAppName","convertBoolToEnable","title","key_credentials","length","key","index","path","key_id","formatDate","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","value","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon","ids","setData","loading","setLoading","a","requests","API","Promise","all","response","error","message","asyncAPI"],"mappings":"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","file":"static/js/18.1653e549.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport { useResources } from '../../../api/useResources';\nimport PartialSection from '../../../components/Partial/PartialSection';\n\nconst renderAppName = (app_name, app_id) => {\n  if (!app_name) return <span>None</span>;\n\n  return (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"applications\"\n      id={app_id}\n      name={app_name}\n    />\n  );\n};\n\nconst renderRoles = (roles, rolesList) => {\n  const renderRole = role => {\n    const { subscription_id } = rolesList.find(r => r.role_id === role.id);\n    return (\n      <span>\n        <ResourceLink\n          service=\"rbac\"\n          resource=\"roles\"\n          id={role.id}\n          name={role.name}\n        />{' '}\n        (subscription {subscription_id})\n      </span>\n    );\n  };\n  return renderList(roles, '', role => renderRole(role));\n};\n\nconst renderKeys = keys => {\n  if (!keys || keys.length === 0) return <span>None</span>;\n\n  return (\n    <ul>\n      {keys.map((key, index) => (\n        <PartialSection\n          path={`keys.${index}`}\n          key={index}>\n          <li>\n            <b>{key.key_id}</b>\n            <ul>\n              <li>\n                <PartialValue\n                  label=\"Type\"\n                  valuePath=\"type\"\n                  renderValue={valueOrNone} />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Usage\"\n                  valuePath=\"usage\"\n                  renderValue={valueOrNone} />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"Start Date\"\n                  valuePath=\"start_date\"\n                  renderValue={formatDate}\n                />\n              </li>\n              <li>\n                <PartialValue\n                  label=\"End Date\"\n                  valuePath=\"end_date\"\n                  renderValue={formatDate}\n                />\n              </li>\n            </ul>\n          </li>\n        </PartialSection>\n      ))}\n    </ul>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst ServicePrincipals = props => {\n  const { data, item } = props;\n  const rolesList = useMemo(() => item.roles.map(r => r.role_id), [item.roles]);\n  const { data: roles } = useResources('rbac', 'roles', rolesList);\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\" valuePath=\"id\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"App\"\n          valuePath=\"app_name\"\n          renderValue={app_name => renderAppName(app_name, item.app_id)}\n        />\n\n        <PartialValue\n          label=\"Status\"\n          valuePath=\"account_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"App Owner Tenant ID\"\n          valuePath=\"app_owner_tenant_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"App Role Assignment Required\"\n          valuePath=\"app_role_assignment_required\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Type\"\n          valuePath=\"object_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Service Principal Type\"\n          valuePath=\"service_principal_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Publisher Name\"\n          valuePath=\"publisher_name\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Deletion Timestamp\"\n          valuePath=\"deletion_timestamp\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Roles\">\n          {renderRoles(roles, item.roles)}\n        </TabPane>\n\n        <TabPane title=\"Keys\">\n          {renderKeys(item.key_credentials)}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nServicePrincipals.propTypes = propTypes;\n\nexport default ServicePrincipals;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import { useEffect, useState } from 'react';\nimport * as API from './api';\n\n/**\n * React Hook to fetch API data and re-render the component\n * @param {*} path\n */\nexport const useResources = (service, resource, ids) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const asyncAPI = async () => {\n      if (service && resource && ids) {\n        setLoading(true);\n        try {\n          const requests = ids.map(id =>\n            API.get(`services/${service}/resources/${resource}/${id}`),\n          );\n          const response = await Promise.all(requests);\n          console.info('useResources response', service, resource, ids, response);\n          setData(response);\n        } catch (e) {\n          console.error(e.message);\n        }\n        setLoading(false);\n      }\n    };\n    asyncAPI();\n  }, [ids]);\n\n  return {\n    data,\n    loading,\n  };\n};\n"],"sourceRoot":""}