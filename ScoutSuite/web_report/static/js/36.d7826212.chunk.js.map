{"version":3,"sources":["partials/azure/network.subscriptions.id.network_interfaces.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderAppSGLinks","ids","renderList","id","service","resource","renderAppSGLink","NetworkInterfaces","props","data","item","virtual_network_id","get","virtual_network","useAPI","getResourceEndpoint","label","valuePath","renderValue","valueOrNone","value","services","tags","title","errorPath","subnet","subnetName","subnets","name","renderSubnet","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","map","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/36.d7826212.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  valueOrNone,\n  renderList,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport { useAPI } from '../../../api/useAPI';\nimport { getResourceEndpoint } from '../../../api/paths';\n\nconst renderNetworkSG = id => {\n  return <ResourceLink\n    services=\"network\" resource=\"security_groups\"\n    id={id} />;\n};\n\nconst renderSubnet = (subnet, virtual_network) => {\n  if (!virtual_network) return <span>None</span>;\n  const subnetName = virtual_network.subnets[subnet.id].name;\n\n  return (\n    <ResourceLink\n      service=\"network\"\n      resource=\"virtual_networks\"\n      id={subnet.virtual_network_id}\n      name={subnetName}\n    />\n  );\n};\n\nconst renderAppSGLinks = ids => {\n  const renderAppSGLink = id => (\n    <ResourceLink\n      service=\"network\"\n      resource=\"application_security_groups\"\n      id={id}\n    />\n  );\n\n  return renderList(ids, '', id => renderAppSGLink(id));\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { data, item } = props;\n  const virtual_network_id = get(item, [\n    'ip_configuration',\n    'subnet',\n    'virtual_network_id',\n  ]);\n  const { data: virtual_network } = useAPI(\n    getResourceEndpoint('network', 'virtual_networks', virtual_network_id),\n  );\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Provisioning State\"\n          valuePath=\"provisioning_state\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Primary\"\n          valuePath=\"primary\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"IP Configurations\"\n          valuePath=\"ip_configurations\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Mac Address\"\n          valuePath=\"mac_address\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Interface Endpoint\"\n          valuePath=\"interface_endpoint\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Network Security Group\"\n          valuePath=\"network_security_group\"\n          renderValue={value =>\n            value ? renderNetworkSG(value) : <span>None</span>\n          }\n        />\n\n        <PartialValue\n          label=\"Enable IP Forwarding\"\n          valuePath=\"enable_ip_forwarding\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Enable Accelerated Networking\"\n          valuePath=\"enable_accelerated_networking\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"IP Configuration\">\n          <PartialValue\n            label=\"Name\"\n            valuePath=\"ip_configuration.name\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Provisioning State\"\n            valuePath=\"ip_configuration.provisioning_state\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Primary\"\n            valuePath=\"ip_configuration.primary\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Public IP Address\"\n            valuePath=\"ip_configuration.public_ip_address.ip_address\"\n            errorPath=\"ip_configuration.public_ip_address\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Address\"\n            valuePath=\"ip_configuration.private_ip_address\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Allocation Method\"\n            valuePath=\"ip_configuration.private_ip_allocation_method\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Private IP Address Version\"\n            valuePath=\"ip_configuration.private_ip_address_version\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Subnet\"\n            valuePath=\"ip_configuration.subnet\"\n            renderValue={subnet => renderSubnet(subnet, virtual_network)}\n          />\n\n          <PartialValue\n            label=\"Application Security Groups\"\n            valuePath=\"ip_configuration.application_security_groups\"\n            renderValue={value => renderAppSGLinks(value)}\n          />\n\n          <PartialValue\n            label=\"Application Gateway Backend Address Pools\"\n            valuePath=\"ip_configuration.application_gateway_backend_address_pools\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Load Balancer Backend Address Pools\"\n            valuePath=\"ip_configuration.load_balancer_backend_address_pools\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Load Balancer Inbound NAT Rules\"\n            valuePath=\"ip_configuration.load_balancer_inbound_nat_rules\"\n            renderValue={valueOrNone}\n          />\n\n          <PartialValue\n            label=\"Virtual Network Taps\"\n            valuePath=\"ip_configuration.virtual_network_taps\"\n            renderValue={valueOrNone}\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}