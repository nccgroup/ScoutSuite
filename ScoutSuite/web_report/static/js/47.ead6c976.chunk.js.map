{"version":3,"sources":["partials/azure/network.subscriptions.id.security_groups.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderSecurityRules","items","className","map","item","width","priority","name","protocol","source_port_ranges","source_address_prefixes_is_asg","service","resource","id","source_address_prefixes","destination_port_ranges","destination_address_prefixes","convertBoolToCheckmark","allow","renderSubnetLink","SecurityGroups","props","data","network_interfaces_ids","useMemo","Object","values","network_interfaces","sortedSecurityRules","sortBy","security_rules","inbound","filter","direction","outbound","label","valuePath","renderValue","tags","renderList","valueOrNone","title","subnets","value","InformationsWrapper","children","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"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","file":"static/js/47.ead6c976.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  renderList,\n  valueOrNone,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport ResourceLink from '../../../components/ResourceLink';\nimport { convertBoolToCheckmark } from '../../../utils/Partials/index';\n\nconst renderNetworkInterfaces = id => {\n  return (\n    <ResourceLink\n      service=\"network\" \n      resource=\"network_interfaces\"\n      id={id} />\n  );\n};\n\nconst renderSecurityRules = items => {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>Priority</td>\n            <td>Name</td>\n            <td>Protocol</td>\n            <td>Source Port</td>\n            <td>Source Filter</td>\n            <td>Destination Port</td>\n            <td>Destination Filter</td>\n            <td>Action</td>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <tr key={item.name}>\n              <td width=\"10%\" className=\"text-center\">\n                {item.priority}\n              </td>\n              <td width=\"40%\">{item.name}</td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.protocol}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.source_port_ranges}\n              </td>\n              {item.source_address_prefixes_is_asg && (\n                <td width=\"10%\" className=\"text-center\">\n                  <ResourceLink\n                    service=\"network\"\n                    resource=\"application_security_groups\"\n                    id={item.source_address_prefixes}\n                  />\n                </td>\n              )}\n              {!item.source_address_prefixes_is_asg && (\n                <td width=\"10%\" className=\"text-center\">\n                  {item.source_address_prefixes}\n                </td>\n              )}\n              <td width=\"10%\" className=\"text-center\">\n                {item.destination_port_ranges}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {item.destination_address_prefixes}\n              </td>\n              <td width=\"10%\" className=\"text-center\">\n                {convertBoolToCheckmark(item.allow)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst renderSubnetLink = ({id}) => (\n  <ResourceLink\n    service=\"network\" resource=\"virtual_networks\"\n    id={id} />\n);\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst SecurityGroups = props => {\n  const { data, item } = props;\n  const network_interfaces_ids = useMemo(\n    () => Object.values(item.network_interfaces).map(item => item.id),\n    [item.network_interfaces],\n  );\n\n  if (!data) return null;\n\n  const sortedSecurityRules = sortBy(item.security_rules, 'priority');\n  const inbound = sortedSecurityRules.filter(\n    ({ direction }) => direction === 'Inbound',\n  );\n  const outbound = sortedSecurityRules.filter(\n    ({ direction }) => direction === 'Outbound',\n  );\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"Name\" valuePath=\"name\" />\n\n        <PartialValue label=\"Location\" valuePath=\"location\" />\n\n        <PartialValue label=\"State\" valuePath=\"provisioning_state\" />\n\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={tags => renderList(tags, valueOrNone)}\n        />\n\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Inbound Security Rules\">\n          {renderSecurityRules(inbound)}\n        </TabPane>\n\n        <TabPane title=\"Outbound Security Rules\">\n          {renderSecurityRules(outbound)}\n        </TabPane>\n\n        <TabPane title=\"Attached Subnets\">\n          <PartialValue\n            valuePath=\"subnets\"\n            renderValue={subnets => renderList(Object.values(subnets), '', renderSubnetLink)}\n          />\n        </TabPane>\n\n        <TabPane title=\"Attached Network Interfaces\">\n          {renderList(network_interfaces_ids, '', value =>\n            renderNetworkInterfaces(value),\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}