{"version":3,"sources":["partials/aws/rds.regions.id.vpcs.id.instances.id/Informations/index.js","partials/aws/rds.regions.id.vpcs.id.instances.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","formatDate","makeTitle","convertBoolToEnable","value","SecurityGroups","props","data","title","Address","Port","errorPath","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"oJA4EeA,UAlEM,WACnB,OACE,qCACE,cAAC,IAAD,CACEC,MAAM,MACNC,UAAU,QAEZ,cAAC,IAAD,CACED,MAAM,SACNC,UAAU,WAEZ,cAAC,IAAD,CACED,MAAM,SACNC,UAAU,WAEZ,cAAC,IAAD,CACED,MAAM,gBACNC,UAAU,qBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,SACNC,UAAU,mBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,kBACNC,UAAU,oBAEZ,cAAC,IAAD,CACED,MAAM,6BACNC,UAAU,0BACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,2BACNC,UAAU,UACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,iBACNC,UAAU,oBAEZ,cAAC,IAAD,CACED,MAAM,0BACNC,UAAU,wBACVC,YAAa,SAAAI,GAAK,gBAAOA,EAAP,YAEpB,cAAC,IAAD,CACEN,MAAM,sBACNC,UAAU,gCACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,oBACNC,UAAU,mBACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,iBACNC,UAAU,iC,qGCrBHM,UAlCQ,SAAAC,GAAU,IACvBC,EAASD,EAATC,KAER,OAAKA,EAGH,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,cAAC,IAAD,UACE,cAAC,UAAD,MAGF,cAAC,IAAD,UACE,cAAC,IAAD,CAASC,MAAM,UAAf,SACE,gCACE,cAAC,IAAD,CACEV,MAAM,WACNC,UAAU,WACVC,YAAa,SAAAI,GAAK,gBAAOA,EAAMK,QAAb,YAAwBL,EAAMM,SAElD,cAAC,IAAD,CACEZ,MAAM,sBACNC,UAAU,qBACVY,UAAU,+BACVX,YAAaG,gBApBP,O,wDCMLS,IAda,SAAAN,GAAU,IAC5BO,EAAaP,EAAbO,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACT,GAAW,IAE/BE,EAKEF,EALFE,MACAQ,EAIEV,EAJFU,WACAC,EAGEX,EAHFW,SACAC,EAEEZ,EAFFY,QACAL,EACEP,EADFO,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGZ,EACAe,IAAWH,GAAYI,QAG1BhB,EAGJ,OACE,cAAC,IAAkBiB,SAAnB,CAA4BrB,MAAOiB,EAAnC,SACE,cAAC,IAAD,CACEb,MAAOc,EACPR,UAAWY,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/31.424b6c9f.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { \n  formatDate, \n  makeTitle,\n  convertBoolToEnable,\n} from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\" \n      />\n      <PartialValue \n        label=\"Region\" \n        valuePath=\"region\" \n      />\n      <PartialValue \n        label=\"Engine\" \n        valuePath=\"Engine\" \n      />\n      <PartialValue \n        label=\"Creation Time\" \n        valuePath=\"InstanceCreateTime\" \n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Status\" \n        valuePath=\"DBInstanceStatus\" \n        renderValue={makeTitle}\n      />\n      <PartialValue \n        label=\"Is Read Replica\" \n        valuePath=\"is_read_replica\"\n      />\n      <PartialValue \n        label=\"Auto Minor Version Upgrade\" \n        valuePath=\"AutoMinorVersionUpgrade\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Multi Availability Zones\" \n        valuePath=\"MultiAZ\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Instance Class\" \n        valuePath=\"DBInstanceClass\"\n      />\n      <PartialValue \n        label=\"Backup Retention Period\" \n        valuePath=\"BackupRetentionPeriod\"\n        renderValue={value => `${value} days`}\n      />\n      <PartialValue \n        label=\"Enhanced Monitoring\" \n        valuePath=\"EnhancedMonitoringResourceArn\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"Encrypted Storage\" \n        valuePath=\"StorageEncrypted\" \n        renderValue={convertBoolToEnable}\n      />\n      <PartialValue \n        label=\"CA Certificate\" \n        valuePath=\"CACertificateIdentifier\" \n      />\n    </>\n  );\n};\n\nexport default Informations;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { partialDataShape, convertBoolToEnable } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst SecurityGroups = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Network\">\n          <div>\n            <PartialValue \n              label=\"Endpoint\"\n              valuePath=\"Endpoint\"\n              renderValue={value => `${value.Address}:${value.Port}`}\n            />\n            <PartialValue \n              label=\"Publicly Accessible\"\n              valuePath=\"PubliclyAccessible\"\n              errorPath=\"instance_publicly_accessible\"\n              renderValue={convertBoolToEnable}\n            />\n          </div>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nSecurityGroups.propTypes = propTypes;\n\nexport default SecurityGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}