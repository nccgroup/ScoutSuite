{"version":3,"sources":["partials/aws/vpc.regions.id.vpcs.id.network_acls.id/RulesTable/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js"],"names":["RulesTable","props","rules","type","className","Object","entries","map","rule_id","rule","value","errorPath","port_range","protocol","CidrBlock","RuleAction","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","get","includes","Tooltip","title","placement","arrow","Button","disabled","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","label","separator","valuePath","inline","tooltip","tooltipProps","renderValue","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","data","console","info"],"mappings":"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","file":"static/js/80.2c75b5a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialValue } from '../../../../components/Partial';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  rules: PropTypes.object.isRequired,\n  type: PropTypes.oneOf([\n    'egress', \n    'ingress'\n  ]).isRequired,\n};\n\nconst RulesTable = props => {\n  const {\n    rules,\n    type,\n  } = props;\n\n  return (\n    <table className=\"rules-table\">\n      <thead>\n        <tr>\n          <th>Rule Number</th>\n          <th>Port</th>\n          <th>Protocol</th>\n          <th>IP Address</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(rules[type]).map(([rule_id, rule]) => (\n          <tr key={rule_id}>\n            <td>\n              <PartialValue\n                value={rule_id}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.port_range}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.protocol}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n            <td>\n              <PartialValue\n                value={rule.CidrBlock}\n                errorPath={`${type}.${rule_id}`}\n              />\n              \n            </td>\n            <td>\n              <PartialValue\n                value={rule.RuleAction}\n                errorPath={`${type}.${rule_id}`}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nRulesTable.propTypes = propTypes;\n\nexport default RulesTable;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n"],"sourceRoot":""}