{"version":3,"sources":["partials/aws/s3.buckets.id/BucketPolicies/AccessControlList/index.js","partials/aws/s3.buckets.id/BucketPolicies/PoliciesAccessTable/index.js","partials/aws/s3.buckets.id/BucketPolicies/index.js","partials/aws/s3.buckets.id/Informations/index.js","partials/aws/s3.buckets.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["AccessControlList","ctx","useContext","PartialContext","basePath","PartialPathContext","value","get","item","className","Object","keys","map","id","valuePath","tooltip","errorPath","renderValue","convertBoolToCheckmark","PoliciesAccessTable","props","columnName","entries","accessGroup","policies","inline_policies","i","policy_id","policy","rowSpan","length","toString","BucketPolicies","title","path","Informations","label","formatDate","convertBoolToEnable","Bucket","data","defaultValues","path_to_issue","React","createContext","PartialTabContext","PartialSection","children","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltipProps","basePathOverwrite","params","useParams","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/9.e129807f.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../../components/Partial/context';\nimport { PartialValue } from '../../../../../components/Partial';\nimport { convertBoolToCheckmark } from '../../../../../utils/Partials';\n\n\nconst AccessControlList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);  \n\n  return (\n    <table className=\"acl-table\">\n      <thead>\n        <tr>\n          <th/>\n          <th>List</th>\n          <th>Upload/Delete</th>\n          <th>View Permissions</th>\n          <th>Edit Permissions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(value).map(id => (\n          <tr key={id}>\n            <td>\n              <PartialValue \n                valuePath={`${id}.DisplayName`} \n                tooltip\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.read`}\n                errorPath={`${id}.read`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.read_acp`}\n                errorPath={`${id}.read_acp`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.write`}\n                errorPath={`${id}.write`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n            <td>\n              <PartialValue \n                valuePath={`${id}.permissions.write_acp`}\n                errorPath={`${id}.write_acp`}\n                renderValue={convertBoolToCheckmark}\n              />\n            </td>\n          </tr>\n        ))}\n        \n      </tbody>\n    </table>\n  );\n};\n\nexport default AccessControlList;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../../components/Partial/context';\n\nconst propTypes = {\n  columnName: PropTypes.string.isRequired,\n};\n\nconst PoliciesAccessTable = props => {\n  const { columnName } = props;\n\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const value = get(ctx.item, basePath);\n\n  return (\n    <table className=\"policies-table\">\n      <thead>\n        <tr>\n          <th>{columnName}</th>\n          <th>Policy Name</th>\n          <th>Condition</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(value).map(([id, accessGroup]) => {\n          const policies = accessGroup.policies || accessGroup.inline_policies;\n          \n          return Object.entries(policies).map(([policy_id, policy], i) => (\n            <tr key={policy_id}>\n              {i == 0 && (\n                <td rowSpan={Object.keys(policies).length}>\n                  {id}\n                </td>\n              )}\n              <td>\n                {policy_id}\n              </td>\n              <td>\n                {(get(policy, 'condition', null) != null).toString()}\n              </td>\n            </tr>\n          ));\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nPoliciesAccessTable.propTypes = propTypes;\n\nexport default PoliciesAccessTable;\n","import React from 'react';\n\nimport { TabsMenu, TabPane } from '../../../../components/Partial/PartialTabs';\nimport { PartialSection } from '../../../../components/Partial';\nimport AccessControlList from './AccessControlList';\nimport PoliciesAccessTable from './PoliciesAccessTable';\n\nimport './style.scss';\n\nconst BucketPolicies = () => {\n  return (\n    <TabsMenu className=\"bucket-policies\">\n      <TabPane title=\"Bucket ACLs\">\n        <PartialSection path=\"grantees\">\n          <AccessControlList />\n        </PartialSection>\n      </TabPane>\n      <TabPane title=\"Groups\">\n        <PartialSection path=\"groups\">\n          <PoliciesAccessTable columnName=\"Groups name\"/>\n        </PartialSection>\n      </TabPane>\n      <TabPane title=\"Roles\">\n        <PartialSection path=\"roles\">\n          <PoliciesAccessTable columnName=\"Roles name\"/>\n        </PartialSection>\n      </TabPane>\n      <TabPane title=\"Users\">\n        <PartialSection path=\"users\">\n          <PoliciesAccessTable columnName=\"Users name\"/>\n        </PartialSection>\n      </TabPane>\n    </TabsMenu>\n  );\n};\n\nexport default BucketPolicies;\n","import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { convertBoolToEnable, formatDate } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\" \n      />\n      <PartialValue \n        label=\"Region\" \n        valuePath=\"region\" \n      />\n      <PartialValue \n        label=\"Creation Date\" \n        valuePath=\"CreationDate\" \n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Logging\" \n        valuePath=\"logging\" \n        renderValue={convertBoolToEnable} \n      />\n      <PartialValue \n        label=\"Default Encryption\" \n        valuePath=\"default_encryption_enabled\" \n        renderValue={convertBoolToEnable} \n      />\n      <PartialValue \n        label=\"Versioning\" \n        valuePath=\"versioning_status_enabled\"\n        errorPath=\"versioning\"\n        renderValue={convertBoolToEnable} \n      />\n      <PartialValue \n        label=\"MFA Delete\" \n        valuePath=\"version_mfa_delete_enabled\" \n        renderValue={convertBoolToEnable} \n      />\n      <PartialValue \n        label=\"Secure Transport\" \n        valuePath=\"secure_transport_enabled\" \n        renderValue={convertBoolToEnable} \n      />\n      <PartialValue \n        label=\"Static Web Hosting\" \n        valuePath=\"web_hosting_enabled\" \n        renderValue={convertBoolToEnable} \n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\nimport BucketPolicies from './BucketPolicies';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Bucket = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <BucketPolicies />\n    </Partial>\n  );\n};\n\nBucket.propTypes = propTypes;\n\nexport default Bucket;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}