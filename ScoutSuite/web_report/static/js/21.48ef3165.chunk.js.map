{"version":3,"sources":["partials/aws/redshift.regions.id.vpcs.id.clusters.id/Informations/index.js","partials/aws/redshift.regions.id.vpcs.id.clusters.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","formatDate","value","map","group","i","ParameterGroupName","Clusters","props","data","vpcGroups","get","clusterGroups","title","Address","Port","isEmtpy","VpcSecurityGroupId","Status","ClusterSecurityGroupName","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/21.48ef3165.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial/index';\nimport { formatDate } from '../../../../utils/Partials';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue \n        label=\"ARN\" \n        valuePath=\"arn\" \n      />\n      <PartialValue \n        label=\"Node Type\" \n        valuePath=\"NodeType\" \n      />\n      <PartialValue \n        label=\"Allow Version Upgrade\" \n        valuePath=\"AllowVersionUpgrade\" \n      />\n      <PartialValue \n        label=\"Automated Snapshot Retention Period\" \n        valuePath=\"AutomatedSnapshotRetentionPeriod\"\n      />\n      <PartialValue \n        label=\"Creation Time\" \n        valuePath=\"ClusterCreateTime\" \n        renderValue={formatDate}\n      />\n      <PartialValue \n        label=\"Availability Zone\" \n        valuePath=\"AvailabilityZone\"\n      />\n      <PartialValue \n        label=\"Encrypted\" \n        valuePath=\"Encrypted\"\n      />\n      <PartialValue \n        label=\"Cluster Parameter Groups\" \n        valuePath=\"ClusterParameterGroups\" \n        renderValue={value => (\n          <ul>\n            {value.map((group, i) => (\n              <li key={i}>\n                {group.ParameterGroupName}\n              </li>\n            ))}\n          </ul>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmtpy from 'lodash/isEmpty';\n\nimport { partialDataShape, } from '../../../utils/Partials';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Clusters = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const vpcGroups = get(data, ['item', 'VpcSecurityGroups']);\n  const clusterGroups = get(data, ['item', 'ClusterSecurityGroups']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Network\">\n          <div>\n            <PartialValue \n              label=\"Endpoint\"\n              valuePath=\"Endpoint\"\n              renderValue={value => `${value.Address}:${value.Port}`}\n            />\n            <PartialValue \n              label=\"Publicly Accessible\"\n              valuePath=\"PubliclyAccessible\"\n            />\n            <PartialValue \n              label=\"VPC\"\n              valuePath=\"VpcId\"\n            />\n            <PartialValue \n              label=\"Subnet\"\n              valuePath=\"ClusterSubnetGroupName\"\n            />\n            {!(isEmtpy(vpcGroups) && isEmtpy(clusterGroups)) && (\n              <PartialValue\n                label=\"Security Groups\"\n                renderValue={() => (\n                  <>\n                    <ul>\n                      {vpcGroups.map((group, i) => (\n                        <li key={i}>\n                          {`${group.VpcSecurityGroupId} ${group.Status}`}\n                        </li>\n                      ))}\n                    </ul>\n                    <ul>\n                      {clusterGroups.map((group, i) => (\n                        <li key={i}>\n                          {`${group.ClusterSecurityGroupName} ${group.Status}`}\n                        </li>\n                      ))}\n                    </ul>\n                  </>\n                )}\n              />\n            )}\n          </div>\n        </TabPane>\n      </TabsMenu> \n    </Partial>\n  );\n};\n\nClusters.propTypes = propTypes;\n\nexport default Clusters;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}