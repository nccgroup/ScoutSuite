{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.security_groups.id/RulesList/index.js"],"names":["RulesList","ctx","useContext","PartialContext","basePath","PartialPathContext","rules","get","item","isDefault","renderIpAddresses","title","addresses","path","map","address","i","value","errorPath","renderValue","CIDRName","CIDR","className","Object","entries","protocols","name","ports","groups","port_name","port","cidrs","Ipv6Ranges","security_groups","group","GroupName","service","resource","id","GroupId","UserId","message"],"mappings":"iMAoIeA,UAzHG,WAChB,IAAMC,EAAMC,qBAAWC,KACjBC,EAAWF,qBAAWG,KACtBC,EAAQC,IAAIN,EAAIO,KAAMJ,GAEtBK,EAAsC,YAA1BF,IAAIN,EAAIO,KAAM,QAE1BE,EAAoB,SAACC,EAAOC,EAAWC,GAAnB,OACxB,yCACMF,EADN,KAEE,6BACGC,EAAUE,KAAI,SAACC,EAASC,GAAV,OACb,6BACE,cAAC,IAAD,CACEC,MAAOF,EACPG,UAAS,UAAKL,EAAL,kBAAmBG,EAAnB,SACTG,YAAa,SAAAF,GAAK,OAChBA,EAAMG,SAAN,UACOH,EAAMI,KADb,aACsBJ,EAAMG,SAD5B,KAEIH,EAAMI,SAPPL,YA8CjB,OACE,qCACE,oBAAIM,UAAU,aAAd,SACGC,OAAOC,QAAQlB,EAAMmB,WAAWX,KAAI,WAAoBE,GAApB,uBAAEU,EAAF,KAAUC,EAAV,KAAUA,MAAV,OACnC,gCACE,6BAAKD,IACL,6BACE,wCAEE,6BACGH,OAAOC,QAAQG,GAAOb,KAAI,WAAoBE,GAApB,IAxCbY,EAAQf,EAwCK,mBAAEgB,EAAF,KAAaC,EAAb,YACzB,gCACE,6BACE,cAAC,IAAD,CACEb,MAAOY,EACPX,UAAS,oBAAeQ,EAAf,kBAA6BG,OAG1C,+BACGC,EAAKC,OACJrB,EACE,cACAoB,EAAKC,MAFU,oBAGFL,EAHE,kBAGYG,IAG9BC,EAAKE,YACJtB,EACE,iBACAoB,EAAKE,WAFU,oBAGFN,EAHE,kBAGYG,IAG9BC,EAAKG,kBA/DEL,EAiEJE,EAAKG,gBAjEOpB,EAgEM,oBAELa,EAFK,kBAESG,GAjEnD,sDAEE,6BACGD,EAAOd,KAAI,SAACoB,EAAOlB,GAAR,OACV,6BACE,cAAC,IAAD,CACEC,MAAOiB,EACPhB,UAAS,UAAKL,EAAL,kCAAmCG,GAC5CG,YAAa,SAAAF,GAAK,OAChBA,EAAMkB,UAEF,2CACMlB,EAAMkB,UADZ,MAEE,cAAC,IAAD,CACEC,QAAQ,MACRC,SAAS,kBACTC,GAAIrB,EAAMsB,UAEX,OATP,UAWStB,EAAMsB,QAXf,6BAW2CtB,EAAMuB,OAXjD,SALGxB,iBAoCWA,eAPVA,QA4CbP,GACC,cAAC,IAAD,CACES,UAAU,qBACVC,YAAa,kBACX,cAAC,IAAD,CACEG,UAAU,8BACVmB,QAAQ,0D","file":"static/js/95.231965aa.chunk.js","sourcesContent":["import React, { useContext }  from 'react';\nimport get from 'lodash/get';\n\nimport { PartialContext, PartialPathContext } from '../../../../components/Partial/context';\nimport { PartialValue } from '../../../../components/Partial';\nimport ResourceLink from '../../../../components/ResourceLink';\nimport WarningMessage from '../../../../components/WarningMessage';\n\nimport './style.scss';\n\n\nconst RulesList = () => {\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const rules = get(ctx.item, basePath);\n\n  const isDefault = get(ctx.item, 'name') === 'default';\n\n  const renderIpAddresses = (title, addresses, path) => (\n    <li>\n      {`${title}:`}\n      <ul>\n        {addresses.map((address, i) => (\n          <li key={i}>\n            <PartialValue\n              value={address}\n              errorPath={`${path}.cidrs.${i}.CIDR`}\n              renderValue={value =>\n                value.CIDRName \n                  ? `${value.CIDR} (${value.CIDRName})`\n                  : value.CIDR\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const renderSecurityGroups = (groups, path) => (\n    <li>\n      EC2 security groups:\n      <ul>\n        {groups.map((group, i) => (\n          <li key={i}>\n            <PartialValue\n              value={group}\n              errorPath={`${path}.cidrs.security_groups.${i}`}\n              renderValue={value =>\n                value.GroupName\n                  ? (\n                    <span>\n                      {`${value.GroupName} (`}\n                      <ResourceLink \n                        service=\"ec2\"\n                        resource=\"security_groups\"\n                        id={value.GroupId}\n                      />\n                      {')'}\n                    </span>\n                  ) : `${value.GroupId} (AWS Account ID: ${value.UserId})`\n              }\n            />\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <>\n      <ul className=\"rules-list\">\n        {Object.entries(rules.protocols).map(([name, { ports }], i) => (\n          <div key={i}>\n            <li>{name}</li>\n            <ul>\n              <li>\n                Ports:\n                <ul>\n                  {Object.entries(ports).map(([port_name, port], i) => (\n                    <div key={i}>\n                      <li>\n                        <PartialValue\n                          value={port_name}\n                          errorPath={`protocols.${name}.ports.${port_name}`}\n                        />\n                      </li>\n                      <ul>\n                        {port.cidrs && (\n                          renderIpAddresses(\n                            'IP adresses',\n                            port.cidrs, \n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.Ipv6Ranges && (\n                          renderIpAddresses(\n                            'IPv6 addresses',\n                            port.Ipv6Ranges,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                        {port.security_groups && (\n                          renderSecurityGroups(\n                            port.security_groups,\n                            `protocols.${name}.ports.${port_name}`,\n                          )\n                        )}\n                      </ul>\n                    </div>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </ul>\n      {isDefault && (\n        <PartialValue\n          errorPath=\"default_with_rules\"\n          renderValue={() => (\n            <WarningMessage\n              className=\"rules-list__warning-message\"\n              message=\"Default security groups should have no rules.\"\n            />\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RulesList;\n"],"sourceRoot":""}