{"version":3,"sources":["partials/aws/elb.regions.id.vpcs.id.elbs.id/Informations/index.js","partials/aws/elb.regions.id.vpcs.id.elbs.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Informations","label","valuePath","renderValue","value","map","zone","i","ELBs","props","data","path","get","useAPI","getRawEndpoint","replace","vpc","loading","isEmpty","item","arn","name","id","listeners","attributes","securityGroups","instances","subnets","tags","title","Object","entries","port","listener","errorPath","SslPolicy","Protocol","renderAttributes","attribute","join","isObject","isArray","x","Value","Key","key","disabled","renderResourcesAsList","renderAwsTags","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","service","finding","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","size","startIcon","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper","PartialTabPane","isSelected","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/23.ec9923de.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PartialValue } from '../../../../components/Partial';\n\n\nconst Informations = () => {\n  return (\n    <>\n      <PartialValue\n        label=\"ARN\"\n        valuePath=\"arn\"\n      />\n      <PartialValue\n        label=\"VPC\"\n        valuePath=\"vpc\"\n      />\n      <PartialValue\n        label=\"DNS\"\n        valuePath=\"DNSName\"\n      />\n      <PartialValue\n        label=\"Scheme\"\n        valuePath=\"Scheme\"\n      />\n      <PartialValue\n        label=\"Availability zones\"\n        valuePath=\"AvailabilityZones\"\n        renderValue={value => (\n          <ul>\n            {value.map((zone, i) => (\n              <li key={i}>{zone}</li>\n            ))}\n          </ul>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\n\nimport { useAPI } from '../../../api/useAPI';\nimport { getRawEndpoint } from '../../../api/paths';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { \n  partialDataShape,\n  renderResourcesAsList,\n  renderAwsTags,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport Informations from './Informations';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst ELBs = props => {\n  const { data } = props;\n\n  const path = get(data, ['item', 'path'], '');\n  const { data: vpc, loading } = useAPI(getRawEndpoint(path.replace(/\\.elbs.*/, '')));\n\n  if (!data || loading) return null;\n\n  if (!isEmpty(vpc)) {\n    data.item.arn = vpc.arn;\n    data.item.vpc = `${vpc.name} (${vpc.id})`;\n  }\n\n  const listeners = get(data, ['item', 'listeners']);\n  const attributes = get(data, ['item', 'attributes']);\n  const securityGroups = get(data, ['item', 'security_groups'], {});\n  const instances = get(data, ['item', 'instances'], []);\n  const subnets = get(data, ['item', 'Subnets'], []);\n  const tags = get(data, ['item', 'tags'], []);\n\n  const renderAttributes = (attribute, path = []) => {\n    const label = path.join('.');\n    if (!isObject(attribute)) {\n      return (\n        <li key={label}>\n          <PartialValue\n            label={label}\n            value={attribute}\n            errorPath={`attributes.${label}`}\n          />\n        </li>\n      );\n    }\n  \n    if (isArray(attribute)) {\n      return (\n        <li>\n          <PartialValue\n            label={label}\n            value={attribute}\n            renderValue={value => value.map((x, i) => (\n              <ul key={i}>\n                {renderAttributes(x.Value, [x.Key])}\n              </ul>\n            ))}\n          />\n        </li>\n      ); \n    }\n  \n    return Object.entries(attribute).map(([key, value]) => (\n      renderAttributes(value, [...path, key])\n    ));\n  };\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <Informations />\n      </InformationsWrapper>\n\n      <div>\n        <TabsMenu>\n          <TabPane title=\"Listeners\">\n            <ul>\n              {Object.entries(listeners).map(([port, listener], i) => (\n                <li key={i}>\n                  <PartialValue\n                    value={{\n                      port,\n                      ...listener,\n                    }}\n                    errorPath={`listeners.${port}`}\n                    renderValue={value => value.SslPolicy ? (\n                      <>\n                        {`${value.port} (${value.Protocol}, `}\n                        <PartialValue\n                          value={value.SslPolicy}\n                          errorPath={`listeners.${value.port}.SslPolicy`}\n                        />\n                        {')'}\n                      </>\n                    ) : (\n                      `${value.port} (${value.Protocol})`\n                    )}\n                  />\n                </li>\n              ))}\n            </ul>\n          </TabPane>\n          <TabPane title=\"Attributes\">\n            <ul>\n              {renderAttributes(attributes)}\n            </ul>\n          </TabPane>\n          <TabPane\n            title=\"Security Groups\"\n            disabled={isEmpty(securityGroups)}\n          >\n            {renderResourcesAsList(securityGroups, 'GroupId')}\n          </TabPane>\n          <TabPane\n            title=\"Destination\"\n            disabled={isEmpty(instances) && isEmpty(subnets)}\n          >\n            <div>\n              {!isEmpty(instances) && (\n                <>\n                  <h5>Instances</h5>\n                  {renderResourcesAsList(instances)}\n                </>\n              )}\n              {!isEmpty(subnets) && (\n                <>\n                  <h5>Subnets</h5>\n                  {renderResourcesAsList(subnets)}\n                </>\n              )}\n            </div>\n          </TabPane>\n          {!isEmpty(tags) && (\n            <TabPane title=\"Tags\">\n              {renderAwsTags(tags)}\n            </TabPane>\n          )}\n        </TabsMenu>\n      </div>\n    </Partial>\n  );\n};\n\nELBs.propTypes = propTypes;\n\nexport default ELBs;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}