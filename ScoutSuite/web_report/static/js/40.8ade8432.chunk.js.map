{"version":3,"sources":["partials/azure/storageaccounts.subscriptions.id.storage_accounts.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Bucket","props","data","blob_containers","get","blob_services","label","valuePath","renderValue","convertBoolToEnable","convertValueOrNever","convertListToChips","title","isEmpty","Object","values","map","value","id","renderBlobContainer","name","renderBlobService","defaultValues","path_to_issue","item","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","path","children","basePath","useContext","Provider","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"8MA+HeA,UAjFA,SAACC,GAAW,IACjBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAGlB,IAAMC,EAAkBC,IAAIF,EAAM,CAAC,OAAQ,oBACrCG,EAAgBD,IAAIF,EAAM,CAAC,OAAQ,kBAEzC,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,MAAM,uBACNC,UAAU,SAEZ,cAAC,IAAD,CACED,MAAM,iBACNC,UAAU,yBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,iBACNC,UAAU,wBACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,6BACNC,UAAU,qCACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,2BACNC,UAAU,sBACVC,YAAaE,MAEf,cAAC,IAAD,CACEJ,MAAM,8CACNC,UAAU,kCACVC,YAAaC,MAEf,cAAC,IAAD,CACEH,MAAM,OACNC,UAAU,OACVC,YAAaG,MAEf,cAAC,IAAD,CACEL,MAAM,iBACNC,UAAU,sBACVC,YAAaE,SAIjB,eAAC,IAAD,WACE,cAAC,IAAD,CAASE,MAAM,kBAAf,SACIC,IAAQV,GAMR,wCALA,6BACGW,OAAOC,OAAOZ,GAAiBa,KAAI,SAACC,GAAD,OAlFtB,SAAAf,GAC1B,OAAQ,+BACN,6BAAKA,EAAKgB,KACV,6BACE,cAAC,IAAD,CACEZ,MAAM,wBACNC,UAAS,wBAAmBL,EAAKgB,GAAxB,0BACTV,YAAaC,UANFP,EAAKgB,IAkFRC,CAAoBF,UAM5B,cAAC,IAAD,CAASL,MAAM,gBAAf,SACIC,IAAQR,GAMR,wCALA,6BACGS,OAAOC,OAAOV,GAAeW,KAAI,SAACC,GAAD,OAhFtB,SAAAf,GACxB,OAAQ,+BACN,6BAAKA,EAAKkB,OACV,6BACE,cAAC,IAAD,CACEd,MAAM,cACNC,UAAS,wBAAmBL,EAAKgB,GAAxB,wBACTV,YAAaC,UANFP,EAAKgB,IA+EmCG,CAAkBJ,kB,iCCjH7E,0HAEMK,EAAgB,CACpBC,cAAe,GACfC,KAAM,IAGKC,EAAiBC,IAAMC,cAAcL,GACrCM,EAAqBF,IAAMC,cAAc,IACzCE,EAAoBH,IAAMC,eAAc,gB,oECgBtCG,IAdQ,SAAC7B,GAAW,IACzB8B,EAAmB9B,EAAnB8B,KAAMC,EAAa/B,EAAb+B,SAERC,EAAWC,qBAAWN,KAE5B,OACE,cAAC,IAAmBO,SAApB,CAA6BlB,MAAOmB,YAAYH,EAAUF,GAA1D,SACGC,M,uNC6DQK,EA9DM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASR,EAAW,EAAXA,KAAW,EAK/CG,qBAAWM,KAHbC,EAFiD,EAEjDA,WACAC,EAHiD,EAGjDA,aACAC,EAJiD,EAIjDA,gBAGMC,EAAoBC,cAApBD,gBA8BFE,EAAQ1C,IAAIqC,EAAY,CAACH,EAASC,GAAU,IAAIQ,SAAShB,GAE/D,OACE,cAACiB,EAAA,EAAD,CACEpC,MACEkC,EACI,sCACA,iCAENG,UAAU,MACVC,OAAK,EAPP,SASE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAU,gBACVC,QAASR,EA7BA,WACbH,EAAgBL,EAASC,EAASR,GAClCa,EACE,qBACA,CACEW,QAAS,QACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAtBR,WACVhB,EAAaJ,EAASC,EAASR,GAC/Ba,EACE,0DACA,CACEW,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,YAgChB,SAKGZ,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,S,QCpB5Ba,EAAe,SAAA1D,GAAU,IA4BzB2D,EA1BFtD,EAUEL,EAVFK,MACAuD,EASE5D,EATF4D,UACAtD,EAQEN,EARFM,UACAuD,EAOE7D,EAPF6D,UACAT,EAMEpD,EANFoD,UACAU,EAKE9D,EALF8D,OACAC,EAIE/D,EAJF+D,QACAC,EAGEhE,EAHFgE,aACAzD,EAEEP,EAFFO,YACA0D,EACEjE,EADFiE,kBAGIC,EAASC,cACTC,EAAMnC,qBAAWT,KACjBQ,EAAWC,qBAAWN,KACtB0C,EAAgBpC,qBAAWL,KAE3B0C,EAAgBnC,YAAY8B,GAAqBjC,EAAU1B,GAC7DU,EAAQT,EACVP,EAAMgB,OAASb,IAAIiE,EAAI7C,KAAM+C,EAAetE,EAAMgB,SAG/B,mBAAVA,IACTA,EAAQuD,OAAOvD,IAIb6C,GAEFF,GADca,IAAQX,GAAaA,EAAY,CAACA,IACzB9C,KAAI,SAAAe,GAAI,OAC7BK,YAAY8B,GAAqBjC,EAAUF,MAG7C6B,EAAiB,CAACW,GAGpB,IAAMG,EAAWd,EAAee,MAAK,SAAA5C,GAAI,OACvCsC,EAAIO,eAAe7B,SAAShB,MAExB8C,EAAQR,EAAIQ,MAQlB,GANAC,qBAAU,WACJJ,GACFJ,EAAcO,KAEf,CAACA,SAEUE,IAAV9D,GAAiC,OAAVA,EACzB,OAAO,KAGT,IAAM+D,EACJ,cAAC,EAAD,CACE1C,QAAS6B,EAAO7B,QAASC,QAAS4B,EAAO5B,QACzCR,KAAI,UAAKsC,EAAItC,KAAT,YAAiB6B,EAAe,MAGlCqB,EACJ,uBAAM5B,UAAW6B,IAAGR,GAAYQ,IAAG,QAASL,IAA5C,UACG5D,EACAyD,GAAYM,KAIjB,OACE,cAACG,EAAA,EAAD,CACE9B,UAAW6B,IAAG7B,EAAW,gBAAiB,CAAEU,WAC5CzD,MAAOA,EACPuD,UAAWA,EACX5C,MACE+C,EACE,cAAChB,EAAA,EAAD,yBAASpC,MAAOK,GAAWgD,GAA3B,aACGgB,KAGHA,KAQVtB,EAAayB,aApGQ,CACnB9E,MAAO,GACPuD,UAAW,KACX5C,MAAO,KACPV,UAAW,KACXuD,UAAW,KACXC,QAAQ,EACRC,SAAS,EACTC,aAAc,CACZoB,WAAY,IACZpC,UAAW,aAEbzC,YAAa,SAAAS,GAAK,OAAIA,IA0FT0C,O,sKCjHA2B,G,MAdQ,SAACrF,GAAW,IACzBC,EAAmBD,EAAnBC,KAAM8B,EAAa/B,EAAb+B,SAId,OAFAuD,QAAQC,KAAK,eAAgBtF,GAG3B,cAAC,IAAeiC,SAAhB,CAAyBlB,MAAOf,EAAhC,SACG8B,M,0EChBP,IAAIyD,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtC5E,OAAO8E,eAAeC,EAAS,aAAc,CAC3C5E,OAAO,IAET4E,EAAQC,aAAU,EAElB,IAAIpE,EAAQiE,EAAwBD,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,KAElBI,SAAuBpE,EAAMsE,cAAc,OAAQ,CACnFC,EAAG,sBACD,UAEJJ,EAAQC,QAAUC,G,wDCKHG,IAda,SAAAjG,GAAU,IAC5B+B,EAAa/B,EAAb+B,SAER,OACE,sBAAKqB,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCrB,O,iMCyCQmE,G,OAtCQ,SAAClG,GAAW,IAE/BW,EAKEX,EALFW,MACAwF,EAIEnG,EAJFmG,WACAC,EAGEpG,EAHFoG,SACA/C,EAEErD,EAFFqD,QACAtB,EACE/B,EADF+B,SAN8B,EASIsE,mBAAS,IATb,mBASzBC,EATyB,KASbjC,EATa,KAW1BkC,EAAgBD,EAElB,qCACG3F,EACA6F,IAAWF,GAAYG,QAG1B9F,EAGJ,OACE,cAAC,IAAkBuB,SAAnB,CAA4BlB,MAAOqD,EAAnC,SACE,cAAC,IAAD,CACE1D,MAAO4F,EACPnD,UAAW6B,IAAG,mBAAoBqB,GAClCH,WAAYA,EACZC,SAAUA,EACV/C,QAASA,EALX,SAOGtB,S","file":"static/js/40.8ade8432.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nimport { Partial } from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport PartialValue from '../../../components/Partial/PartialValue/index';\nimport {\n  convertBoolToEnable,\n  convertValueOrNever,\n  convertListToChips,\n} from '../../../utils/Partials/index';\nimport { TabPane, TabsMenu } from '../../../components/Partial/PartialTabs';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst renderBlobContainer = data => {\n  return (<li key={data.id}>\n    <h2>{data.id}</h2>\n    <ul>\n      <PartialValue\n        label=\"Public Access Allowed\"\n        valuePath={`blob_services.${data.id}.public_access_allowed`}\n        renderValue={convertBoolToEnable}\n      />\n    </ul>\n  </li>);\n};\nconst renderBlobService = data => {\n  return (<li key={data.id}>\n    <h2>{data.name}</h2>\n    <ul>\n      <PartialValue\n        label=\"Soft Delete\"\n        valuePath={`blob_services.${data.id}.soft_delete_enabled`}\n        renderValue={convertBoolToEnable}\n      />\n    </ul>\n  </li>);\n};\n\nconst Bucket = (props) => {\n  const { data } = props;\n\n  if (!data) return null;\n\n\n  const blob_containers = get(data, ['item', 'blob_containers']);\n  const blob_services = get(data, ['item', 'blob_services']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"Storage Account Name\"\n          valuePath=\"name\"\n        />\n        <PartialValue\n          label=\"Public Traffic\"\n          valuePath=\"public_traffic_allowed\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"HTTPS Required\"\n          valuePath=\"https_traffic_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Microsoft Trusted Services\"\n          valuePath=\"trusted_microsoft_services_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Last Access Key Rotation\"\n          valuePath=\"access_keys_rotated\"\n          renderValue={convertValueOrNever}\n        />\n        <PartialValue\n          label=\"Storage encrypted with Customer Managed Key\"\n          valuePath=\"encryption_key_customer_managed\"\n          renderValue={convertBoolToEnable}\n        />\n        <PartialValue\n          label=\"Tags\"\n          valuePath=\"tags\"\n          renderValue={convertListToChips}\n        />\n        <PartialValue\n          label=\"Resource group\"\n          valuePath=\"resource_group_name\"\n          renderValue={convertValueOrNever}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Blob Containers\">\n          {!isEmpty(blob_containers) ? (\n            <ul>\n              {Object.values(blob_containers).map((value) =>\n                renderBlobContainer(value)\n              )}</ul>\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n        <TabPane title=\"Blob Services\">\n          {!isEmpty(blob_services) ? (\n            <ul>\n              {Object.values(blob_services).map((value) => renderBlobService(value)\n              )}\n            </ul>\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial >\n  );\n};\n\nBucket.propTypes = propTypes;\n\nexport default Bucket;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}