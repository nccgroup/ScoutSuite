{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.instances.id/NetworkInterfaces/index.js"],"names":["NetworkInterfaces","props","interfaces","Object","entries","map","i","id","value","Description","label","Association","PublicIp","PublicDnsName","Attachment","InstanceId","isEmpty","Ipv6Addresses","address","Ipv6Address","PrivateIpAddresses","Primary","PrivateIpAddress","Groups","renderResourcesAsList"],"mappings":"2KA0FeA,UA9EW,SAAAC,GAAU,IAC1BC,EAAeD,EAAfC,WAER,OACEC,OAAOC,QAAQF,GAAYG,KAAI,WAAcC,GAAd,uBAAEC,EAAF,KAAMC,EAAN,YAC7B,gCACE,6BAAKD,IACL,+BACGC,EAAMC,aACL,6BACE,cAAC,IAAD,CACEC,MAAM,cACNF,MAAOA,EAAMC,gBAIlBD,EAAMG,aACL,qCACE,6BACE,cAAC,IAAD,CACED,MAAM,YACNF,MAAOA,EAAMG,YAAYC,aAG7B,6BACE,cAAC,IAAD,CACEF,MAAM,aACNF,MAAOA,EAAMG,YAAYE,qBAKhCL,EAAMM,YACL,6BACE,cAAC,IAAD,CACEJ,MAAM,uBACNF,MAAOA,EAAMM,WAAWC,gBAI5BC,IAAQR,EAAMS,gBACd,qCACE,iDACA,6BACGT,EAAMS,cAAcZ,KAAI,SAACa,EAASZ,GAAV,OACvB,6BACGY,EAAQC,aADFb,WAOhBE,EAAMY,mBAAmBf,KAAI,SAACa,EAASZ,GAAV,OAC5B,6BACE,cAAC,IAAD,CACEI,MAAOQ,EAAQG,QACb,qBAAuB,aAEzBb,MAAOU,EAAQI,oBALVhB,OASTU,IAAQR,EAAMe,SACd,6BACE,cAAC,IAAD,CACEb,MAAM,kBACNF,MAAOgB,YAAsBhB,EAAMe,OAAQ,sBA7D3CjB","file":"static/js/110.6edc2368.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { renderResourcesAsList } from '../../../../utils/Partials';\nimport DetailedValue from '../../../../components/DetailedValue';\n\n\nconst propTypes = {\n  interfaces: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { interfaces } = props;\n\n  return (\n    Object.entries(interfaces).map(([id, value], i) => (\n      <div key={i}>\n        <h5>{id}</h5>\n        <ul>\n          {value.Description && (\n            <li>\n              <DetailedValue\n                label=\"Description\"\n                value={value.Description}\n              />\n            </li>\n          )}\n          {value.Association && (\n            <>\n              <li>\n                <DetailedValue\n                  label=\"Public IP\"\n                  value={value.Association.PublicIp}\n                />\n              </li>\n              <li>\n                <DetailedValue\n                  label=\"Public DNS\"\n                  value={value.Association.PublicDnsName}\n                />\n              </li>\n            </>\n          )}\n          {value.Attachment && (\n            <li>\n              <DetailedValue\n                label=\"Attached to Instance\"\n                value={value.Attachment.InstanceId}\n              />\n            </li>\n          )}\n          {!isEmpty(value.Ipv6Addresses) && (\n            <>\n              <li>IPv6 Addresses:</li>\n              <ul>\n                {value.Ipv6Addresses.map((address, i) => (\n                  <li key={i}>\n                    {address.Ipv6Address}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          {value.PrivateIpAddresses.map((address, i) => (\n            <li key={i}>\n              <DetailedValue\n                label={address.Primary ? \n                  'Primary Private IP' : 'Private IP'\n                }\n                value={address.PrivateIpAddress}\n              />\n            </li>\n          ))}\n          {!isEmpty(value.Groups) && (\n            <li>\n              <DetailedValue\n                label=\"Security Groups\"\n                value={renderResourcesAsList(value.Groups, 'GroupName')}\n              />\n            </li>\n          )}\n        </ul>\n      </div>\n    ))\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n"],"sourceRoot":""}