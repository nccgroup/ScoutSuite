{"version":3,"sources":["partials/azure/aad.applications.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderPasswordCredentials","item","label","value","keyId","startDateTime","renderValue","formatDate","endDateTime","id","Applications","props","data","valuePath","valueOrNone","convertBoolToYesOrNo","title","values","renderList","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"kKAcMA,EAA4B,SAAAC,GAChC,OACE,+BACE,cAAC,IAAD,CAAcC,MAAM,KAAKC,MAAOF,EAAKG,QACrC,+BACE,6BACE,cAAC,IAAD,CACEF,MAAM,aACNC,MAAOF,EAAKI,cACZC,YAAaC,QAGjB,6BACE,cAAC,IAAD,CACEL,MAAM,WACNC,MAAOF,EAAKO,YACZF,YAAaC,aAdZN,EAAKQ,KAyHHC,UA/FM,SAAAC,GAAU,IACrBC,EAASD,EAATC,KAER,OAAKA,EAGH,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEV,MAAM,KAAKW,UAAU,KACrBP,YAAaQ,MAEf,cAAC,IAAD,CACEZ,MAAM,SACNW,UAAU,SACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,OACNW,UAAU,cACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,mBACNW,UAAU,mBACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,mBACNW,UAAU,mBACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,6BACNW,UAAU,6BACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,uBACNW,UAAU,uBACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,0BACNW,UAAU,0BACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,gBACNW,UAAU,gBACVP,YAAaS,MAGf,cAAC,IAAD,CACEb,MAAM,6BACNW,UAAU,gCACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,8BACNW,UAAU,8BACVP,YAAaQ,MAGf,cAAC,IAAD,CACEZ,MAAM,qBACNW,UAAU,qBACVP,YAAaQ,SAIjB,cAAC,IAAD,UACE,cAAC,IAAD,CAASE,MAAM,uBAAf,SACE,cAAC,IAAD,CACEH,UAAU,uBACVP,YAAa,SAAAW,GAAM,OACjBC,YAAWD,EAAQ,GAAIjB,aAjFjB,O,wDCrBLmB,IAda,SAAAR,GAAU,IAC5BS,EAAaT,EAAbS,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACX,GAAW,IAE/BK,EAKEL,EALFK,MACAO,EAIEZ,EAJFY,WACAC,EAGEb,EAHFa,SACAC,EAEEd,EAFFc,QACAL,EACET,EADFS,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGX,EACAc,IAAWH,GAAYI,QAG1Bf,EAGJ,OACE,cAAC,IAAkBgB,SAAnB,CAA4B7B,MAAOyB,EAAnC,SACE,cAAC,IAAD,CACEZ,MAAOa,EACPR,UAAWY,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/43.09c262b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  formatDate,\n  partialDataShape,\n  valueOrNone,\n  renderList,\n  convertBoolToYesOrNo,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\n\nconst renderPasswordCredentials = item => {\n  return (\n    <li key={item.id}>\n      <PartialValue label=\"ID\" value={item.keyId} />\n      <ul>\n        <li>\n          <PartialValue\n            label=\"Start Date\"\n            value={item.startDateTime}\n            renderValue={formatDate}\n          />\n        </li>\n        <li>\n          <PartialValue\n            label=\"End Date\"\n            value={item.endDateTime}\n            renderValue={formatDate}\n          />\n        </li>\n      </ul>\n    </li>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Applications = props => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\" valuePath=\"id\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"App ID\"\n          valuePath=\"app_id\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Type\"\n          valuePath=\"object_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Sign In Audience\"\n          valuePath=\"sign_in_audience\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Publisher Domain\"\n          valuePath=\"publisher_domain\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Available To Other Tenants\"\n          valuePath=\"available_to_other_tenants\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Allow Guests Sign-In\"\n          valuePath=\"allow_guests_sign_in\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Allow Passthrough Users\"\n          valuePath=\"allow_passthrough_users\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Public Client\"\n          valuePath=\"public_client\"\n          renderValue={convertBoolToYesOrNo}\n        />\n\n        <PartialValue\n          label=\"Device-Only Auth Supported\"\n          valuePath=\"is_device_only_auth_supported\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Pre-Authorized Applications\"\n          valuePath=\"pre_authorized_applications\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Deletion Timestamp\"\n          valuePath=\"deletion_timestamp\"\n          renderValue={valueOrNone}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Password Credentials\">\n          <PartialValue\n            valuePath=\"password_credentials\"\n            renderValue={values =>\n              renderList(values, '', renderPasswordCredentials)\n            }\n          />\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nApplications.propTypes = propTypes;\n\nexport default Applications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}