{"version":3,"sources":["partials/azure/postgresqldatabase.subscriptions.id.servers.id/index.js","components/Partial/context.js","components/Partial/PartialSection/index.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/Wrapper/index.js","../node_modules/@material-ui/icons/Remove.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["Servers","props","rules","serverKey","data","item","get","label","valuePath","errorPath","title","Object","entries","postgresql_firewall_rules","id","length","map","key","rule","baseErrorPath","path","name","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","PartialSection","children","basePath","useContext","Provider","value","concatPaths","AddException","service","finding","ExceptionsContext","exceptions","addException","removeException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","IconButton","size","className","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","inline","tooltip","tooltipProps","renderValue","basePathOverwrite","params","useParams","ctx","setIssueLevel","fullValuePath","String","isArray","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialWrapper","console","info","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","InformationsWrapper","PartialTabPane","isSelected","disabled","useState","issueLevel","renderedTitle","SEVERITIES","icon"],"mappings":"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","file":"static/js/38.07134859.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport {\n  Partial,\n  PartialSection,\n  PartialValue,\n} from '../../../components/Partial';\nimport { partialDataShape } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\n\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\nconst renderFirewallRules = (rules, serverKey) => {\n  if (!rules || !rules.length) return <span>None</span>;\n\n  return rules.map(([key, rule]) => {\n    const baseErrorPath = `postgresqldatabase.servers.${serverKey}.postgresql_firewall_rules.${key}`;\n\n    return (\n      <PartialSection path={`postgresql_firewall_rules.${key}`} key={rule.id}>\n        <li>\n          <b>{rule.name}</b>\n          <PartialValue\n            label=\"Firewall rule start IP\"\n            valuePath=\"start_ip\"\n            baseErrorPath={baseErrorPath}\n          />\n\n          <PartialValue\n            label=\"Firewall rule end IP\"\n            valuePath=\"end_ip\"\n            baseErrorPath={baseErrorPath}\n          />\n\n        </li>\n      </PartialSection>\n    );\n  });\n};\n\nconst Servers = props => {\n\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"PostgreSQL Server Name\"\n          valuePath=\"name\" />\n        <PartialValue\n          label=\"Server SSL connection enforcement\"\n          valuePath=\"ssl_enforcement\" />\n        <PartialValue\n          label=\"Log checkpoint server parameter\"\n          valuePath=\"name\" />\n        <PartialValue\n          label=\"PostgreSQL Server Name\"\n          valuePath=\"log_checkpoints.value\"\n          errorPath=\"server_log_checkpoints_value\" />\n        <PartialValue\n          label=\"Log connections server parameter\"\n          valuePath=\"log_connections.value\"\n          errorPath=\"server_log_connections_value\" />\n        <PartialValue\n          label=\"Log disconnections server parameter\"\n          valuePath=\"log_disconnections.value\"\n          errorPath=\"server_log_disconnections_value\" />\n        <PartialValue\n          label=\"Log duration server parameter\"\n          valuePath=\"log_duration.value\"\n          errorPath=\"server_log_duration_value\" />\n        <PartialValue\n          label=\"Connection throttling server parameter\"\n          valuePath=\"connection_throttling.value\"\n          errorPath=\"server_connection_throttling_value\" />\n        <PartialValue\n          label=\"Log retention days server parameter\"\n          valuePath=\"log_retention_days.value\"\n          errorPath=\"server_log_retention_days_value\" />\n\n\n      </InformationsWrapper>\n      <TabsMenu>\n        <TabPane title=\"Firewall Rules\">\n          <ul>\n            {renderFirewallRules(Object.entries(item.postgresql_firewall_rules), item.id)}\n          </ul>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nServers.propTypes = propTypes;\n\nexport default Servers;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React, { useContext } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { \n    exceptions, \n    addException,\n    removeException,\n  } = useContext(ExceptionsContext);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const remove = () => {\n    removeException(service, finding, path);\n    enqueueSnackbar(\n      'Exception removed.',\n      {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title={\n        exist \n          ? 'Remove finding from exceptions list' \n          : 'Add finding to exceptions list'\n      } \n      placement=\"top\"\n      arrow\n    >\n      <IconButton\n        size=\"small\"\n        className=\"exception-btn\"\n        onClick={exist ? remove : add}\n      >\n        {exist ? <RemoveIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}