{"version":3,"sources":["partials/gcp/computeengine.projects.id.zones.id.instances.id/index.js","components/Partial/context.js","components/Exceptions/AddButton/index.js","components/Partial/PartialValue/index.js","components/Partial/PartialSection/index.js","components/Partial/Wrapper/index.js","components/InformationsWrapper/index.js"],"names":["renderAccessScope","access_scopes","map","item","i","Instances","props","disks","network_interfaces","tags","data","get","label","valuePath","renderValue","formatDate","convertBoolToEnable","length","className","Object","entries","key","value","Array","isArray","v","title","ni","name","networkIP","service","resource","id","network_id","subnetwork_id","valueOrNone","values","disk","source_device_name","bootable","type","mode","latest_snapshot","creation_timestamp","encrypted_with_csek","defaultValues","path_to_issue","PartialContext","React","createContext","PartialPathContext","PartialTabContext","AddException","finding","path","useContext","ExceptionsContext","exceptions","addException","enqueueSnackbar","useSnackbar","exist","includes","Tooltip","placement","arrow","Button","disabled","size","startIcon","onClick","variant","anchorOrigin","vertical","horizontal","PartialValue","fullErrorPaths","separator","errorPath","inline","tooltip","tooltipProps","basePathOverwrite","params","useParams","ctx","basePath","setIssueLevel","fullValuePath","concatPaths","String","hasError","some","path_to_issues","level","useEffect","undefined","exceptionButton","content","cx","DetailedValue","defaultProps","enterDelay","PartialSection","children","Provider","PartialWrapper","console","info","InformationsWrapper"],"mappings":"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","file":"static/js/65.bfae3f0b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  formatDate,\n  convertBoolToEnable,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Tabs';\nimport { valueOrNone } from '../../../utils/Partials/index';\nimport ResourceLink from '../../../components/ResourceLink';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\n\nconst renderTags = tags => {\n  if (!tags || tags.length === 0) return <span>None</span>;\n  return (\n    <div className=\"partial-value detailed-value\">\n      <span className=\"label\">Tags</span>\n      <ul>\n        {Object.entries(tags).map(([key, value]) => (\n          <li key={key}>\n            {key}\n            <ul>\n              {value &&\n                Array.isArray(value) &&\n                value.map((v, i) => <li key={i}>{v}</li>)}\n              {value && !Array.isArray(value) && <li>{value}</li>}\n              {!value || (value.length === 0 && <li>None</li>)}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst renderNetworkInterfaces = network_interfaces => {\n  if (!network_interfaces) return <span>None</span>;\n\n  return (\n    <ul>\n      {network_interfaces.map((ni, i) => (\n        <li key={i}>\n          {ni.name}\n          <ul>\n            <li>{ni.networkIP}</li>\n            <li>\n              Network:{' '}\n              <ResourceLink\n                service=\"computeengine\"\n                resource=\"networks\"\n                id={ni.network_id}\n              />\n            </li>\n            <li>\n              Subnetwork:{' '}\n              <ResourceLink\n                service=\"computeengine\"\n                resource=\"subnetworks\"\n                id={ni.subnetwork_id}\n              />\n            </li>\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst renderAccessScope = access_scopes => {\n  if (!access_scopes) return <span>None</span>;\n  return (\n    <ul>\n      {access_scopes.map((item, i) => (\n        <li key={i}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n\nconst renderDisks = disks => {\n  if (!disks) return <span>None</span>;\n\n  return (\n    <ul>\n      {Object.values(disks).map((disk, i) => (\n        <li key={i}>\n          {disk.source_device_name}\n          <ul>\n            <li>Bootable: {disk.bootable}</li>\n            <li>Type: {disk.type}</li>\n            <li>Mode: {disk.mode}</li>\n            <li>\n              Latest snapshot: {disk.latest_snapshot ? disk.latest_snapshot.creation_timestamp : 'None'}\n            </li>\n            <li>\n              Customer Supplied Encryption:{' '}\n              <span>{valueOrNone(disk.encrypted_with_csek)}</span>\n            </li>\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst Instances = props => {\n  const { data } = props;\n  const item = get(data, ['item'], {});\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"Instance Name\" valuePath=\"name\" />\n\n        <PartialValue label=\"Project ID\" valuePath=\"project_id\" />\n\n        <PartialValue label=\"Description\" valuePath=\"description\" />\n\n        <PartialValue\n          label=\"Creation Date\"\n          valuePath=\"creation_timestamp\"\n          renderValue={formatDate}\n        />\n\n        <PartialValue label=\"Status\" valuePath=\"status\" />\n\n        <PartialValue\n          label=\"Deletion Protection\"\n          valuePath=\"deletion_protection_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Block Project SSH Keys\"\n          valuePath=\"block_project_ssh_keys_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"IP Forwarding\"\n          valuePath=\"ip_forwarding_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"OS Login\"\n          valuePath=\"oslogin_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Serial Port Connection\"\n          valuePath=\"serial_port_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        {renderTags(item.tags)}\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Network Interfaces\">\n          {renderNetworkInterfaces(item.network_interfaces)}\n        </TabPane>\n        <TabPane title=\"Identity & API Access\">\n          <div>\n            <PartialValue\n              label=\"Service Account\"\n              valuePath=\"service_account\"\n              renderValue={valueOrNone}\n            />\n\n            <PartialValue\n              label=\"Access Scopes\"\n              valuePath=\"access_scopes\"\n              renderValue={renderAccessScope}\n            />\n          </div>\n        </TabPane>\n        <TabPane title=\"Disks\">\n          <div>{renderDisks(item.disks)}</div>\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nInstances.propTypes = propTypes;\n\nexport default Instances;\n","import React from 'react';\n\nconst defaultValues = {\n  path_to_issue: [],\n  item: {}\n};\n\nexport const PartialContext = React.createContext(defaultValues);\nexport const PartialPathContext = React.createContext('');\nexport const PartialTabContext = React.createContext(() => {});\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PropTypes } from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport get from 'lodash/get';\n\nimport { ExceptionsContext } from '../context';\n\nconst propTypes = {\n  service: PropTypes.string.isRequired,\n  finding: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nconst AddException = ({ service, finding, path }) => {\n  const { exceptions, addException } = useContext(ExceptionsContext);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const add = () => {\n    addException(service, finding, path);\n    enqueueSnackbar(\n      'Exception added. Don\\'t forget to export the exceptions!',\n      {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right',\n        },\n      },\n    );\n  };\n\n  const exist = get(exceptions, [service, finding], []).includes(path);\n\n  return (\n    <Tooltip\n      title=\"Add to exception list\" placement=\"top\"\n      arrow>\n      <Button\n        disabled={exist}\n        size=\"small\"\n        startIcon={<AddIcon />}\n        className=\"exception-btn\"\n        onClick={add}\n      >\n        Add\n      </Button>\n    </Tooltip>\n  );\n};\n\nAddException.propTypes = propTypes;\n\nexport default AddException;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport cx from 'classnames';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\n\nimport {\n  PartialContext,\n  PartialPathContext,\n  PartialTabContext,\n} from '../context';\nimport { concatPaths } from '../../../utils/Partials';\nimport DetailedValue from '../../DetailedValue';\n\nimport './style.scss';\nimport AddException from '../../Exceptions/AddButton/index';\nimport { useParams } from 'react-router-dom';\n\nconst propTypes = {\n  label: PropTypes.node,\n  separator: PropTypes.string,\n  value: PropTypes.any,\n  valuePath: PropTypes.string,\n  errorPath: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  inline: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  tooltipProps: PropTypes.object,\n  renderValue: PropTypes.func,\n  basePathOverwrite: PropTypes.string,\n};\n\nconst defaultProps = {\n  label: '',\n  separator: ': ',\n  value: null,\n  valuePath: null,\n  errorPath: null,\n  inline: false,\n  tooltip: false,\n  tooltipProps: {\n    enterDelay: 1000,\n    placement: 'top-start',\n  },\n  renderValue: value => value,\n};\n\nconst PartialValue = props => {\n  const {\n    label,\n    separator,\n    valuePath,\n    errorPath,\n    className,\n    inline,\n    tooltip,\n    tooltipProps,\n    renderValue,\n    basePathOverwrite,\n  } = props;\n\n  const params = useParams();\n  const ctx = useContext(PartialContext);\n  const basePath = useContext(PartialPathContext);\n  const setIssueLevel = useContext(PartialTabContext);\n\n  const fullValuePath = concatPaths(basePathOverwrite || basePath, valuePath);\n  let value = renderValue(\n    props.value || get(ctx.item, fullValuePath, props.value),\n  );\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  let fullErrorPaths;\n  if (errorPath) {\n    const paths = isArray(errorPath) ? errorPath : [errorPath];\n    fullErrorPaths = paths.map(path =>\n      concatPaths(basePathOverwrite || basePath, path),\n    );\n  } else {\n    fullErrorPaths = [fullValuePath];\n  }\n\n  const hasError = fullErrorPaths.some(path =>\n    ctx.path_to_issues.includes(path),\n  );\n  const level = ctx.level;\n\n  useEffect(() => {\n    if (hasError) {\n      setIssueLevel(level);\n    }\n  }, [level]);\n\n  if (value === undefined || value === null) {\n    return null;\n  }\n\n  const exceptionButton = (\n    <AddException\n      service={params.service} finding={params.finding}\n      path={`${ctx.path}.${fullErrorPaths[0]}`} />\n  );\n\n  const content = (\n    <span className={cx(hasError && cx('issue', level))}>\n      {value}\n      {hasError && exceptionButton}\n    </span>\n  );\n\n  return (\n    <DetailedValue\n      className={cx(className, 'partial-value', { inline })}\n      label={label}\n      separator={separator}\n      value={\n        tooltip ? (\n          <Tooltip title={value} {...tooltipProps}>\n            {content}\n          </Tooltip>\n        ) : (\n          content\n        )\n      }\n    />\n  );\n};\n\nPartialValue.propTypes = propTypes;\nPartialValue.defaultProps = defaultProps;\n\nexport default PartialValue;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialPathContext } from '../context';\nimport { concatPaths } from '../../../utils/Partials';\n\nconst propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialSection = (props) => {\n  const { path, children } = props;\n\n  const basePath = useContext(PartialPathContext);\n\n  return (\n    <PartialPathContext.Provider value={concatPaths(basePath, path)}>\n      {children}\n    </PartialPathContext.Provider>\n  );\n};\n\nPartialSection.propTypes = propTypes;\n\nexport default PartialSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PartialContext } from '../context';\nimport { partialDataShape } from '../../../utils/Partials';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PartialWrapper = (props) => {\n  const { data, children } = props;\n\n  console.info('PARTIAL DATA', data);\n\n  return (\n    <PartialContext.Provider value={data}>\n      {children}\n    </PartialContext.Provider>\n  );\n};\n\nPartialWrapper.propTypes = propTypes;\n\nexport default PartialWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n"],"sourceRoot":""}