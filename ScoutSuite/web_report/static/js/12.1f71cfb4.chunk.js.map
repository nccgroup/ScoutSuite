{"version":3,"sources":["partials/azure/rbac.subscriptions.id.roles.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js","components/Partial/Policy/index.js","api/useResources.js"],"names":["renderGroups","groups","renderList","group","service","resource","id","name","renderGroup","renderUsers","users","user","renderUser","renderServicePrincipals","service_principals","sp","renderSP","Roles","props","data","item","useResources","assignments","label","valuePath","renderValue","valueOrNone","title","policy","permissions","defaultOpen","errorPath","value","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx","Policy","policyPath","hasError","useContext","PartialContext","path_to_issues","some","path","includes","isEmpty","policyTitle","renderJson","json","object","JSON","stringify","replace","renderWithInnerHtml","policyContent","Object","entries","map","i","key","trigger","fontSize","triggerWhenOpen","transitionTime","open","size","defaultExpanded","expandIcon","defaultProps","ids","setData","loading","setLoading","useEffect","a","requests","API","Promise","all","response","console","info","error","message","asyncAPI"],"mappings":"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","file":"static/js/12.1f71cfb4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport { partialDataShape, valueOrNone } from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport { renderList } from '../../../utils/Partials/index';\nimport ResourceLink from '../../../components/ResourceLink/index';\nimport { useResources } from '../../../api/useResources';\nimport Policy from '../../../components/Partial/Policy';\n\nconst renderGroups = groups => {\n  const renderGroup = group => (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"groups\"\n      id={group.id}\n      name={group.name}\n    />\n  );\n  return renderList(groups, '', group => renderGroup(group));\n};\n\nconst renderUsers = users => {\n  const renderUser = user => (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"users\"\n      id={user.id}\n      name={user.name}\n    />\n  );\n  return renderList(users, '', user => renderUser(user));\n};\n\nconst renderServicePrincipals = service_principals => {\n  const renderSP = sp => (\n    <ResourceLink\n      service=\"aad\"\n      resource=\"service_principals\"\n      id={sp.id}\n      name={sp.name}\n    />\n  );\n  return renderList(service_principals, '', sp => renderSP(sp));\n};\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n  item: PropTypes.object,\n};\n\nconst Roles = props => {\n  const { data, item } = props;\n  const { data: users } = useResources(\n    'aad',\n    'users',\n    item.assignments ? item.assignments.users : [],\n  );\n  const { data: groups } = useResources(\n    'aad',\n    'groups',\n    item.assignments ? item.assignments.groups : [],\n  );\n  const { data: service_principals } = useResources(\n    'aad',\n    'service_principals',\n    item.assignments ? item.assignments.service_principals : [],\n  );\n\n  if (!data) return null;\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue\n          label=\"ID\" valuePath=\"id\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Description\"\n          valuePath=\"description\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Type\" valuePath=\"type\"\n          renderValue={valueOrNone} />\n\n        <PartialValue\n          label=\"Role Type\"\n          valuePath=\"role_type\"\n          renderValue={valueOrNone}\n        />\n\n        <PartialValue\n          label=\"Assignable Scopes\"\n          valuePath=\"assignable_scopes\"\n          renderValue={valueOrNone}\n        />\n        <PartialValue\n          label=\"Custom Subscriptions Owner Roles\"\n          valuePath=\"custom_subscription_owner_role\"\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"Permissions\">\n          <Policy\n            name=''\n            policy={item.permissions}\n            defaultOpen\n          />\n        </TabPane>\n        <TabPane title=\"Assignments\">\n          {item.assignments.users && <>\n            <PartialValue\n              label=\"Users\"\n              errorPath=\"users\"\n              value=\"\" />\n            <ul>\n              {renderUsers(users)}\n            </ul>\n          </>}\n\n          {item.assignments.groups && <>\n            <PartialValue\n              label=\"Groups\"\n              errorPath=\"groups\"\n              value=\"\" />\n            <ul>\n              {renderGroups(groups)}\n            </ul>\n          </>}\n\n          {item.assignments.service_principals && <>\n            <PartialValue\n              label=\"Service Principals\"\n              errorPath=\"serviceprincipals\"\n              value=\"\" />\n            <ul>\n              {renderServicePrincipals(service_principals)}\n            </ul>\n          </>}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nRoles.propTypes = propTypes;\n\nexport default Roles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Collapsible from 'react-collapsible';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport size from 'lodash/size';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { PartialContext } from '../context';\nimport PartialValue from '../PartialValue';\nimport { renderWithInnerHtml } from '../../../utils/Partials';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  name: PropTypes.string,\n  policy: PropTypes.object.isRequired,\n  policyPath: PropTypes.string,\n  defaultOpen: PropTypes.bool,\n};\n\nconst defaultProps = {\n  defaultOpen: false,\n};\n\nconst Policy = props => {\n  const { \n    name, \n    policy, \n    policyPath,\n    defaultOpen,\n  } = props;\n\n  const { path_to_issues } = useContext(PartialContext);\n  const hasError = path_to_issues.some(path => path.includes(policyPath));\n\n  if (isEmpty(policy)) return null;\n\n  const policyTitle = (\n    <h4 className=\"policy-title\">\n      {name}\n    </h4>\n  );\n\n  const displayJson = object => \n    JSON.stringify(object, null, 2)\n      .replace(/ /gm, '&nbsp;')\n      .replace(/\\n/gm, '<br/>');\n\n  const renderJson = (json, errorPath) => (\n    <PartialValue \n      value={displayJson(json)}\n      errorPath={errorPath}\n      renderValue={value => (\n        renderWithInnerHtml(\n          value,\n        )\n      )}\n    />\n  );\n\n  const policyContent = (\n    <code>\n      {'{'}\n      {Object.entries(policy).map(([key, value], i) => (\n        <div \n          key={i}\n          className={cx({ 'inline': typeof(value) === 'string' })}\n        >\n          {`\"${key}\":\\xa0`}\n          {key === 'Statement' ? (\n            <>\n              [<br/>\n              {value.map((object, i) => (\n                <Collapsible\n                  key={i}\n                  trigger={\n                    <>\n                      <ExpandMoreIcon fontSize=\"inherit\"/>\n                      <span>{'{...}'}</span>\n                    </>\n                  }\n                  triggerWhenOpen={\n                    <ExpandLessIcon fontSize=\"inherit\"/>\n                  }\n                  transitionTime={1}\n                  open={true}\n                >\n                  {renderJson(object, `${policyPath}.Statement.${i}`)}\n                </Collapsible>\n              ))}\n              ]\n            </>\n          ) : (\n            <>\n              {renderJson(value)}\n            </>\n          )}\n          {i < size(policy) - 1 && ','}\n          <br/>\n        </div>    \n      ))}\n      {'}'}\n    </code>\n  );\n\n  return (\n    <div className=\"policy\">\n      {name ? (\n        <Accordion\n          defaultExpanded={defaultOpen || hasError}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon/>}\n          >\n            {policyTitle}\n          </AccordionSummary>\n          <AccordionDetails>\n            {policyContent}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        policyContent\n      )}\n    </div>\n  );\n};\n\nPolicy.propTypes = propTypes;\nPolicy.defaultProps = defaultProps;\n\nexport default Policy;\n","import { useEffect, useState } from 'react';\nimport * as API from './api';\n\n/**\n * React Hook to fetch API data and re-render the component\n * @param {*} path\n */\nexport const useResources = (service, resource, ids) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const asyncAPI = async () => {\n      if (service && resource && ids) {\n        setLoading(true);\n        try {\n          const requests = ids.map(id =>\n            API.get(`services/${service}/resources/${resource}/${id}`),\n          );\n          const response = await Promise.all(requests);\n          console.info('useResources response', service, resource, ids, response);\n          setData(response);\n        } catch (e) {\n          console.error(e.message);\n        }\n        setLoading(false);\n      }\n    };\n    asyncAPI();\n  }, [ids]);\n\n  return {\n    data,\n    loading,\n  };\n};\n"],"sourceRoot":""}