{"version":3,"sources":["partials/gcp/cloudstorage.projects.id.buckets.id/index.js","components/InformationsWrapper/index.js","components/Partial/PartialTabs/PartialTabPane/index.js"],"names":["renderACL","acls","path","map","_","key","valuePath","renderObjACL","acl","Buckets","props","data","iams","member_bindings","get","default_object_acl","label","renderValue","formatDate","convertBoolToEnable","title","isEmpty","Object","entries","iam","value","item","InformationsWrapper","children","className","PartialTabPane","isSelected","disabled","onClick","useState","issueLevel","setIssueLevel","renderedTitle","SEVERITIES","icon","Provider","cx"],"mappings":"qNAoCMA,EAAY,SAACC,GACjB,OACE,cAAC,IAAD,CAAgBC,KAAK,OAArB,SACE,6BACGD,EAAKE,KAAI,SAACC,EAAGC,GAAJ,OACR,+BACE,cAAC,IAAD,CAAcC,UAAWD,EAAM,YAC/B,6BACE,6BACE,cAAC,IAAD,CAAcC,UAAWD,EAAM,gBAJ5BA,WAcbE,EAAe,SAACN,GACpB,OACE,cAAC,IAAD,CAAgBC,KAAK,qBAArB,SACE,6BACGD,EAAKE,KAAI,SAACK,EAAKH,GAAN,OACR,+BACE,cAAC,IAAD,CAAcC,UAAWD,EAAM,YAC/B,6BACE,6BACE,cAAC,IAAD,CAAcC,UAAWD,EAAM,gBAJ5BA,WA8EJI,UAhEC,SAACC,GAAW,IAClBC,EAASD,EAATC,KAER,IAAKA,EAAM,OAAO,KAElB,IA5DiBC,EA4DXC,EAAkBC,IAAIH,EAAM,CAAC,OAAQ,oBACrCV,EAAOa,IAAIH,EAAM,CAAC,OAAQ,SAC1BI,EAAqBD,IAAIH,EAAM,CAAC,OAAQ,uBAE9C,OACE,eAAC,IAAD,CAASA,KAAMA,EAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcK,MAAM,aAAaV,UAAU,eAE3C,cAAC,IAAD,CACEU,MAAM,gBACNV,UAAU,gBACVW,YAAaC,MAGf,cAAC,IAAD,CAAcF,MAAM,WAAWV,UAAU,aAEzC,cAAC,IAAD,CAAcU,MAAM,gBAAgBV,UAAU,kBAE9C,cAAC,IAAD,CACEU,MAAM,UACNV,UAAU,kBACVW,YAAaE,MAGf,cAAC,IAAD,CACEH,MAAM,aACNV,UAAU,qBACVW,YAAaE,SAIjB,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,MAAM,kBAAf,SACIC,IAAQR,GAGR,yCAjGOD,EA+FGU,OAAOC,QAAQV,GA7FjC,6BACGD,EAAKT,KAAI,mCAAEE,EAAF,KAAOmB,EAAP,YACR,+BACE,cAAC,IAAD,CAAclB,UAAWD,EAAKoB,MAAOpB,IACrC,6BACGmB,EAAIrB,KAAI,SAACuB,GAAD,OACP,6BAAgBA,GAAPA,UAJNrB,WAiGT,cAAC,IAAD,CAASe,MAAM,kBAAf,SACIC,IAAQpB,GAA0B,wCAAlBD,EAAUC,KAG9B,cAAC,IAAD,CAASmB,MAAM,iCAAf,SACIC,IAAQN,GAGR,wCAFAR,EAAaQ,a,wDCtGVY,IAda,SAAAjB,GAAU,IAC5BkB,EAAalB,EAAbkB,SAER,OACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,QAAd,0BACCD,O,qNCyCQE,G,OAtCQ,SAACpB,GAAW,IAE/BU,EAKEV,EALFU,MACAW,EAIErB,EAJFqB,WACAC,EAGEtB,EAHFsB,SACAC,EAEEvB,EAFFuB,QACAL,EACElB,EADFkB,SAN8B,EASIM,mBAAS,IATb,mBASzBC,EATyB,KASbC,EATa,KAW1BC,EAAgBF,EAElB,qCACGf,EACAkB,IAAWH,GAAYI,QAG1BnB,EAGJ,OACE,cAAC,IAAkBoB,SAAnB,CAA4Bf,MAAOW,EAAnC,SACE,cAAC,IAAD,CACEhB,MAAOiB,EACPR,UAAWY,IAAG,mBAAoBN,GAClCJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EALX,SAOGL","file":"static/js/52.6f862601.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Partial, PartialValue } from '../../../components/Partial';\nimport {\n  partialDataShape,\n  convertBoolToEnable,\n  formatDate,\n} from '../../../utils/Partials';\nimport { TabsMenu, TabPane } from '../../../components/Partial/PartialTabs';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport InformationsWrapper from '../../../components/InformationsWrapper';\nimport PartialSection from '../../../components/Partial/PartialSection/index';\n\nconst propTypes = {\n  data: PropTypes.shape(partialDataShape).isRequired,\n};\n\nconst renderIAM = (iams) => {\n  return (\n    <ul>\n      {iams.map(([key, iam]) => (\n        <li key={key}>\n          <PartialValue valuePath={key} value={key} />\n          <ul>\n            {iam.map((item) => (\n              <li key={item}>{item}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst renderACL = (acls) => {\n  return (\n    <PartialSection path=\"acls\">\n      <ul>\n        {acls.map((_, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.entity'} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst renderObjACL = (acls) => {\n  return (\n    <PartialSection path=\"default_object_acl\">\n      <ul>\n        {acls.map((acl, key) => (\n          <li key={key}>\n            <PartialValue valuePath={key + '.entity'} />\n            <ul>\n              <li>\n                <PartialValue valuePath={key + '.role'} />\n              </li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </PartialSection>\n  );\n};\n\nconst Buckets = (props) => {\n  const { data } = props;\n\n  if (!data) return null;\n\n  const member_bindings = get(data, ['item', 'member_bindings']);\n  const acls = get(data, ['item', 'acls']);\n  const default_object_acl = get(data, ['item', 'default_object_acl']);\n\n  return (\n    <Partial data={data}>\n      <InformationsWrapper>\n        <PartialValue label=\"Project ID\" valuePath=\"project_id\" />\n\n        <PartialValue\n          label=\"Creation Date\"\n          valuePath=\"creation_date\"\n          renderValue={formatDate}\n        />\n\n        <PartialValue label=\"Location\" valuePath=\"location\" />\n\n        <PartialValue label=\"Storage Class\" valuePath=\"storage_class\" />\n\n        <PartialValue\n          label=\"Logging\"\n          valuePath=\"logging_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n\n        <PartialValue\n          label=\"Versioning\"\n          valuePath=\"versioning_enabled\"\n          renderValue={convertBoolToEnable}\n        />\n      </InformationsWrapper>\n\n      <TabsMenu>\n        <TabPane title=\"IAM Permissions\">\n          {!isEmpty(member_bindings) ? (\n            renderIAM(Object.entries(member_bindings))\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n\n        <TabPane title=\"ACL Permissions\">\n          {!isEmpty(acls) ? renderACL(acls) : <span>None</span>}\n        </TabPane>\n\n        <TabPane title=\"Default Object ACL Permissions\">\n          {!isEmpty(default_object_acl) ? (\n            renderObjACL(default_object_acl)\n          ) : (\n            <span>None</span>\n          )}\n        </TabPane>\n      </TabsMenu>\n    </Partial>\n  );\n};\n\nBuckets.propTypes = propTypes;\n\nexport default Buckets;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst InformationsWrapper = props => {\n  const { children } = props;\n\n  return (\n    <div className=\"informations-wrapper\">\n      <h4 className=\"title\">Informations</h4>\n      {children}\n    </div>\n  );\n};\n\n\nInformationsWrapper.propTypes = propTypes;\n\nexport default InformationsWrapper;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { TabPane } from '../../../Tabs';\nimport { PartialTabContext } from '../../context';\nimport { SEVERITIES } from '../../../../utils/Dashboard';\n\nimport './style.scss';\n\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.any.isRequired,\n};\n\nconst PartialTabPane = (props) => {\n  const {\n    title,\n    isSelected,\n    disabled,\n    onClick,\n    children,\n  } = props;\n\n  const [issueLevel, setIssueLevel] = useState('');\n\n  const renderedTitle = issueLevel \n    ? (\n      <>\n        {title}\n        {SEVERITIES[issueLevel].icon}\n      </>\n    ) : (\n      title\n    ); \n\n  return (\n    <PartialTabContext.Provider value={setIssueLevel}>\n      <TabPane \n        title={renderedTitle}\n        className={cx('partial-tab-pane', issueLevel)}\n        isSelected={isSelected}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {children}\n      </TabPane>\n    </PartialTabContext.Provider>\n  );\n};\n\nPartialTabPane.propTypes = propTypes;\n\nexport default PartialTabPane;\n"],"sourceRoot":""}