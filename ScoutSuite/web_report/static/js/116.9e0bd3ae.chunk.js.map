{"version":3,"sources":["partials/aws/ec2.regions.id.vpcs.id.instances.id/NetworkInterfaces/index.js"],"names":["NetworkInterfaces","props","interfaces","Object","entries","map","i","id","networkInterface","Description","label","value","Association","PublicIp","PublicDnsName","Attachment","InstanceId","isEmpty","Ipv6Addresses","address","Ipv6Address","PrivateIpAddresses","Primary","PrivateIpAddress","Groups","renderList","renderSecurityGroupLink"],"mappings":"0KA6FeA,UA9EW,SAAAC,GAAU,IAC1BC,EAAeD,EAAfC,WAER,OACEC,OAAOC,QAAQF,GAAYG,KAAI,WAAyBC,GAAzB,uBAAEC,EAAF,KAAMC,EAAN,YAC7B,gCACE,6BAAKD,IACL,+BACGC,EAAiBC,aAChB,6BACE,cAAC,IAAD,CACEC,MAAM,cACNC,MAAOH,EAAiBC,gBAI7BD,EAAiBI,aAChB,qCACE,6BACE,cAAC,IAAD,CACEF,MAAM,YACNC,MAAOH,EAAiBI,YAAYC,aAGxC,6BACE,cAAC,IAAD,CACEH,MAAM,aACNC,MAAOH,EAAiBI,YAAYE,qBAK3CN,EAAiBO,YAChB,6BACE,cAAC,IAAD,CACEL,MAAM,uBACNC,MAAOH,EAAiBO,WAAWC,gBAIvCC,IAAQT,EAAiBU,gBACzB,qCACE,iDACA,6BACGV,EAAiBU,cAAcb,KAAI,SAACc,EAASb,GAAV,OAClC,6BACGa,EAAQC,aADFd,WAOhBE,EAAiBa,mBAAmBhB,KAAI,SAACc,EAASb,GAAV,OACvC,6BACE,cAAC,IAAD,CACEI,MAAOS,EAAQG,QACb,qBAAuB,aAEzBX,MAAOQ,EAAQI,oBALVjB,OASTW,IAAQT,EAAiBgB,SACzB,6BACE,cAAC,IAAD,CACEd,MAAM,kBACNC,MAAOc,YAAWjB,EAAiBgB,OAAQ,GAAIE,cA7D/CpB","file":"static/js/116.9e0bd3ae.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { \n  renderList, \n  renderSecurityGroupLink \n} from '../../../../utils/Partials';\nimport DetailedValue from '../../../../components/DetailedValue';\n\n\nconst propTypes = {\n  interfaces: PropTypes.object,\n};\n\nconst NetworkInterfaces = props => {\n  const { interfaces } = props;\n\n  return (\n    Object.entries(interfaces).map(([id, networkInterface], i) => (\n      <div key={i}>\n        <h5>{id}</h5>\n        <ul>\n          {networkInterface.Description && (\n            <li>\n              <DetailedValue\n                label=\"Description\"\n                value={networkInterface.Description}\n              />\n            </li>\n          )}\n          {networkInterface.Association && (\n            <>\n              <li>\n                <DetailedValue\n                  label=\"Public IP\"\n                  value={networkInterface.Association.PublicIp}\n                />\n              </li>\n              <li>\n                <DetailedValue\n                  label=\"Public DNS\"\n                  value={networkInterface.Association.PublicDnsName}\n                />\n              </li>\n            </>\n          )}\n          {networkInterface.Attachment && (\n            <li>\n              <DetailedValue\n                label=\"Attached to Instance\"\n                value={networkInterface.Attachment.InstanceId}\n              />\n            </li>\n          )}\n          {!isEmpty(networkInterface.Ipv6Addresses) && (\n            <>\n              <li>IPv6 Addresses:</li>\n              <ul>\n                {networkInterface.Ipv6Addresses.map((address, i) => (\n                  <li key={i}>\n                    {address.Ipv6Address}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          {networkInterface.PrivateIpAddresses.map((address, i) => (\n            <li key={i}>\n              <DetailedValue\n                label={address.Primary ? \n                  'Primary Private IP' : 'Private IP'\n                }\n                value={address.PrivateIpAddress}\n              />\n            </li>\n          ))}\n          {!isEmpty(networkInterface.Groups) && (\n            <li>\n              <DetailedValue\n                label=\"Security Groups\"\n                value={renderList(networkInterface.Groups, '', renderSecurityGroupLink)}\n              />\n            </li>\n          )}\n        </ul>\n      </div>\n    ))\n  );\n};\n\nNetworkInterfaces.propTypes = propTypes;\n\nexport default NetworkInterfaces;\n"],"sourceRoot":""}